// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PSAPIRestaurantSystem;

namespace PSAPIRestaurantSystem.Migrations
{
    [DbContext(typeof(RestaurantContext))]
    [Migration("20200522104612_Update25")]
    partial class Update25
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("PSAPIRestaurantSystem.Models.Admin", b =>
                {
                    b.Property<int>("AdminId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("WorkEmail")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("AdminId");

                    b.HasIndex("EmployeeId")
                        .IsUnique();

                    b.ToTable("Admins");

                    b.HasData(
                        new
                        {
                            AdminId = 1,
                            EmployeeId = 1,
                            WorkEmail = "workmail@mymail.com"
                        });
                });

            modelBuilder.Entity("PSAPIRestaurantSystem.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("BeganWork")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("EmployeeState")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndedWork")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("RegisteredByAdminId")
                        .HasColumnType("int");

                    b.Property<int>("Salary")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("EmployeeId");

                    b.HasIndex("RegisteredByAdminId");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            EmployeeId = 1,
                            BeganWork = new DateTime(2020, 5, 22, 13, 46, 11, 326, DateTimeKind.Local).AddTicks(742),
                            EmployeeState = 1,
                            EndedWork = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Salary = 1000,
                            UserId = 1
                        },
                        new
                        {
                            EmployeeId = 2,
                            BeganWork = new DateTime(2020, 5, 22, 13, 46, 11, 326, DateTimeKind.Local).AddTicks(1780),
                            EmployeeState = 1,
                            EndedWork = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Salary = 3000,
                            UserId = 2
                        },
                        new
                        {
                            EmployeeId = 3,
                            BeganWork = new DateTime(2020, 5, 22, 13, 46, 11, 326, DateTimeKind.Local).AddTicks(1809),
                            EmployeeState = 1,
                            EndedWork = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Salary = 2000,
                            UserId = 9
                        },
                        new
                        {
                            EmployeeId = 4,
                            BeganWork = new DateTime(2020, 5, 22, 13, 46, 11, 326, DateTimeKind.Local).AddTicks(1813),
                            EmployeeState = 1,
                            EndedWork = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Salary = 1500,
                            UserId = 10
                        });
                });

            modelBuilder.Entity("PSAPIRestaurantSystem.Models.Menu", b =>
                {
                    b.Property<int>("MenuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("Changed")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("MenuId");

                    b.ToTable("Menus");

                    b.HasData(
                        new
                        {
                            MenuId = 1,
                            Changed = new DateTime(2020, 5, 22, 13, 46, 11, 321, DateTimeKind.Local).AddTicks(3418),
                            Title = "Sriubos"
                        },
                        new
                        {
                            MenuId = 2,
                            Changed = new DateTime(2020, 5, 22, 13, 46, 11, 324, DateTimeKind.Local).AddTicks(2715),
                            Title = "Užkandžiai"
                        },
                        new
                        {
                            MenuId = 3,
                            Changed = new DateTime(2020, 5, 22, 13, 46, 11, 324, DateTimeKind.Local).AddTicks(2756),
                            Title = "Salotos"
                        },
                        new
                        {
                            MenuId = 4,
                            Changed = new DateTime(2020, 5, 22, 13, 46, 11, 324, DateTimeKind.Local).AddTicks(2764),
                            Title = "Kiauliena"
                        },
                        new
                        {
                            MenuId = 5,
                            Changed = new DateTime(2020, 5, 22, 13, 46, 11, 324, DateTimeKind.Local).AddTicks(2768),
                            Title = "Vistiena"
                        },
                        new
                        {
                            MenuId = 6,
                            Changed = new DateTime(2020, 5, 22, 13, 46, 11, 324, DateTimeKind.Local).AddTicks(2768),
                            Title = "Zuvis"
                        },
                        new
                        {
                            MenuId = 7,
                            Changed = new DateTime(2020, 5, 22, 13, 46, 11, 324, DateTimeKind.Local).AddTicks(2772),
                            Title = "Miltiniai patiekalai"
                        },
                        new
                        {
                            MenuId = 8,
                            Changed = new DateTime(2020, 5, 22, 13, 46, 11, 324, DateTimeKind.Local).AddTicks(2776),
                            Title = "Gaivieji gėrimai"
                        },
                        new
                        {
                            MenuId = 9,
                            Changed = new DateTime(2020, 5, 22, 13, 46, 11, 324, DateTimeKind.Local).AddTicks(2780),
                            Title = "Alus"
                        },
                        new
                        {
                            MenuId = 10,
                            Changed = new DateTime(2020, 5, 22, 13, 46, 11, 324, DateTimeKind.Local).AddTicks(2780),
                            Title = "Šampanas"
                        },
                        new
                        {
                            MenuId = 11,
                            Changed = new DateTime(2020, 5, 22, 13, 46, 11, 324, DateTimeKind.Local).AddTicks(2784),
                            Title = "Konjakas"
                        },
                        new
                        {
                            MenuId = 12,
                            Changed = new DateTime(2020, 5, 22, 13, 46, 11, 324, DateTimeKind.Local).AddTicks(2788),
                            Title = "Degtinė"
                        },
                        new
                        {
                            MenuId = 13,
                            Changed = new DateTime(2020, 5, 22, 13, 46, 11, 324, DateTimeKind.Local).AddTicks(2793),
                            Title = "Brendis"
                        },
                        new
                        {
                            MenuId = 14,
                            Changed = new DateTime(2020, 5, 22, 13, 46, 11, 324, DateTimeKind.Local).AddTicks(2793),
                            Title = "Vynas"
                        },
                        new
                        {
                            MenuId = 15,
                            Changed = new DateTime(2020, 5, 22, 13, 46, 11, 324, DateTimeKind.Local).AddTicks(2797),
                            Title = "Sidras"
                        },
                        new
                        {
                            MenuId = 16,
                            Changed = new DateTime(2020, 5, 22, 13, 46, 11, 324, DateTimeKind.Local).AddTicks(2801),
                            Title = "Burbonas"
                        },
                        new
                        {
                            MenuId = 17,
                            Changed = new DateTime(2020, 5, 22, 13, 46, 11, 324, DateTimeKind.Local).AddTicks(2805),
                            Title = "Džinas"
                        },
                        new
                        {
                            MenuId = 18,
                            Changed = new DateTime(2020, 5, 22, 13, 46, 11, 324, DateTimeKind.Local).AddTicks(2805),
                            Title = "Viskis"
                        });
                });

            modelBuilder.Entity("PSAPIRestaurantSystem.Models.MenuEntry", b =>
                {
                    b.Property<int>("MenuEntryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("Changed")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("MenuEntryName")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("MenuId")
                        .HasColumnType("int");

                    b.Property<double>("Price")
                        .HasColumnType("double");

                    b.HasKey("MenuEntryId");

                    b.HasIndex("MenuId");

                    b.ToTable("MenuEntries");

                    b.HasData(
                        new
                        {
                            MenuEntryId = 1,
                            Changed = new DateTime(2020, 5, 22, 13, 46, 11, 324, DateTimeKind.Local).AddTicks(6029),
                            MenuEntryName = "Dienos sriuba",
                            MenuId = 1,
                            Price = 1.2
                        },
                        new
                        {
                            MenuEntryId = 2,
                            Changed = new DateTime(2020, 5, 22, 13, 46, 11, 324, DateTimeKind.Local).AddTicks(6628),
                            MenuEntryName = "Čili",
                            MenuId = 1,
                            Price = 3.0
                        },
                        new
                        {
                            MenuEntryId = 3,
                            Changed = new DateTime(2020, 5, 22, 13, 46, 11, 324, DateTimeKind.Local).AddTicks(6653),
                            MenuEntryName = "Cibulynė",
                            MenuId = 1,
                            Price = 2.0
                        },
                        new
                        {
                            MenuEntryId = 4,
                            Changed = new DateTime(2020, 5, 22, 13, 46, 11, 324, DateTimeKind.Local).AddTicks(6657),
                            MenuEntryName = "Šaltibarščiai",
                            MenuId = 1,
                            Price = 2.5
                        },
                        new
                        {
                            MenuEntryId = 5,
                            Changed = new DateTime(2020, 5, 22, 13, 46, 11, 324, DateTimeKind.Local).AddTicks(6661),
                            MenuEntryName = "Šviežių daržovių salotos",
                            MenuId = 3,
                            Price = 3.0
                        },
                        new
                        {
                            MenuEntryId = 6,
                            Changed = new DateTime(2020, 5, 22, 13, 46, 11, 324, DateTimeKind.Local).AddTicks(6665),
                            MenuEntryName = "Sveikuolių salotos ",
                            MenuId = 3,
                            Price = 3.5
                        },
                        new
                        {
                            MenuEntryId = 7,
                            Changed = new DateTime(2020, 5, 22, 13, 46, 11, 324, DateTimeKind.Local).AddTicks(6669),
                            MenuEntryName = "Vištienos salotos",
                            MenuId = 3,
                            Price = 3.5
                        },
                        new
                        {
                            MenuEntryId = 8,
                            Changed = new DateTime(2020, 5, 22, 13, 46, 11, 324, DateTimeKind.Local).AddTicks(6674),
                            MenuEntryName = "Graikiškos salotos ",
                            MenuId = 3,
                            Price = 4.5
                        },
                        new
                        {
                            MenuEntryId = 9,
                            Changed = new DateTime(2020, 5, 22, 13, 46, 11, 324, DateTimeKind.Local).AddTicks(6674),
                            MenuEntryName = "Burokėlių salotos su fetos sūriu ",
                            MenuId = 3,
                            Price = 4.5
                        });
                });

            modelBuilder.Entity("PSAPIRestaurantSystem.Models.Order", b =>
                {
                    b.Property<int>("OrderNum")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<int?>("ManagedByWaiterId")
                        .HasColumnType("int");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime(6)");

                    b.Property<double>("Price")
                        .HasColumnType("double");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.HasKey("OrderNum");

                    b.HasIndex("ManagedByWaiterId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            OrderNum = 1,
                            Duration = 0,
                            OrderDate = new DateTime(2020, 5, 22, 13, 46, 11, 327, DateTimeKind.Local).AddTicks(2532),
                            Price = 0.0,
                            State = 6
                        },
                        new
                        {
                            OrderNum = 2,
                            Duration = 0,
                            OrderDate = new DateTime(2020, 5, 22, 13, 46, 11, 327, DateTimeKind.Local).AddTicks(3960),
                            Price = 0.0,
                            State = 6
                        },
                        new
                        {
                            OrderNum = 3,
                            Duration = 0,
                            OrderDate = new DateTime(2020, 5, 22, 13, 46, 11, 327, DateTimeKind.Local).AddTicks(4022),
                            Price = 0.0,
                            State = 6
                        },
                        new
                        {
                            OrderNum = 4,
                            Duration = 0,
                            OrderDate = new DateTime(2020, 5, 22, 13, 46, 11, 327, DateTimeKind.Local).AddTicks(4026),
                            Price = 0.0,
                            State = 6
                        },
                        new
                        {
                            OrderNum = 5,
                            Duration = 0,
                            OrderDate = new DateTime(2020, 5, 22, 13, 46, 11, 327, DateTimeKind.Local).AddTicks(4026),
                            Price = 0.0,
                            State = 6
                        },
                        new
                        {
                            OrderNum = 6,
                            Duration = 0,
                            OrderDate = new DateTime(2020, 5, 22, 13, 46, 11, 327, DateTimeKind.Local).AddTicks(4034),
                            Price = 0.0,
                            State = 6
                        },
                        new
                        {
                            OrderNum = 7,
                            Duration = 0,
                            OrderDate = new DateTime(2020, 5, 22, 13, 46, 11, 327, DateTimeKind.Local).AddTicks(4034),
                            Price = 0.0,
                            State = 6
                        },
                        new
                        {
                            OrderNum = 8,
                            Duration = 0,
                            OrderDate = new DateTime(2020, 5, 22, 13, 46, 11, 327, DateTimeKind.Local).AddTicks(4038),
                            Price = 0.0,
                            State = 6
                        },
                        new
                        {
                            OrderNum = 9,
                            Duration = 0,
                            OrderDate = new DateTime(2020, 5, 22, 13, 46, 11, 327, DateTimeKind.Local).AddTicks(4042),
                            Price = 0.0,
                            State = 6
                        },
                        new
                        {
                            OrderNum = 10,
                            Duration = 0,
                            OrderDate = new DateTime(2020, 5, 22, 13, 46, 11, 327, DateTimeKind.Local).AddTicks(4046),
                            Price = 0.0,
                            State = 6
                        },
                        new
                        {
                            OrderNum = 11,
                            Duration = 0,
                            OrderDate = new DateTime(2020, 5, 22, 13, 46, 11, 327, DateTimeKind.Local).AddTicks(4046),
                            Price = 0.0,
                            State = 6
                        },
                        new
                        {
                            OrderNum = 12,
                            Duration = 0,
                            OrderDate = new DateTime(2020, 5, 22, 13, 46, 11, 327, DateTimeKind.Local).AddTicks(4050),
                            Price = 0.0,
                            State = 6
                        },
                        new
                        {
                            OrderNum = 13,
                            Duration = 0,
                            OrderDate = new DateTime(2020, 5, 22, 13, 46, 11, 327, DateTimeKind.Local).AddTicks(4055),
                            Price = 0.0,
                            State = 6
                        },
                        new
                        {
                            OrderNum = 14,
                            Duration = 0,
                            OrderDate = new DateTime(2020, 5, 22, 13, 46, 11, 327, DateTimeKind.Local).AddTicks(4059),
                            Price = 0.0,
                            State = 6
                        },
                        new
                        {
                            OrderNum = 15,
                            Duration = 0,
                            OrderDate = new DateTime(2020, 5, 22, 13, 46, 11, 327, DateTimeKind.Local).AddTicks(4063),
                            Price = 0.0,
                            State = 6
                        },
                        new
                        {
                            OrderNum = 16,
                            Duration = 0,
                            OrderDate = new DateTime(2020, 5, 22, 13, 46, 11, 327, DateTimeKind.Local).AddTicks(4067),
                            Price = 0.0,
                            State = 6
                        },
                        new
                        {
                            OrderNum = 17,
                            Duration = 0,
                            OrderDate = new DateTime(2020, 5, 22, 13, 46, 11, 327, DateTimeKind.Local).AddTicks(4071),
                            Price = 0.0,
                            State = 6
                        },
                        new
                        {
                            OrderNum = 18,
                            Duration = 0,
                            OrderDate = new DateTime(2020, 5, 22, 13, 46, 11, 327, DateTimeKind.Local).AddTicks(4075),
                            Price = 0.0,
                            State = 6
                        },
                        new
                        {
                            OrderNum = 19,
                            Duration = 0,
                            OrderDate = new DateTime(2020, 5, 22, 13, 46, 11, 327, DateTimeKind.Local).AddTicks(4075),
                            Price = 0.0,
                            State = 6
                        },
                        new
                        {
                            OrderNum = 20,
                            Duration = 0,
                            OrderDate = new DateTime(2020, 5, 22, 13, 46, 11, 327, DateTimeKind.Local).AddTicks(4079),
                            Price = 0.0,
                            State = 6
                        },
                        new
                        {
                            OrderNum = 21,
                            Duration = 0,
                            OrderDate = new DateTime(2020, 5, 22, 13, 46, 11, 327, DateTimeKind.Local).AddTicks(4083),
                            Price = 0.0,
                            State = 6
                        },
                        new
                        {
                            OrderNum = 22,
                            Duration = 0,
                            OrderDate = new DateTime(2020, 5, 22, 13, 46, 11, 327, DateTimeKind.Local).AddTicks(4087),
                            Price = 0.0,
                            State = 6
                        },
                        new
                        {
                            OrderNum = 23,
                            Duration = 0,
                            OrderDate = new DateTime(2020, 5, 22, 13, 46, 11, 327, DateTimeKind.Local).AddTicks(4087),
                            Price = 0.0,
                            State = 6
                        },
                        new
                        {
                            OrderNum = 24,
                            Duration = 0,
                            OrderDate = new DateTime(2020, 5, 22, 13, 46, 11, 327, DateTimeKind.Local).AddTicks(4091),
                            Price = 0.0,
                            State = 6
                        },
                        new
                        {
                            OrderNum = 25,
                            Duration = 0,
                            OrderDate = new DateTime(2020, 5, 22, 13, 46, 11, 327, DateTimeKind.Local).AddTicks(4096),
                            Price = 0.0,
                            State = 6
                        },
                        new
                        {
                            OrderNum = 26,
                            Duration = 0,
                            OrderDate = new DateTime(2020, 5, 22, 13, 46, 11, 327, DateTimeKind.Local).AddTicks(4096),
                            Price = 0.0,
                            State = 6
                        },
                        new
                        {
                            OrderNum = 27,
                            Duration = 0,
                            OrderDate = new DateTime(2020, 5, 22, 13, 46, 11, 327, DateTimeKind.Local).AddTicks(4100),
                            Price = 0.0,
                            State = 6
                        },
                        new
                        {
                            OrderNum = 28,
                            Duration = 0,
                            OrderDate = new DateTime(2020, 5, 22, 13, 46, 11, 327, DateTimeKind.Local).AddTicks(4104),
                            Price = 0.0,
                            State = 6
                        },
                        new
                        {
                            OrderNum = 29,
                            Duration = 0,
                            OrderDate = new DateTime(2020, 5, 22, 13, 46, 11, 327, DateTimeKind.Local).AddTicks(4108),
                            Price = 0.0,
                            State = 6
                        },
                        new
                        {
                            OrderNum = 30,
                            Duration = 0,
                            OrderDate = new DateTime(2020, 5, 22, 13, 46, 11, 327, DateTimeKind.Local).AddTicks(4108),
                            Price = 0.0,
                            State = 6
                        },
                        new
                        {
                            OrderNum = 31,
                            Duration = 0,
                            OrderDate = new DateTime(2020, 5, 22, 13, 46, 11, 327, DateTimeKind.Local).AddTicks(4112),
                            Price = 0.0,
                            State = 6
                        },
                        new
                        {
                            OrderNum = 32,
                            Duration = 0,
                            OrderDate = new DateTime(2020, 5, 22, 13, 46, 11, 327, DateTimeKind.Local).AddTicks(4116),
                            Price = 0.0,
                            State = 6
                        },
                        new
                        {
                            OrderNum = 33,
                            Duration = 45,
                            ManagedByWaiterId = 1,
                            OrderDate = new DateTime(2020, 5, 22, 13, 46, 11, 327, DateTimeKind.Local).AddTicks(4116),
                            Price = 10.0,
                            State = 5
                        },
                        new
                        {
                            OrderNum = 34,
                            Duration = 0,
                            ManagedByWaiterId = 1,
                            OrderDate = new DateTime(2020, 5, 22, 13, 46, 11, 327, DateTimeKind.Local).AddTicks(5023),
                            Price = 0.0,
                            State = 4
                        },
                        new
                        {
                            OrderNum = 35,
                            Duration = 51,
                            ManagedByWaiterId = 2,
                            OrderDate = new DateTime(2020, 5, 22, 13, 46, 11, 327, DateTimeKind.Local).AddTicks(5035),
                            Price = 11.0,
                            State = 5
                        },
                        new
                        {
                            OrderNum = 36,
                            Duration = 0,
                            ManagedByWaiterId = 3,
                            OrderDate = new DateTime(2020, 5, 22, 13, 46, 11, 327, DateTimeKind.Local).AddTicks(5060),
                            Price = 0.0,
                            State = 4
                        },
                        new
                        {
                            OrderNum = 37,
                            Duration = 30,
                            ManagedByWaiterId = 2,
                            OrderDate = new DateTime(2020, 5, 22, 13, 46, 11, 327, DateTimeKind.Local).AddTicks(5064),
                            Price = 20.0,
                            State = 5
                        },
                        new
                        {
                            OrderNum = 38,
                            Duration = 37,
                            ManagedByWaiterId = 1,
                            OrderDate = new DateTime(2020, 5, 22, 13, 46, 11, 327, DateTimeKind.Local).AddTicks(5068),
                            Price = 40.0,
                            State = 5
                        },
                        new
                        {
                            OrderNum = 39,
                            Duration = 0,
                            ManagedByWaiterId = 3,
                            OrderDate = new DateTime(2020, 5, 22, 13, 46, 11, 327, DateTimeKind.Local).AddTicks(5072),
                            Price = 0.0,
                            State = 4
                        },
                        new
                        {
                            OrderNum = 40,
                            Duration = 153,
                            ManagedByWaiterId = 2,
                            OrderDate = new DateTime(2020, 5, 22, 13, 46, 11, 327, DateTimeKind.Local).AddTicks(5076),
                            Price = 65.0,
                            State = 5
                        },
                        new
                        {
                            OrderNum = 41,
                            Duration = 0,
                            OrderDate = new DateTime(2020, 5, 22, 13, 46, 11, 327, DateTimeKind.Local).AddTicks(5076),
                            Price = 0.0,
                            State = 1
                        },
                        new
                        {
                            OrderNum = 42,
                            Duration = 0,
                            OrderDate = new DateTime(2020, 5, 22, 13, 46, 11, 327, DateTimeKind.Local).AddTicks(5080),
                            Price = 0.0,
                            State = 1
                        },
                        new
                        {
                            OrderNum = 43,
                            Duration = 0,
                            OrderDate = new DateTime(2020, 5, 22, 13, 46, 11, 327, DateTimeKind.Local).AddTicks(5084),
                            Price = 0.0,
                            State = 1
                        },
                        new
                        {
                            OrderNum = 44,
                            Duration = 0,
                            OrderDate = new DateTime(2020, 5, 22, 13, 46, 11, 327, DateTimeKind.Local).AddTicks(5088),
                            Price = 0.0,
                            State = 1
                        },
                        new
                        {
                            OrderNum = 45,
                            Duration = 0,
                            OrderDate = new DateTime(2020, 5, 22, 13, 46, 11, 327, DateTimeKind.Local).AddTicks(5088),
                            Price = 0.0,
                            State = 1
                        },
                        new
                        {
                            OrderNum = 46,
                            Duration = 0,
                            OrderDate = new DateTime(2020, 5, 22, 13, 46, 11, 327, DateTimeKind.Local).AddTicks(5092),
                            Price = 0.0,
                            State = 1
                        });
                });

            modelBuilder.Entity("PSAPIRestaurantSystem.Models.OrderedMeal", b =>
                {
                    b.Property<int>("OrderedMealId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int?>("InOrderOrderId")
                        .HasColumnType("int");

                    b.Property<int?>("InOrderOrderNum")
                        .HasColumnType("int");

                    b.Property<int?>("InTakeoutTakeoutOrderId")
                        .HasColumnType("int");

                    b.Property<int?>("InTakeoutTakeoutOrderNum")
                        .HasColumnType("int");

                    b.Property<int>("MenuEntryId")
                        .HasColumnType("int");

                    b.Property<double>("Price")
                        .HasColumnType("double");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("OrderedMealId");

                    b.HasIndex("InOrderOrderNum");

                    b.HasIndex("InTakeoutTakeoutOrderNum");

                    b.HasIndex("MenuEntryId");

                    b.ToTable("OrderedMeals");

                    b.HasData(
                        new
                        {
                            OrderedMealId = 1,
                            InOrderOrderId = 33,
                            MenuEntryId = 1,
                            Price = 6.0,
                            Quantity = 5
                        },
                        new
                        {
                            OrderedMealId = 2,
                            InOrderOrderId = 35,
                            MenuEntryId = 1,
                            Price = 6.5,
                            Quantity = 1
                        },
                        new
                        {
                            OrderedMealId = 3,
                            InOrderOrderId = 37,
                            MenuEntryId = 2,
                            Price = 4.0,
                            Quantity = 4
                        },
                        new
                        {
                            OrderedMealId = 4,
                            InOrderOrderId = 38,
                            MenuEntryId = 3,
                            Price = 3.0,
                            Quantity = 9
                        },
                        new
                        {
                            OrderedMealId = 5,
                            InOrderOrderId = 40,
                            MenuEntryId = 4,
                            Price = 1.0,
                            Quantity = 10
                        },
                        new
                        {
                            OrderedMealId = 6,
                            InOrderOrderId = 33,
                            MenuEntryId = 5,
                            Price = 10.0,
                            Quantity = 11
                        },
                        new
                        {
                            OrderedMealId = 7,
                            InOrderOrderId = 35,
                            MenuEntryId = 6,
                            Price = 16.0,
                            Quantity = 12
                        },
                        new
                        {
                            OrderedMealId = 8,
                            InOrderOrderId = 38,
                            MenuEntryId = 7,
                            Price = 13.0,
                            Quantity = 4
                        },
                        new
                        {
                            OrderedMealId = 9,
                            InOrderOrderId = 35,
                            MenuEntryId = 8,
                            Price = 12.49,
                            Quantity = 1
                        },
                        new
                        {
                            OrderedMealId = 10,
                            InOrderOrderId = 37,
                            MenuEntryId = 9,
                            Price = 3.3300000000000001,
                            Quantity = 2
                        },
                        new
                        {
                            OrderedMealId = 11,
                            InOrderOrderId = 40,
                            MenuEntryId = 1,
                            Price = 5.5899999999999999,
                            Quantity = 1
                        },
                        new
                        {
                            OrderedMealId = 12,
                            InOrderOrderId = 40,
                            MenuEntryId = 2,
                            Price = 6.1200000000000001,
                            Quantity = 2
                        },
                        new
                        {
                            OrderedMealId = 13,
                            InOrderOrderId = 33,
                            MenuEntryId = 3,
                            Price = 6.3899999999999997,
                            Quantity = 1
                        },
                        new
                        {
                            OrderedMealId = 14,
                            InOrderOrderId = 37,
                            MenuEntryId = 4,
                            Price = 5.6900000000000004,
                            Quantity = 3
                        },
                        new
                        {
                            OrderedMealId = 15,
                            InOrderOrderId = 38,
                            MenuEntryId = 5,
                            Price = 7.5999999999999996,
                            Quantity = 4
                        },
                        new
                        {
                            OrderedMealId = 16,
                            InTakeoutTakeoutOrderId = 1,
                            MenuEntryId = 6,
                            Price = 6.2000000000000002,
                            Quantity = 5
                        },
                        new
                        {
                            OrderedMealId = 17,
                            InTakeoutTakeoutOrderId = 5,
                            MenuEntryId = 7,
                            Price = 9.5999999999999996,
                            Quantity = 1
                        },
                        new
                        {
                            OrderedMealId = 18,
                            InTakeoutTakeoutOrderId = 7,
                            MenuEntryId = 8,
                            Price = 2.6000000000000001,
                            Quantity = 1
                        },
                        new
                        {
                            OrderedMealId = 19,
                            InTakeoutTakeoutOrderId = 10,
                            MenuEntryId = 9,
                            Price = 1.6000000000000001,
                            Quantity = 1
                        },
                        new
                        {
                            OrderedMealId = 20,
                            InTakeoutTakeoutOrderId = 12,
                            MenuEntryId = 1,
                            Price = 19.989999999999998,
                            Quantity = 2
                        },
                        new
                        {
                            OrderedMealId = 21,
                            InTakeoutTakeoutOrderId = 14,
                            MenuEntryId = 2,
                            Price = 6.1200000000000001,
                            Quantity = 3
                        },
                        new
                        {
                            OrderedMealId = 22,
                            InTakeoutTakeoutOrderId = 2,
                            MenuEntryId = 3,
                            Price = 6.1900000000000004,
                            Quantity = 1
                        },
                        new
                        {
                            OrderedMealId = 23,
                            InTakeoutTakeoutOrderId = 4,
                            MenuEntryId = 4,
                            Price = 8.5999999999999996,
                            Quantity = 2
                        },
                        new
                        {
                            OrderedMealId = 24,
                            InTakeoutTakeoutOrderId = 8,
                            MenuEntryId = 5,
                            Price = 4.5999999999999996,
                            Quantity = 4
                        },
                        new
                        {
                            OrderedMealId = 25,
                            InTakeoutTakeoutOrderId = 11,
                            MenuEntryId = 5,
                            Price = 4.5999999999999996,
                            Quantity = 4
                        });
                });

            modelBuilder.Entity("PSAPIRestaurantSystem.Models.Person", b =>
                {
                    b.Property<int>("PersonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("PersonId");

                    b.ToTable("People");

                    b.HasData(
                        new
                        {
                            PersonId = 1,
                            Name = "Jonas",
                            Surname = "Petraitis"
                        },
                        new
                        {
                            PersonId = 2,
                            Name = "Mantas",
                            Surname = "Jablonoskis"
                        },
                        new
                        {
                            PersonId = 3,
                            Name = "Tomas",
                            Surname = "Tomaitis"
                        },
                        new
                        {
                            PersonId = 4,
                            Name = "Petras",
                            Surname = "Petraitis"
                        },
                        new
                        {
                            PersonId = 5,
                            Name = "Domas",
                            Surname = "Domaitis"
                        },
                        new
                        {
                            PersonId = 6,
                            Name = "Stasys",
                            Surname = "Stasaitis"
                        },
                        new
                        {
                            PersonId = 7,
                            Name = "Martyna",
                            Surname = "Martynaitė"
                        },
                        new
                        {
                            PersonId = 8,
                            Name = "Diana",
                            Surname = "Jablonoskienė"
                        },
                        new
                        {
                            PersonId = 9,
                            Name = "Tomas",
                            Surname = "Petraitis"
                        },
                        new
                        {
                            PersonId = 10,
                            Name = "Petras",
                            Surname = "Stasaitis"
                        });
                });

            modelBuilder.Entity("PSAPIRestaurantSystem.Models.Reservation", b =>
                {
                    b.Property<int>("ReservationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("PeopleCount")
                        .HasColumnType("int");

                    b.Property<int>("ReservedByUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReservedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("ReservedForDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.HasKey("ReservationId");

                    b.HasIndex("ReservedByUserId");

                    b.ToTable("Reservations");

                    b.HasData(
                        new
                        {
                            ReservationId = 1,
                            PeopleCount = 2,
                            ReservedByUserId = 1,
                            ReservedDate = new DateTime(2020, 5, 22, 13, 46, 11, 326, DateTimeKind.Local).AddTicks(8434),
                            ReservedForDate = new DateTime(2020, 5, 23, 13, 46, 11, 326, DateTimeKind.Local).AddTicks(8943),
                            State = 2
                        },
                        new
                        {
                            ReservationId = 2,
                            PeopleCount = 1,
                            ReservedByUserId = 1,
                            ReservedDate = new DateTime(2020, 5, 22, 13, 46, 11, 327, DateTimeKind.Local).AddTicks(338),
                            ReservedForDate = new DateTime(2020, 5, 24, 13, 46, 11, 327, DateTimeKind.Local).AddTicks(354),
                            State = 3
                        },
                        new
                        {
                            ReservationId = 3,
                            Comment = "Atsivesiu suni",
                            PeopleCount = 3,
                            ReservedByUserId = 1,
                            ReservedDate = new DateTime(2020, 5, 22, 13, 46, 11, 327, DateTimeKind.Local).AddTicks(383),
                            ReservedForDate = new DateTime(2020, 5, 25, 1, 46, 11, 327, DateTimeKind.Local).AddTicks(387),
                            State = 1
                        },
                        new
                        {
                            ReservationId = 4,
                            PeopleCount = 4,
                            ReservedByUserId = 1,
                            ReservedDate = new DateTime(2020, 5, 22, 13, 46, 11, 327, DateTimeKind.Local).AddTicks(969),
                            ReservedForDate = new DateTime(2020, 5, 25, 21, 46, 11, 327, DateTimeKind.Local).AddTicks(982),
                            State = 3
                        },
                        new
                        {
                            ReservationId = 5,
                            PeopleCount = 2,
                            ReservedByUserId = 1,
                            ReservedDate = new DateTime(2020, 5, 22, 13, 46, 11, 327, DateTimeKind.Local).AddTicks(986),
                            ReservedForDate = new DateTime(2020, 5, 26, 17, 46, 11, 327, DateTimeKind.Local).AddTicks(990),
                            State = 1
                        },
                        new
                        {
                            ReservationId = 6,
                            PeopleCount = 2,
                            ReservedByUserId = 1,
                            ReservedDate = new DateTime(2020, 5, 22, 13, 46, 11, 327, DateTimeKind.Local).AddTicks(994),
                            ReservedForDate = new DateTime(2020, 5, 27, 13, 46, 11, 327, DateTimeKind.Local).AddTicks(994),
                            State = 2
                        },
                        new
                        {
                            ReservationId = 7,
                            PeopleCount = 2,
                            ReservedByUserId = 1,
                            ReservedDate = new DateTime(2020, 5, 22, 13, 46, 11, 327, DateTimeKind.Local).AddTicks(998),
                            ReservedForDate = new DateTime(2020, 5, 29, 5, 46, 11, 327, DateTimeKind.Local).AddTicks(1002),
                            State = 3
                        },
                        new
                        {
                            ReservationId = 8,
                            PeopleCount = 2,
                            ReservedByUserId = 1,
                            ReservedDate = new DateTime(2020, 5, 22, 13, 46, 11, 327, DateTimeKind.Local).AddTicks(1002),
                            ReservedForDate = new DateTime(2020, 5, 30, 1, 46, 11, 327, DateTimeKind.Local).AddTicks(1006),
                            State = 1
                        },
                        new
                        {
                            ReservationId = 9,
                            PeopleCount = 2,
                            ReservedByUserId = 5,
                            ReservedDate = new DateTime(2020, 5, 22, 13, 46, 11, 327, DateTimeKind.Local).AddTicks(1010),
                            ReservedForDate = new DateTime(2020, 5, 23, 13, 46, 11, 327, DateTimeKind.Local).AddTicks(1015),
                            State = 2
                        },
                        new
                        {
                            ReservationId = 10,
                            PeopleCount = 1,
                            ReservedByUserId = 5,
                            ReservedDate = new DateTime(2020, 5, 22, 13, 46, 11, 327, DateTimeKind.Local).AddTicks(1072),
                            ReservedForDate = new DateTime(2020, 5, 24, 13, 46, 11, 327, DateTimeKind.Local).AddTicks(1076),
                            State = 3
                        },
                        new
                        {
                            ReservationId = 11,
                            Comment = "Atsivesiu kate",
                            PeopleCount = 3,
                            ReservedByUserId = 5,
                            ReservedDate = new DateTime(2020, 5, 22, 13, 46, 11, 327, DateTimeKind.Local).AddTicks(1080),
                            ReservedForDate = new DateTime(2020, 5, 25, 1, 46, 11, 327, DateTimeKind.Local).AddTicks(1084),
                            State = 1
                        },
                        new
                        {
                            ReservationId = 12,
                            PeopleCount = 4,
                            ReservedByUserId = 5,
                            ReservedDate = new DateTime(2020, 5, 22, 13, 46, 11, 327, DateTimeKind.Local).AddTicks(1101),
                            ReservedForDate = new DateTime(2020, 5, 25, 21, 46, 11, 327, DateTimeKind.Local).AddTicks(1105),
                            State = 3
                        },
                        new
                        {
                            ReservationId = 13,
                            PeopleCount = 2,
                            ReservedByUserId = 5,
                            ReservedDate = new DateTime(2020, 5, 22, 13, 46, 11, 327, DateTimeKind.Local).AddTicks(1109),
                            ReservedForDate = new DateTime(2020, 5, 26, 17, 46, 11, 327, DateTimeKind.Local).AddTicks(1113),
                            State = 1
                        },
                        new
                        {
                            ReservationId = 14,
                            PeopleCount = 2,
                            ReservedByUserId = 5,
                            ReservedDate = new DateTime(2020, 5, 22, 13, 46, 11, 327, DateTimeKind.Local).AddTicks(1113),
                            ReservedForDate = new DateTime(2020, 5, 27, 13, 46, 11, 327, DateTimeKind.Local).AddTicks(1117),
                            State = 2
                        },
                        new
                        {
                            ReservationId = 15,
                            PeopleCount = 2,
                            ReservedByUserId = 5,
                            ReservedDate = new DateTime(2020, 5, 22, 13, 46, 11, 327, DateTimeKind.Local).AddTicks(1121),
                            ReservedForDate = new DateTime(2020, 5, 29, 5, 46, 11, 327, DateTimeKind.Local).AddTicks(1121),
                            State = 3
                        },
                        new
                        {
                            ReservationId = 16,
                            PeopleCount = 2,
                            ReservedByUserId = 5,
                            ReservedDate = new DateTime(2020, 5, 22, 13, 46, 11, 327, DateTimeKind.Local).AddTicks(1125),
                            ReservedForDate = new DateTime(2020, 5, 30, 1, 46, 11, 327, DateTimeKind.Local).AddTicks(1129),
                            State = 1
                        },
                        new
                        {
                            ReservationId = 17,
                            PeopleCount = 2,
                            ReservedByUserId = 6,
                            ReservedDate = new DateTime(2020, 5, 22, 13, 46, 11, 327, DateTimeKind.Local).AddTicks(1133),
                            ReservedForDate = new DateTime(2020, 5, 23, 13, 46, 11, 327, DateTimeKind.Local).AddTicks(1133),
                            State = 2
                        },
                        new
                        {
                            ReservationId = 18,
                            PeopleCount = 1,
                            ReservedByUserId = 6,
                            ReservedDate = new DateTime(2020, 5, 22, 13, 46, 11, 327, DateTimeKind.Local).AddTicks(1138),
                            ReservedForDate = new DateTime(2020, 5, 24, 13, 46, 11, 327, DateTimeKind.Local).AddTicks(1142),
                            State = 3
                        },
                        new
                        {
                            ReservationId = 19,
                            Comment = "Atsivesiu suni",
                            PeopleCount = 3,
                            ReservedByUserId = 6,
                            ReservedDate = new DateTime(2020, 5, 22, 13, 46, 11, 327, DateTimeKind.Local).AddTicks(1146),
                            ReservedForDate = new DateTime(2020, 5, 25, 1, 46, 11, 327, DateTimeKind.Local).AddTicks(1146),
                            State = 1
                        },
                        new
                        {
                            ReservationId = 20,
                            PeopleCount = 4,
                            ReservedByUserId = 6,
                            ReservedDate = new DateTime(2020, 5, 22, 13, 46, 11, 327, DateTimeKind.Local).AddTicks(1150),
                            ReservedForDate = new DateTime(2020, 5, 25, 21, 46, 11, 327, DateTimeKind.Local).AddTicks(1154),
                            State = 3
                        },
                        new
                        {
                            ReservationId = 21,
                            PeopleCount = 2,
                            ReservedByUserId = 6,
                            ReservedDate = new DateTime(2020, 5, 22, 13, 46, 11, 327, DateTimeKind.Local).AddTicks(1158),
                            ReservedForDate = new DateTime(2020, 5, 26, 17, 46, 11, 327, DateTimeKind.Local).AddTicks(1158),
                            State = 1
                        },
                        new
                        {
                            ReservationId = 22,
                            PeopleCount = 2,
                            ReservedByUserId = 6,
                            ReservedDate = new DateTime(2020, 5, 22, 13, 46, 11, 327, DateTimeKind.Local).AddTicks(1162),
                            ReservedForDate = new DateTime(2020, 5, 27, 13, 46, 11, 327, DateTimeKind.Local).AddTicks(1166),
                            State = 2
                        },
                        new
                        {
                            ReservationId = 23,
                            PeopleCount = 2,
                            ReservedByUserId = 6,
                            ReservedDate = new DateTime(2020, 5, 22, 13, 46, 11, 327, DateTimeKind.Local).AddTicks(1170),
                            ReservedForDate = new DateTime(2020, 5, 29, 5, 46, 11, 327, DateTimeKind.Local).AddTicks(1170),
                            State = 3
                        },
                        new
                        {
                            ReservationId = 24,
                            PeopleCount = 2,
                            ReservedByUserId = 6,
                            ReservedDate = new DateTime(2020, 5, 22, 13, 46, 11, 327, DateTimeKind.Local).AddTicks(1179),
                            ReservedForDate = new DateTime(2020, 5, 30, 1, 46, 11, 327, DateTimeKind.Local).AddTicks(1179),
                            State = 1
                        },
                        new
                        {
                            ReservationId = 25,
                            PeopleCount = 2,
                            ReservedByUserId = 7,
                            ReservedDate = new DateTime(2020, 5, 22, 13, 46, 11, 327, DateTimeKind.Local).AddTicks(1183),
                            ReservedForDate = new DateTime(2020, 5, 23, 13, 46, 11, 327, DateTimeKind.Local).AddTicks(1187),
                            State = 2
                        },
                        new
                        {
                            ReservationId = 26,
                            PeopleCount = 1,
                            ReservedByUserId = 7,
                            ReservedDate = new DateTime(2020, 5, 22, 13, 46, 11, 327, DateTimeKind.Local).AddTicks(1187),
                            ReservedForDate = new DateTime(2020, 5, 24, 13, 46, 11, 327, DateTimeKind.Local).AddTicks(1191),
                            State = 3
                        },
                        new
                        {
                            ReservationId = 27,
                            Comment = "Atsinesiu vezliuka",
                            PeopleCount = 3,
                            ReservedByUserId = 7,
                            ReservedDate = new DateTime(2020, 5, 22, 13, 46, 11, 327, DateTimeKind.Local).AddTicks(1195),
                            ReservedForDate = new DateTime(2020, 5, 25, 1, 46, 11, 327, DateTimeKind.Local).AddTicks(1199),
                            State = 1
                        },
                        new
                        {
                            ReservationId = 28,
                            PeopleCount = 4,
                            ReservedByUserId = 7,
                            ReservedDate = new DateTime(2020, 5, 22, 13, 46, 11, 327, DateTimeKind.Local).AddTicks(1199),
                            ReservedForDate = new DateTime(2020, 5, 25, 21, 46, 11, 327, DateTimeKind.Local).AddTicks(1203),
                            State = 3
                        },
                        new
                        {
                            ReservationId = 29,
                            PeopleCount = 2,
                            ReservedByUserId = 7,
                            ReservedDate = new DateTime(2020, 5, 22, 13, 46, 11, 327, DateTimeKind.Local).AddTicks(1207),
                            ReservedForDate = new DateTime(2020, 5, 26, 17, 46, 11, 327, DateTimeKind.Local).AddTicks(1207),
                            State = 1
                        },
                        new
                        {
                            ReservationId = 30,
                            PeopleCount = 2,
                            ReservedByUserId = 7,
                            ReservedDate = new DateTime(2020, 5, 22, 13, 46, 11, 327, DateTimeKind.Local).AddTicks(1211),
                            ReservedForDate = new DateTime(2020, 5, 27, 13, 46, 11, 327, DateTimeKind.Local).AddTicks(1216),
                            State = 2
                        },
                        new
                        {
                            ReservationId = 31,
                            PeopleCount = 2,
                            ReservedByUserId = 7,
                            ReservedDate = new DateTime(2020, 5, 22, 13, 46, 11, 327, DateTimeKind.Local).AddTicks(1220),
                            ReservedForDate = new DateTime(2020, 5, 29, 5, 46, 11, 327, DateTimeKind.Local).AddTicks(1220),
                            State = 3
                        },
                        new
                        {
                            ReservationId = 32,
                            PeopleCount = 2,
                            ReservedByUserId = 7,
                            ReservedDate = new DateTime(2020, 5, 22, 13, 46, 11, 327, DateTimeKind.Local).AddTicks(1224),
                            ReservedForDate = new DateTime(2020, 5, 30, 1, 46, 11, 327, DateTimeKind.Local).AddTicks(1228),
                            State = 1
                        },
                        new
                        {
                            ReservationId = 33,
                            PeopleCount = 2,
                            ReservedByUserId = 5,
                            ReservedDate = new DateTime(2020, 5, 20, 13, 46, 11, 327, DateTimeKind.Local).AddTicks(1232),
                            ReservedForDate = new DateTime(2020, 5, 21, 13, 46, 11, 327, DateTimeKind.Local).AddTicks(1232),
                            State = 2
                        },
                        new
                        {
                            ReservationId = 34,
                            PeopleCount = 1,
                            ReservedByUserId = 5,
                            ReservedDate = new DateTime(2020, 5, 20, 1, 46, 11, 327, DateTimeKind.Local).AddTicks(1236),
                            ReservedForDate = new DateTime(2020, 5, 20, 13, 46, 11, 327, DateTimeKind.Local).AddTicks(1240),
                            State = 3
                        },
                        new
                        {
                            ReservationId = 35,
                            Comment = "Atsivesiu suni",
                            PeopleCount = 3,
                            ReservedByUserId = 5,
                            ReservedDate = new DateTime(2020, 5, 19, 5, 46, 11, 327, DateTimeKind.Local).AddTicks(1244),
                            ReservedForDate = new DateTime(2020, 5, 20, 1, 46, 11, 327, DateTimeKind.Local).AddTicks(1244),
                            State = 1
                        },
                        new
                        {
                            ReservationId = 36,
                            PeopleCount = 4,
                            ReservedByUserId = 5,
                            ReservedDate = new DateTime(2020, 5, 18, 9, 46, 11, 327, DateTimeKind.Local).AddTicks(1248),
                            ReservedForDate = new DateTime(2020, 5, 19, 5, 46, 11, 327, DateTimeKind.Local).AddTicks(1252),
                            State = 3
                        },
                        new
                        {
                            ReservationId = 37,
                            PeopleCount = 2,
                            ReservedByUserId = 5,
                            ReservedDate = new DateTime(2020, 5, 17, 13, 46, 11, 327, DateTimeKind.Local).AddTicks(1252),
                            ReservedForDate = new DateTime(2020, 5, 18, 9, 46, 11, 327, DateTimeKind.Local).AddTicks(1257),
                            State = 1
                        },
                        new
                        {
                            ReservationId = 38,
                            PeopleCount = 2,
                            ReservedByUserId = 5,
                            ReservedDate = new DateTime(2020, 5, 15, 21, 46, 11, 327, DateTimeKind.Local).AddTicks(1261),
                            ReservedForDate = new DateTime(2020, 5, 17, 13, 46, 11, 327, DateTimeKind.Local).AddTicks(1265),
                            State = 2
                        },
                        new
                        {
                            ReservationId = 39,
                            PeopleCount = 2,
                            ReservedByUserId = 5,
                            ReservedDate = new DateTime(2020, 5, 15, 1, 46, 11, 327, DateTimeKind.Local).AddTicks(1269),
                            ReservedForDate = new DateTime(2020, 5, 15, 21, 46, 11, 327, DateTimeKind.Local).AddTicks(1269),
                            State = 3
                        },
                        new
                        {
                            ReservationId = 40,
                            PeopleCount = 2,
                            ReservedByUserId = 5,
                            ReservedDate = new DateTime(2020, 5, 14, 5, 46, 11, 327, DateTimeKind.Local).AddTicks(1273),
                            ReservedForDate = new DateTime(2020, 5, 15, 1, 46, 11, 327, DateTimeKind.Local).AddTicks(1277),
                            State = 1
                        });
                });

            modelBuilder.Entity("PSAPIRestaurantSystem.Models.Review", b =>
                {
                    b.Property<int>("ReviewId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReviewDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("ReviewText")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("ReviewId");

                    b.HasIndex("UserId");

                    b.ToTable("Reviews");

                    b.HasData(
                        new
                        {
                            ReviewId = 1,
                            Rating = 2,
                            ReviewDate = new DateTime(2020, 5, 22, 13, 46, 11, 325, DateTimeKind.Local).AddTicks(6643),
                            ReviewText = "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam consectetur tincidunt justo ac sollicitudin. Quisque erat mauris, malesuada in sapien quis, accumsan condimentum dui. Curabitur porttitor nibh in odio ultrices, eget efficitur arcu sollicitudin. Quisque at eros lectus. Vestibulum et bibendum arcu. Nunc a nulla consequat leo congue egestas eget in enim. Aliquam dictum ultricies arcu, finibus accumsan nisi imperdiet sed. Curabitur ac nibh tellus. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. Orci varius natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Cras porta cursus odio eget volutpat. Praesent tristique sollicitudin lacus, vel faucibus nisl vestibulum nec. Vestibulum iaculis nulla eu risus mattis, quis finibus risus bibendum.",
                            UserId = 1
                        },
                        new
                        {
                            ReviewId = 2,
                            Rating = 5,
                            ReviewDate = new DateTime(2020, 5, 22, 13, 46, 11, 325, DateTimeKind.Local).AddTicks(8231),
                            ReviewText = "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam consectetur tincidunt justo ac sollicitudin. Quisque erat mauris, malesuada in sapien quis, accumsan condimentum dui. Curabitur porttitor nibh in odio ultrices, eget efficitur arcu sollicitudin. Quisque at eros lectus. Vestibulum et bibendum arcu. Nunc a nulla consequat leo congue egestas eget in enim. Aliquam dictum ultricies arcu, finibus accumsan nisi imperdiet sed. Curabitur ac nibh tellus. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. Orci varius natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Cras porta cursus odio eget volutpat. Praesent tristique sollicitudin lacus, vel faucibus nisl vestibulum nec. Vestibulum iaculis nulla eu risus mattis, quis finibus risus bibendum.",
                            UserId = 2
                        },
                        new
                        {
                            ReviewId = 3,
                            Rating = 4,
                            ReviewDate = new DateTime(2020, 5, 22, 13, 46, 11, 325, DateTimeKind.Local).AddTicks(8276),
                            ReviewText = "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam consectetur tincidunt justo ac sollicitudin. Quisque erat mauris, malesuada in sapien quis, accumsan condimentum dui. Curabitur porttitor nibh in odio ultrices, eget efficitur arcu sollicitudin. Quisque at eros lectus. Vestibulum et bibendum arcu. Nunc a nulla consequat leo congue egestas eget in enim. Aliquam dictum ultricies arcu, finibus accumsan nisi imperdiet sed. Curabitur ac nibh tellus. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. Orci varius natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Cras porta cursus odio eget volutpat. Praesent tristique sollicitudin lacus, vel faucibus nisl vestibulum nec. Vestibulum iaculis nulla eu risus mattis, quis finibus risus bibendum.",
                            UserId = 3
                        });
                });

            modelBuilder.Entity("PSAPIRestaurantSystem.Models.Table", b =>
                {
                    b.Property<int>("TableNum")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("SeatCount")
                        .HasColumnType("int");

                    b.HasKey("TableNum");

                    b.ToTable("Tables");

                    b.HasData(
                        new
                        {
                            TableNum = 1,
                            SeatCount = 4
                        },
                        new
                        {
                            TableNum = 2,
                            SeatCount = 2
                        },
                        new
                        {
                            TableNum = 3,
                            SeatCount = 4
                        },
                        new
                        {
                            TableNum = 4,
                            SeatCount = 5
                        },
                        new
                        {
                            TableNum = 5,
                            SeatCount = 12
                        },
                        new
                        {
                            TableNum = 6,
                            SeatCount = 12
                        },
                        new
                        {
                            TableNum = 7,
                            SeatCount = 4
                        },
                        new
                        {
                            TableNum = 8,
                            SeatCount = 4
                        },
                        new
                        {
                            TableNum = 9,
                            SeatCount = 2
                        },
                        new
                        {
                            TableNum = 10,
                            SeatCount = 2
                        },
                        new
                        {
                            TableNum = 11,
                            SeatCount = 6
                        },
                        new
                        {
                            TableNum = 12,
                            SeatCount = 6
                        });
                });

            modelBuilder.Entity("PSAPIRestaurantSystem.Models.TableOccupancy", b =>
                {
                    b.Property<int>("TableOccupancyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int?>("ReservationId")
                        .HasColumnType("int");

                    b.Property<int>("TableId")
                        .HasColumnType("int");

                    b.HasKey("TableOccupancyId");

                    b.HasIndex("OrderId");

                    b.HasIndex("ReservationId");

                    b.HasIndex("TableId");

                    b.ToTable("TableOccupancies");

                    b.HasData(
                        new
                        {
                            TableOccupancyId = 1,
                            OrderId = 1,
                            ReservationId = 1,
                            TableId = 12
                        },
                        new
                        {
                            TableOccupancyId = 2,
                            OrderId = 2,
                            ReservationId = 2,
                            TableId = 12
                        },
                        new
                        {
                            TableOccupancyId = 3,
                            OrderId = 3,
                            ReservationId = 3,
                            TableId = 12
                        },
                        new
                        {
                            TableOccupancyId = 4,
                            OrderId = 4,
                            ReservationId = 4,
                            TableId = 12
                        },
                        new
                        {
                            TableOccupancyId = 5,
                            OrderId = 5,
                            ReservationId = 5,
                            TableId = 12
                        },
                        new
                        {
                            TableOccupancyId = 6,
                            OrderId = 6,
                            ReservationId = 6,
                            TableId = 12
                        },
                        new
                        {
                            TableOccupancyId = 7,
                            OrderId = 7,
                            ReservationId = 7,
                            TableId = 12
                        },
                        new
                        {
                            TableOccupancyId = 8,
                            OrderId = 8,
                            ReservationId = 8,
                            TableId = 12
                        },
                        new
                        {
                            TableOccupancyId = 9,
                            OrderId = 9,
                            ReservationId = 9,
                            TableId = 12
                        },
                        new
                        {
                            TableOccupancyId = 10,
                            OrderId = 10,
                            ReservationId = 10,
                            TableId = 12
                        },
                        new
                        {
                            TableOccupancyId = 11,
                            OrderId = 11,
                            ReservationId = 11,
                            TableId = 12
                        },
                        new
                        {
                            TableOccupancyId = 12,
                            OrderId = 12,
                            ReservationId = 12,
                            TableId = 12
                        },
                        new
                        {
                            TableOccupancyId = 13,
                            OrderId = 13,
                            ReservationId = 13,
                            TableId = 12
                        },
                        new
                        {
                            TableOccupancyId = 14,
                            OrderId = 14,
                            ReservationId = 14,
                            TableId = 12
                        },
                        new
                        {
                            TableOccupancyId = 15,
                            OrderId = 15,
                            ReservationId = 15,
                            TableId = 12
                        },
                        new
                        {
                            TableOccupancyId = 16,
                            OrderId = 16,
                            ReservationId = 16,
                            TableId = 12
                        },
                        new
                        {
                            TableOccupancyId = 17,
                            OrderId = 17,
                            ReservationId = 17,
                            TableId = 12
                        },
                        new
                        {
                            TableOccupancyId = 18,
                            OrderId = 18,
                            ReservationId = 18,
                            TableId = 12
                        },
                        new
                        {
                            TableOccupancyId = 19,
                            OrderId = 19,
                            ReservationId = 19,
                            TableId = 12
                        },
                        new
                        {
                            TableOccupancyId = 20,
                            OrderId = 20,
                            ReservationId = 20,
                            TableId = 12
                        },
                        new
                        {
                            TableOccupancyId = 21,
                            OrderId = 21,
                            ReservationId = 21,
                            TableId = 12
                        },
                        new
                        {
                            TableOccupancyId = 22,
                            OrderId = 22,
                            ReservationId = 22,
                            TableId = 12
                        },
                        new
                        {
                            TableOccupancyId = 23,
                            OrderId = 23,
                            ReservationId = 23,
                            TableId = 12
                        },
                        new
                        {
                            TableOccupancyId = 24,
                            OrderId = 24,
                            ReservationId = 24,
                            TableId = 12
                        },
                        new
                        {
                            TableOccupancyId = 25,
                            OrderId = 25,
                            ReservationId = 25,
                            TableId = 12
                        },
                        new
                        {
                            TableOccupancyId = 26,
                            OrderId = 26,
                            ReservationId = 26,
                            TableId = 12
                        },
                        new
                        {
                            TableOccupancyId = 27,
                            OrderId = 27,
                            ReservationId = 27,
                            TableId = 12
                        },
                        new
                        {
                            TableOccupancyId = 28,
                            OrderId = 28,
                            ReservationId = 28,
                            TableId = 12
                        },
                        new
                        {
                            TableOccupancyId = 29,
                            OrderId = 29,
                            ReservationId = 29,
                            TableId = 12
                        },
                        new
                        {
                            TableOccupancyId = 30,
                            OrderId = 30,
                            ReservationId = 30,
                            TableId = 12
                        },
                        new
                        {
                            TableOccupancyId = 31,
                            OrderId = 31,
                            ReservationId = 31,
                            TableId = 12
                        },
                        new
                        {
                            TableOccupancyId = 32,
                            OrderId = 32,
                            ReservationId = 32,
                            TableId = 12
                        },
                        new
                        {
                            TableOccupancyId = 33,
                            OrderId = 33,
                            ReservationId = 33,
                            TableId = 2
                        },
                        new
                        {
                            TableOccupancyId = 34,
                            OrderId = 33,
                            ReservationId = 33,
                            TableId = 10
                        },
                        new
                        {
                            TableOccupancyId = 35,
                            OrderId = 33,
                            ReservationId = 33,
                            TableId = 4
                        },
                        new
                        {
                            TableOccupancyId = 36,
                            OrderId = 35,
                            ReservationId = 35,
                            TableId = 11
                        },
                        new
                        {
                            TableOccupancyId = 37,
                            OrderId = 37,
                            ReservationId = 37,
                            TableId = 12
                        },
                        new
                        {
                            TableOccupancyId = 38,
                            OrderId = 38,
                            ReservationId = 38,
                            TableId = 11
                        },
                        new
                        {
                            TableOccupancyId = 39,
                            OrderId = 40,
                            ReservationId = 40,
                            TableId = 3
                        },
                        new
                        {
                            TableOccupancyId = 40,
                            OrderId = 40,
                            ReservationId = 40,
                            TableId = 5
                        },
                        new
                        {
                            TableOccupancyId = 41,
                            OrderId = 41,
                            TableId = 12
                        },
                        new
                        {
                            TableOccupancyId = 42,
                            OrderId = 42,
                            TableId = 12
                        },
                        new
                        {
                            TableOccupancyId = 43,
                            OrderId = 43,
                            TableId = 12
                        },
                        new
                        {
                            TableOccupancyId = 44,
                            OrderId = 44,
                            TableId = 12
                        },
                        new
                        {
                            TableOccupancyId = 45,
                            OrderId = 45,
                            TableId = 12
                        },
                        new
                        {
                            TableOccupancyId = 46,
                            OrderId = 46,
                            TableId = 12
                        });
                });

            modelBuilder.Entity("PSAPIRestaurantSystem.Models.TakeoutOrder", b =>
                {
                    b.Property<int>("TakeoutOrderNum")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("ConfirmationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("ManagedByWaiterId")
                        .HasColumnType("int");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("OrderedByUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("OrderedForDate")
                        .HasColumnType("datetime(6)");

                    b.Property<double>("Price")
                        .HasColumnType("double");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.HasKey("TakeoutOrderNum");

                    b.HasIndex("ManagedByWaiterId");

                    b.HasIndex("OrderedByUserId");

                    b.ToTable("TakeoutOrders");

                    b.HasData(
                        new
                        {
                            TakeoutOrderNum = 1,
                            ConfirmationDate = new DateTime(2020, 5, 22, 13, 51, 11, 328, DateTimeKind.Local).AddTicks(1226),
                            ManagedByWaiterId = 1,
                            OrderDate = new DateTime(2020, 5, 22, 13, 46, 11, 328, DateTimeKind.Local).AddTicks(56),
                            OrderedByUserId = 5,
                            OrderedForDate = new DateTime(2020, 5, 22, 15, 46, 11, 328, DateTimeKind.Local).AddTicks(598),
                            Price = 100.0,
                            State = 3
                        },
                        new
                        {
                            TakeoutOrderNum = 2,
                            ConfirmationDate = new DateTime(2020, 5, 22, 13, 50, 11, 328, DateTimeKind.Local).AddTicks(3786),
                            ManagedByWaiterId = 1,
                            OrderDate = new DateTime(2020, 5, 22, 13, 46, 11, 328, DateTimeKind.Local).AddTicks(3753),
                            OrderedByUserId = 5,
                            OrderedForDate = new DateTime(2020, 5, 22, 15, 46, 11, 328, DateTimeKind.Local).AddTicks(3777),
                            Price = 10.109999999999999,
                            State = 2
                        },
                        new
                        {
                            TakeoutOrderNum = 3,
                            ConfirmationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ManagedByWaiterId = 2,
                            OrderDate = new DateTime(2020, 5, 22, 13, 46, 11, 328, DateTimeKind.Local).AddTicks(3827),
                            OrderedByUserId = 5,
                            OrderedForDate = new DateTime(2020, 5, 22, 15, 46, 11, 328, DateTimeKind.Local).AddTicks(3827),
                            Price = 100.0,
                            State = 4
                        },
                        new
                        {
                            TakeoutOrderNum = 4,
                            ConfirmationDate = new DateTime(2020, 5, 22, 13, 49, 11, 328, DateTimeKind.Local).AddTicks(3839),
                            ManagedByWaiterId = 3,
                            OrderDate = new DateTime(2020, 5, 22, 13, 46, 11, 328, DateTimeKind.Local).AddTicks(3831),
                            OrderedByUserId = 5,
                            OrderedForDate = new DateTime(2020, 5, 22, 15, 46, 11, 328, DateTimeKind.Local).AddTicks(3835),
                            Price = 15.49,
                            State = 2
                        },
                        new
                        {
                            TakeoutOrderNum = 5,
                            ConfirmationDate = new DateTime(2020, 5, 22, 14, 36, 11, 328, DateTimeKind.Local).AddTicks(3847),
                            ManagedByWaiterId = 1,
                            OrderDate = new DateTime(2020, 5, 22, 13, 46, 11, 328, DateTimeKind.Local).AddTicks(3843),
                            OrderedByUserId = 5,
                            OrderedForDate = new DateTime(2020, 5, 22, 15, 46, 11, 328, DateTimeKind.Local).AddTicks(3843),
                            Price = 13.5,
                            State = 3
                        },
                        new
                        {
                            TakeoutOrderNum = 6,
                            ConfirmationDate = new DateTime(2020, 5, 22, 13, 52, 11, 328, DateTimeKind.Local).AddTicks(3855),
                            ManagedByWaiterId = 2,
                            OrderDate = new DateTime(2020, 5, 22, 13, 46, 11, 328, DateTimeKind.Local).AddTicks(3851),
                            OrderedByUserId = 5,
                            OrderedForDate = new DateTime(2020, 5, 22, 15, 46, 11, 328, DateTimeKind.Local).AddTicks(3855),
                            Price = 100.0,
                            State = 1
                        },
                        new
                        {
                            TakeoutOrderNum = 7,
                            ConfirmationDate = new DateTime(2020, 5, 22, 13, 53, 11, 328, DateTimeKind.Local).AddTicks(3864),
                            ManagedByWaiterId = 3,
                            OrderDate = new DateTime(2020, 5, 22, 13, 46, 11, 328, DateTimeKind.Local).AddTicks(3859),
                            OrderedByUserId = 5,
                            OrderedForDate = new DateTime(2020, 5, 22, 15, 46, 11, 328, DateTimeKind.Local).AddTicks(3864),
                            Price = 100.0,
                            State = 3
                        },
                        new
                        {
                            TakeoutOrderNum = 8,
                            ConfirmationDate = new DateTime(2020, 5, 22, 14, 1, 11, 328, DateTimeKind.Local).AddTicks(3876),
                            ManagedByWaiterId = 1,
                            OrderDate = new DateTime(2020, 5, 22, 13, 46, 11, 328, DateTimeKind.Local).AddTicks(3868),
                            OrderedByUserId = 5,
                            OrderedForDate = new DateTime(2020, 5, 22, 15, 46, 11, 328, DateTimeKind.Local).AddTicks(3872),
                            Price = 100.0,
                            State = 2
                        },
                        new
                        {
                            TakeoutOrderNum = 9,
                            ConfirmationDate = new DateTime(2020, 5, 22, 13, 59, 11, 328, DateTimeKind.Local).AddTicks(3884),
                            ManagedByWaiterId = 2,
                            OrderDate = new DateTime(2020, 5, 22, 13, 46, 11, 328, DateTimeKind.Local).AddTicks(3876),
                            OrderedByUserId = 5,
                            OrderedForDate = new DateTime(2020, 5, 22, 15, 46, 11, 328, DateTimeKind.Local).AddTicks(3880),
                            Price = 100.0,
                            State = 1
                        },
                        new
                        {
                            TakeoutOrderNum = 10,
                            ConfirmationDate = new DateTime(2020, 5, 22, 13, 58, 11, 328, DateTimeKind.Local).AddTicks(3892),
                            ManagedByWaiterId = 1,
                            OrderDate = new DateTime(2020, 5, 22, 13, 46, 11, 328, DateTimeKind.Local).AddTicks(3888),
                            OrderedByUserId = 5,
                            OrderedForDate = new DateTime(2020, 5, 22, 15, 46, 11, 328, DateTimeKind.Local).AddTicks(3888),
                            Price = 100.0,
                            State = 3
                        },
                        new
                        {
                            TakeoutOrderNum = 11,
                            ConfirmationDate = new DateTime(2020, 5, 22, 13, 56, 11, 328, DateTimeKind.Local).AddTicks(3900),
                            ManagedByWaiterId = 1,
                            OrderDate = new DateTime(2020, 5, 22, 13, 46, 11, 328, DateTimeKind.Local).AddTicks(3896),
                            OrderedByUserId = 5,
                            OrderedForDate = new DateTime(2020, 5, 22, 15, 46, 11, 328, DateTimeKind.Local).AddTicks(3896),
                            Price = 100.0,
                            State = 2
                        },
                        new
                        {
                            TakeoutOrderNum = 12,
                            ConfirmationDate = new DateTime(2020, 5, 22, 13, 55, 11, 328, DateTimeKind.Local).AddTicks(3909),
                            ManagedByWaiterId = 3,
                            OrderDate = new DateTime(2020, 5, 22, 13, 46, 11, 328, DateTimeKind.Local).AddTicks(3905),
                            OrderedByUserId = 5,
                            OrderedForDate = new DateTime(2020, 5, 22, 15, 46, 11, 328, DateTimeKind.Local).AddTicks(3909),
                            Price = 100.0,
                            State = 3
                        },
                        new
                        {
                            TakeoutOrderNum = 13,
                            ConfirmationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ManagedByWaiterId = 1,
                            OrderDate = new DateTime(2020, 5, 22, 13, 46, 11, 328, DateTimeKind.Local).AddTicks(3913),
                            OrderedByUserId = 5,
                            OrderedForDate = new DateTime(2020, 5, 22, 15, 46, 11, 328, DateTimeKind.Local).AddTicks(3917),
                            Price = 100.0,
                            State = 4
                        },
                        new
                        {
                            TakeoutOrderNum = 14,
                            ConfirmationDate = new DateTime(2020, 5, 22, 13, 47, 11, 328, DateTimeKind.Local).AddTicks(3925),
                            ManagedByWaiterId = 2,
                            OrderDate = new DateTime(2020, 5, 22, 13, 46, 11, 328, DateTimeKind.Local).AddTicks(3921),
                            OrderedByUserId = 5,
                            OrderedForDate = new DateTime(2020, 5, 22, 15, 46, 11, 328, DateTimeKind.Local).AddTicks(3921),
                            Price = 100.0,
                            State = 3
                        });
                });

            modelBuilder.Entity("PSAPIRestaurantSystem.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Confirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("LastLoginDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("LoyalityPoints")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("PersonId")
                        .HasColumnType("int");

                    b.Property<DateTime>("RegistrationDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("UserId");

                    b.HasIndex("PersonId")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Confirmed = true,
                            Email = "jonas@emai.com",
                            LastLoginDate = new DateTime(2020, 5, 22, 13, 46, 11, 325, DateTimeKind.Local).AddTicks(2105),
                            LoyalityPoints = 1,
                            Password = "slaptozodis",
                            PersonId = 1,
                            RegistrationDate = new DateTime(2020, 5, 22, 13, 46, 11, 325, DateTimeKind.Local).AddTicks(1597)
                        },
                        new
                        {
                            UserId = 2,
                            Confirmed = true,
                            Email = "mantas@email.com",
                            LastLoginDate = new DateTime(2020, 5, 22, 13, 46, 11, 325, DateTimeKind.Local).AddTicks(3943),
                            LoyalityPoints = 10,
                            Password = "slaptozodis",
                            PersonId = 2,
                            RegistrationDate = new DateTime(2020, 5, 22, 13, 46, 11, 325, DateTimeKind.Local).AddTicks(3906)
                        },
                        new
                        {
                            UserId = 3,
                            Confirmed = true,
                            Email = "tomas@email.com",
                            LastLoginDate = new DateTime(2020, 5, 22, 13, 46, 11, 325, DateTimeKind.Local).AddTicks(3976),
                            LoyalityPoints = 20,
                            Password = "slaptozodis",
                            PersonId = 3,
                            RegistrationDate = new DateTime(2020, 5, 22, 13, 46, 11, 325, DateTimeKind.Local).AddTicks(3972)
                        },
                        new
                        {
                            UserId = 4,
                            Confirmed = true,
                            Email = "petraitis@gmail.com",
                            LastLoginDate = new DateTime(2020, 5, 22, 13, 46, 11, 325, DateTimeKind.Local).AddTicks(3984),
                            LoyalityPoints = 5,
                            Password = "slaptozodis",
                            PersonId = 4,
                            RegistrationDate = new DateTime(2020, 5, 22, 13, 46, 11, 325, DateTimeKind.Local).AddTicks(3980)
                        },
                        new
                        {
                            UserId = 5,
                            Confirmed = true,
                            Email = "domas@email.com",
                            LastLoginDate = new DateTime(2020, 5, 22, 13, 46, 11, 325, DateTimeKind.Local).AddTicks(4013),
                            LoyalityPoints = 50,
                            Password = "slaptozodis",
                            PersonId = 5,
                            RegistrationDate = new DateTime(2020, 5, 20, 13, 46, 11, 325, DateTimeKind.Local).AddTicks(3988)
                        },
                        new
                        {
                            UserId = 6,
                            Confirmed = true,
                            Email = "stasys@email.com",
                            LastLoginDate = new DateTime(2020, 5, 22, 13, 46, 11, 325, DateTimeKind.Local).AddTicks(4021),
                            LoyalityPoints = 60,
                            Password = "slaptozodis",
                            PersonId = 6,
                            RegistrationDate = new DateTime(2020, 5, 19, 13, 46, 11, 325, DateTimeKind.Local).AddTicks(4021)
                        },
                        new
                        {
                            UserId = 7,
                            Confirmed = true,
                            Email = "martyna@email.com",
                            LastLoginDate = new DateTime(2020, 5, 22, 13, 46, 11, 325, DateTimeKind.Local).AddTicks(4029),
                            LoyalityPoints = 70,
                            Password = "slaptozodis",
                            PersonId = 7,
                            RegistrationDate = new DateTime(2020, 5, 18, 13, 46, 11, 325, DateTimeKind.Local).AddTicks(4025)
                        },
                        new
                        {
                            UserId = 8,
                            Confirmed = true,
                            Email = "diana@email.com",
                            LastLoginDate = new DateTime(2020, 5, 22, 13, 46, 11, 325, DateTimeKind.Local).AddTicks(4038),
                            LoyalityPoints = 80,
                            Password = "slaptozodis",
                            PersonId = 8,
                            RegistrationDate = new DateTime(2020, 5, 17, 13, 46, 11, 325, DateTimeKind.Local).AddTicks(4034)
                        },
                        new
                        {
                            UserId = 9,
                            Confirmed = true,
                            Email = "tomas@gmail.com",
                            LastLoginDate = new DateTime(2020, 5, 22, 13, 46, 11, 325, DateTimeKind.Local).AddTicks(4042),
                            LoyalityPoints = 3,
                            Password = "slaptozodis",
                            PersonId = 9,
                            RegistrationDate = new DateTime(2020, 5, 16, 13, 46, 11, 325, DateTimeKind.Local).AddTicks(4038)
                        },
                        new
                        {
                            UserId = 10,
                            Confirmed = true,
                            Email = "petras@gmail.com",
                            LastLoginDate = new DateTime(2020, 5, 22, 13, 46, 11, 325, DateTimeKind.Local).AddTicks(4046),
                            LoyalityPoints = 4,
                            Password = "slaptozodis",
                            PersonId = 10,
                            RegistrationDate = new DateTime(2020, 5, 21, 13, 46, 11, 325, DateTimeKind.Local).AddTicks(4046)
                        });
                });

            modelBuilder.Entity("PSAPIRestaurantSystem.Models.Waiter", b =>
                {
                    b.Property<int>("WaiterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<double>("Tips")
                        .HasColumnType("double");

                    b.HasKey("WaiterId");

                    b.HasIndex("EmployeeId")
                        .IsUnique();

                    b.ToTable("Waiters");

                    b.HasData(
                        new
                        {
                            WaiterId = 1,
                            EmployeeId = 2,
                            Tips = 100.0
                        },
                        new
                        {
                            WaiterId = 2,
                            EmployeeId = 3,
                            Tips = 200.0
                        },
                        new
                        {
                            WaiterId = 3,
                            EmployeeId = 4,
                            Tips = 250.0
                        });
                });

            modelBuilder.Entity("PSAPIRestaurantSystem.Models.Admin", b =>
                {
                    b.HasOne("PSAPIRestaurantSystem.Models.Employee", "Employee")
                        .WithOne("Admin")
                        .HasForeignKey("PSAPIRestaurantSystem.Models.Admin", "EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PSAPIRestaurantSystem.Models.Employee", b =>
                {
                    b.HasOne("PSAPIRestaurantSystem.Models.Admin", "RegisteredBy")
                        .WithMany("RegisteredEmployees")
                        .HasForeignKey("RegisteredByAdminId");

                    b.HasOne("PSAPIRestaurantSystem.Models.User", "User")
                        .WithOne("Employee")
                        .HasForeignKey("PSAPIRestaurantSystem.Models.Employee", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PSAPIRestaurantSystem.Models.MenuEntry", b =>
                {
                    b.HasOne("PSAPIRestaurantSystem.Models.Menu", "Menu")
                        .WithMany("MenuEntries")
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PSAPIRestaurantSystem.Models.Order", b =>
                {
                    b.HasOne("PSAPIRestaurantSystem.Models.Waiter", "ManagedBy")
                        .WithMany("Orders")
                        .HasForeignKey("ManagedByWaiterId");
                });

            modelBuilder.Entity("PSAPIRestaurantSystem.Models.OrderedMeal", b =>
                {
                    b.HasOne("PSAPIRestaurantSystem.Models.Order", "InOrder")
                        .WithMany("OrderedMeals")
                        .HasForeignKey("InOrderOrderNum");

                    b.HasOne("PSAPIRestaurantSystem.Models.TakeoutOrder", "InTakeout")
                        .WithMany("OrderedMeals")
                        .HasForeignKey("InTakeoutTakeoutOrderNum");

                    b.HasOne("PSAPIRestaurantSystem.Models.MenuEntry", "MenuEntry")
                        .WithMany("OrderedMeals")
                        .HasForeignKey("MenuEntryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PSAPIRestaurantSystem.Models.Reservation", b =>
                {
                    b.HasOne("PSAPIRestaurantSystem.Models.User", "ReservedBy")
                        .WithMany("Reservations")
                        .HasForeignKey("ReservedByUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PSAPIRestaurantSystem.Models.Review", b =>
                {
                    b.HasOne("PSAPIRestaurantSystem.Models.User", "User")
                        .WithMany("Reviews")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PSAPIRestaurantSystem.Models.TableOccupancy", b =>
                {
                    b.HasOne("PSAPIRestaurantSystem.Models.Order", "Order")
                        .WithMany("TableOccupancies")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PSAPIRestaurantSystem.Models.Reservation", "Reservation")
                        .WithMany("TableOccupancies")
                        .HasForeignKey("ReservationId");

                    b.HasOne("PSAPIRestaurantSystem.Models.Table", "Table")
                        .WithMany("TableOccupancies")
                        .HasForeignKey("TableId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PSAPIRestaurantSystem.Models.TakeoutOrder", b =>
                {
                    b.HasOne("PSAPIRestaurantSystem.Models.Waiter", "ManagedBy")
                        .WithMany("TakeoutOrders")
                        .HasForeignKey("ManagedByWaiterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PSAPIRestaurantSystem.Models.User", "OrderedBy")
                        .WithMany("TakeoutOrders")
                        .HasForeignKey("OrderedByUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PSAPIRestaurantSystem.Models.User", b =>
                {
                    b.HasOne("PSAPIRestaurantSystem.Models.Person", "Person")
                        .WithOne("User")
                        .HasForeignKey("PSAPIRestaurantSystem.Models.User", "PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PSAPIRestaurantSystem.Models.Waiter", b =>
                {
                    b.HasOne("PSAPIRestaurantSystem.Models.Employee", "Employee")
                        .WithOne("Waiter")
                        .HasForeignKey("PSAPIRestaurantSystem.Models.Waiter", "EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
