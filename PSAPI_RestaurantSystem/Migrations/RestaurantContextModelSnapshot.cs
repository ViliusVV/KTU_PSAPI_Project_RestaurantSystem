// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PSAPIRestaurantSystem;

namespace PSAPIRestaurantSystem.Migrations
{
    [DbContext(typeof(RestaurantContext))]
    partial class RestaurantContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("PSAPIRestaurantSystem.Models.Admin", b =>
                {
                    b.Property<int>("AdminId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("WorkEmail")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("AdminId");

                    b.HasIndex("EmployeeId")
                        .IsUnique();

                    b.ToTable("Admins");

                    b.HasData(
                        new
                        {
                            AdminId = 1,
                            EmployeeId = 1,
                            WorkEmail = "workmail@mymail.com"
                        });
                });

            modelBuilder.Entity("PSAPIRestaurantSystem.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("BeganWork")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("EmployeeState")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndedWork")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("RegisteredByAdminId")
                        .HasColumnType("int");

                    b.Property<int>("Salary")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("EmployeeId");

                    b.HasIndex("RegisteredByAdminId");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            EmployeeId = 1,
                            BeganWork = new DateTime(2020, 5, 22, 16, 14, 19, 233, DateTimeKind.Local).AddTicks(4869),
                            EmployeeState = 1,
                            EndedWork = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Salary = 1000,
                            UserId = 1
                        },
                        new
                        {
                            EmployeeId = 2,
                            BeganWork = new DateTime(2020, 5, 22, 16, 14, 19, 233, DateTimeKind.Local).AddTicks(6010),
                            EmployeeState = 1,
                            EndedWork = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Salary = 3000,
                            UserId = 2
                        },
                        new
                        {
                            EmployeeId = 3,
                            BeganWork = new DateTime(2020, 5, 22, 16, 14, 19, 233, DateTimeKind.Local).AddTicks(6042),
                            EmployeeState = 1,
                            EndedWork = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Salary = 2000,
                            UserId = 9
                        },
                        new
                        {
                            EmployeeId = 4,
                            BeganWork = new DateTime(2020, 5, 22, 16, 14, 19, 233, DateTimeKind.Local).AddTicks(6046),
                            EmployeeState = 1,
                            EndedWork = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Salary = 1500,
                            UserId = 10
                        });
                });

            modelBuilder.Entity("PSAPIRestaurantSystem.Models.Menu", b =>
                {
                    b.Property<int>("MenuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("Changed")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("MenuId");

                    b.ToTable("Menus");

                    b.HasData(
                        new
                        {
                            MenuId = 1,
                            Changed = new DateTime(2020, 5, 22, 16, 14, 19, 228, DateTimeKind.Local).AddTicks(8838),
                            Title = "Sriubos"
                        },
                        new
                        {
                            MenuId = 2,
                            Changed = new DateTime(2020, 5, 22, 16, 14, 19, 231, DateTimeKind.Local).AddTicks(7795),
                            Title = "Užkandžiai"
                        },
                        new
                        {
                            MenuId = 3,
                            Changed = new DateTime(2020, 5, 22, 16, 14, 19, 231, DateTimeKind.Local).AddTicks(7859),
                            Title = "Salotos"
                        },
                        new
                        {
                            MenuId = 4,
                            Changed = new DateTime(2020, 5, 22, 16, 14, 19, 231, DateTimeKind.Local).AddTicks(7865),
                            Title = "Kiauliena"
                        },
                        new
                        {
                            MenuId = 5,
                            Changed = new DateTime(2020, 5, 22, 16, 14, 19, 231, DateTimeKind.Local).AddTicks(7868),
                            Title = "Vistiena"
                        },
                        new
                        {
                            MenuId = 6,
                            Changed = new DateTime(2020, 5, 22, 16, 14, 19, 231, DateTimeKind.Local).AddTicks(7871),
                            Title = "Zuvis"
                        },
                        new
                        {
                            MenuId = 7,
                            Changed = new DateTime(2020, 5, 22, 16, 14, 19, 231, DateTimeKind.Local).AddTicks(7875),
                            Title = "Miltiniai patiekalai"
                        },
                        new
                        {
                            MenuId = 8,
                            Changed = new DateTime(2020, 5, 22, 16, 14, 19, 231, DateTimeKind.Local).AddTicks(7878),
                            Title = "Gaivieji gėrimai"
                        },
                        new
                        {
                            MenuId = 9,
                            Changed = new DateTime(2020, 5, 22, 16, 14, 19, 231, DateTimeKind.Local).AddTicks(7881),
                            Title = "Alus"
                        },
                        new
                        {
                            MenuId = 10,
                            Changed = new DateTime(2020, 5, 22, 16, 14, 19, 231, DateTimeKind.Local).AddTicks(7885),
                            Title = "Šampanas"
                        },
                        new
                        {
                            MenuId = 11,
                            Changed = new DateTime(2020, 5, 22, 16, 14, 19, 231, DateTimeKind.Local).AddTicks(7889),
                            Title = "Konjakas"
                        },
                        new
                        {
                            MenuId = 12,
                            Changed = new DateTime(2020, 5, 22, 16, 14, 19, 231, DateTimeKind.Local).AddTicks(7892),
                            Title = "Degtinė"
                        },
                        new
                        {
                            MenuId = 13,
                            Changed = new DateTime(2020, 5, 22, 16, 14, 19, 231, DateTimeKind.Local).AddTicks(7895),
                            Title = "Brendis"
                        },
                        new
                        {
                            MenuId = 14,
                            Changed = new DateTime(2020, 5, 22, 16, 14, 19, 231, DateTimeKind.Local).AddTicks(7899),
                            Title = "Vynas"
                        },
                        new
                        {
                            MenuId = 15,
                            Changed = new DateTime(2020, 5, 22, 16, 14, 19, 231, DateTimeKind.Local).AddTicks(7903),
                            Title = "Sidras"
                        },
                        new
                        {
                            MenuId = 16,
                            Changed = new DateTime(2020, 5, 22, 16, 14, 19, 231, DateTimeKind.Local).AddTicks(7906),
                            Title = "Burbonas"
                        },
                        new
                        {
                            MenuId = 17,
                            Changed = new DateTime(2020, 5, 22, 16, 14, 19, 231, DateTimeKind.Local).AddTicks(7909),
                            Title = "Džinas"
                        },
                        new
                        {
                            MenuId = 18,
                            Changed = new DateTime(2020, 5, 22, 16, 14, 19, 231, DateTimeKind.Local).AddTicks(7912),
                            Title = "Viskis"
                        });
                });

            modelBuilder.Entity("PSAPIRestaurantSystem.Models.MenuEntry", b =>
                {
                    b.Property<int>("MenuEntryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("Changed")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("MenuEntryName")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("MenuId")
                        .HasColumnType("int");

                    b.Property<double>("Price")
                        .HasColumnType("double");

                    b.HasKey("MenuEntryId");

                    b.HasIndex("MenuId");

                    b.ToTable("MenuEntries");

                    b.HasData(
                        new
                        {
                            MenuEntryId = 1,
                            Changed = new DateTime(2020, 5, 22, 16, 14, 19, 232, DateTimeKind.Local).AddTicks(1027),
                            MenuEntryName = "Dienos sriuba",
                            MenuId = 1,
                            Price = 1.2
                        },
                        new
                        {
                            MenuEntryId = 2,
                            Changed = new DateTime(2020, 5, 22, 16, 14, 19, 232, DateTimeKind.Local).AddTicks(1589),
                            MenuEntryName = "Čili",
                            MenuId = 1,
                            Price = 3.0
                        },
                        new
                        {
                            MenuEntryId = 3,
                            Changed = new DateTime(2020, 5, 22, 16, 14, 19, 232, DateTimeKind.Local).AddTicks(1620),
                            MenuEntryName = "Cibulynė",
                            MenuId = 1,
                            Price = 2.0
                        },
                        new
                        {
                            MenuEntryId = 4,
                            Changed = new DateTime(2020, 5, 22, 16, 14, 19, 232, DateTimeKind.Local).AddTicks(1624),
                            MenuEntryName = "Šaltibarščiai",
                            MenuId = 1,
                            Price = 2.5
                        },
                        new
                        {
                            MenuEntryId = 5,
                            Changed = new DateTime(2020, 5, 22, 16, 14, 19, 232, DateTimeKind.Local).AddTicks(1628),
                            MenuEntryName = "Šviežių daržovių salotos",
                            MenuId = 3,
                            Price = 3.0
                        },
                        new
                        {
                            MenuEntryId = 6,
                            Changed = new DateTime(2020, 5, 22, 16, 14, 19, 232, DateTimeKind.Local).AddTicks(1631),
                            MenuEntryName = "Sveikuolių salotos ",
                            MenuId = 3,
                            Price = 3.5
                        },
                        new
                        {
                            MenuEntryId = 7,
                            Changed = new DateTime(2020, 5, 22, 16, 14, 19, 232, DateTimeKind.Local).AddTicks(1635),
                            MenuEntryName = "Vištienos salotos",
                            MenuId = 3,
                            Price = 3.5
                        },
                        new
                        {
                            MenuEntryId = 8,
                            Changed = new DateTime(2020, 5, 22, 16, 14, 19, 232, DateTimeKind.Local).AddTicks(1639),
                            MenuEntryName = "Graikiškos salotos ",
                            MenuId = 3,
                            Price = 4.5
                        },
                        new
                        {
                            MenuEntryId = 9,
                            Changed = new DateTime(2020, 5, 22, 16, 14, 19, 232, DateTimeKind.Local).AddTicks(1642),
                            MenuEntryName = "Burokėlių salotos su fetos sūriu ",
                            MenuId = 3,
                            Price = 4.5
                        });
                });

            modelBuilder.Entity("PSAPIRestaurantSystem.Models.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<int?>("ManagedByWaiterId")
                        .HasColumnType("int");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime(6)");

                    b.Property<double>("Price")
                        .HasColumnType("double");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.HasKey("OrderId");

                    b.HasIndex("ManagedByWaiterId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            OrderId = 1,
                            Duration = 0,
                            OrderDate = new DateTime(2020, 5, 22, 16, 14, 19, 234, DateTimeKind.Local).AddTicks(7578),
                            Price = 0.0,
                            State = 6
                        },
                        new
                        {
                            OrderId = 2,
                            Duration = 0,
                            OrderDate = new DateTime(2020, 5, 22, 16, 14, 19, 234, DateTimeKind.Local).AddTicks(9926),
                            Price = 0.0,
                            State = 6
                        },
                        new
                        {
                            OrderId = 3,
                            Duration = 0,
                            OrderDate = new DateTime(2020, 5, 22, 16, 14, 19, 234, DateTimeKind.Local).AddTicks(9995),
                            Price = 0.0,
                            State = 6
                        },
                        new
                        {
                            OrderId = 4,
                            Duration = 0,
                            OrderDate = new DateTime(2020, 5, 22, 16, 14, 19, 234, DateTimeKind.Local).AddTicks(9999),
                            Price = 0.0,
                            State = 6
                        },
                        new
                        {
                            OrderId = 5,
                            Duration = 0,
                            OrderDate = new DateTime(2020, 5, 22, 16, 14, 19, 235, DateTimeKind.Local).AddTicks(2),
                            Price = 0.0,
                            State = 6
                        },
                        new
                        {
                            OrderId = 6,
                            Duration = 0,
                            OrderDate = new DateTime(2020, 5, 22, 16, 14, 19, 235, DateTimeKind.Local).AddTicks(6),
                            Price = 0.0,
                            State = 6
                        },
                        new
                        {
                            OrderId = 7,
                            Duration = 0,
                            OrderDate = new DateTime(2020, 5, 22, 16, 14, 19, 235, DateTimeKind.Local).AddTicks(172),
                            Price = 0.0,
                            State = 6
                        },
                        new
                        {
                            OrderId = 8,
                            Duration = 0,
                            OrderDate = new DateTime(2020, 5, 22, 16, 14, 19, 235, DateTimeKind.Local).AddTicks(176),
                            Price = 0.0,
                            State = 6
                        },
                        new
                        {
                            OrderId = 9,
                            Duration = 0,
                            OrderDate = new DateTime(2020, 5, 22, 16, 14, 19, 235, DateTimeKind.Local).AddTicks(179),
                            Price = 0.0,
                            State = 6
                        },
                        new
                        {
                            OrderId = 10,
                            Duration = 0,
                            OrderDate = new DateTime(2020, 5, 22, 16, 14, 19, 235, DateTimeKind.Local).AddTicks(182),
                            Price = 0.0,
                            State = 6
                        },
                        new
                        {
                            OrderId = 11,
                            Duration = 0,
                            OrderDate = new DateTime(2020, 5, 22, 16, 14, 19, 235, DateTimeKind.Local).AddTicks(186),
                            Price = 0.0,
                            State = 6
                        },
                        new
                        {
                            OrderId = 12,
                            Duration = 0,
                            OrderDate = new DateTime(2020, 5, 22, 16, 14, 19, 235, DateTimeKind.Local).AddTicks(190),
                            Price = 0.0,
                            State = 6
                        },
                        new
                        {
                            OrderId = 13,
                            Duration = 0,
                            OrderDate = new DateTime(2020, 5, 22, 16, 14, 19, 235, DateTimeKind.Local).AddTicks(193),
                            Price = 0.0,
                            State = 6
                        },
                        new
                        {
                            OrderId = 14,
                            Duration = 0,
                            OrderDate = new DateTime(2020, 5, 22, 16, 14, 19, 235, DateTimeKind.Local).AddTicks(196),
                            Price = 0.0,
                            State = 6
                        },
                        new
                        {
                            OrderId = 15,
                            Duration = 0,
                            OrderDate = new DateTime(2020, 5, 22, 16, 14, 19, 235, DateTimeKind.Local).AddTicks(200),
                            Price = 0.0,
                            State = 6
                        },
                        new
                        {
                            OrderId = 16,
                            Duration = 0,
                            OrderDate = new DateTime(2020, 5, 22, 16, 14, 19, 235, DateTimeKind.Local).AddTicks(203),
                            Price = 0.0,
                            State = 6
                        },
                        new
                        {
                            OrderId = 17,
                            Duration = 0,
                            OrderDate = new DateTime(2020, 5, 22, 16, 14, 19, 235, DateTimeKind.Local).AddTicks(206),
                            Price = 0.0,
                            State = 6
                        },
                        new
                        {
                            OrderId = 18,
                            Duration = 0,
                            OrderDate = new DateTime(2020, 5, 22, 16, 14, 19, 235, DateTimeKind.Local).AddTicks(209),
                            Price = 0.0,
                            State = 6
                        },
                        new
                        {
                            OrderId = 19,
                            Duration = 0,
                            OrderDate = new DateTime(2020, 5, 22, 16, 14, 19, 235, DateTimeKind.Local).AddTicks(212),
                            Price = 0.0,
                            State = 6
                        },
                        new
                        {
                            OrderId = 20,
                            Duration = 0,
                            OrderDate = new DateTime(2020, 5, 22, 16, 14, 19, 235, DateTimeKind.Local).AddTicks(216),
                            Price = 0.0,
                            State = 6
                        },
                        new
                        {
                            OrderId = 21,
                            Duration = 0,
                            OrderDate = new DateTime(2020, 5, 22, 16, 14, 19, 235, DateTimeKind.Local).AddTicks(219),
                            Price = 0.0,
                            State = 6
                        },
                        new
                        {
                            OrderId = 22,
                            Duration = 0,
                            OrderDate = new DateTime(2020, 5, 22, 16, 14, 19, 235, DateTimeKind.Local).AddTicks(222),
                            Price = 0.0,
                            State = 6
                        },
                        new
                        {
                            OrderId = 23,
                            Duration = 0,
                            OrderDate = new DateTime(2020, 5, 22, 16, 14, 19, 235, DateTimeKind.Local).AddTicks(226),
                            Price = 0.0,
                            State = 6
                        },
                        new
                        {
                            OrderId = 24,
                            Duration = 0,
                            OrderDate = new DateTime(2020, 5, 22, 16, 14, 19, 235, DateTimeKind.Local).AddTicks(229),
                            Price = 0.0,
                            State = 6
                        },
                        new
                        {
                            OrderId = 25,
                            Duration = 0,
                            OrderDate = new DateTime(2020, 5, 22, 16, 14, 19, 235, DateTimeKind.Local).AddTicks(232),
                            Price = 0.0,
                            State = 6
                        },
                        new
                        {
                            OrderId = 26,
                            Duration = 0,
                            OrderDate = new DateTime(2020, 5, 22, 16, 14, 19, 235, DateTimeKind.Local).AddTicks(236),
                            Price = 0.0,
                            State = 6
                        },
                        new
                        {
                            OrderId = 27,
                            Duration = 0,
                            OrderDate = new DateTime(2020, 5, 22, 16, 14, 19, 235, DateTimeKind.Local).AddTicks(239),
                            Price = 0.0,
                            State = 6
                        },
                        new
                        {
                            OrderId = 28,
                            Duration = 0,
                            OrderDate = new DateTime(2020, 5, 22, 16, 14, 19, 235, DateTimeKind.Local).AddTicks(242),
                            Price = 0.0,
                            State = 6
                        },
                        new
                        {
                            OrderId = 29,
                            Duration = 0,
                            OrderDate = new DateTime(2020, 5, 22, 16, 14, 19, 235, DateTimeKind.Local).AddTicks(245),
                            Price = 0.0,
                            State = 6
                        },
                        new
                        {
                            OrderId = 30,
                            Duration = 0,
                            OrderDate = new DateTime(2020, 5, 22, 16, 14, 19, 235, DateTimeKind.Local).AddTicks(248),
                            Price = 0.0,
                            State = 6
                        },
                        new
                        {
                            OrderId = 31,
                            Duration = 0,
                            OrderDate = new DateTime(2020, 5, 22, 16, 14, 19, 235, DateTimeKind.Local).AddTicks(252),
                            Price = 0.0,
                            State = 6
                        },
                        new
                        {
                            OrderId = 32,
                            Duration = 0,
                            OrderDate = new DateTime(2020, 5, 22, 16, 14, 19, 235, DateTimeKind.Local).AddTicks(255),
                            Price = 0.0,
                            State = 6
                        },
                        new
                        {
                            OrderId = 33,
                            Duration = 45,
                            ManagedByWaiterId = 1,
                            OrderDate = new DateTime(2020, 5, 22, 16, 14, 19, 235, DateTimeKind.Local).AddTicks(258),
                            Price = 10.0,
                            State = 5
                        },
                        new
                        {
                            OrderId = 34,
                            Duration = 0,
                            ManagedByWaiterId = 1,
                            OrderDate = new DateTime(2020, 5, 22, 16, 14, 19, 235, DateTimeKind.Local).AddTicks(1169),
                            Price = 0.0,
                            State = 4
                        },
                        new
                        {
                            OrderId = 35,
                            Duration = 51,
                            ManagedByWaiterId = 2,
                            OrderDate = new DateTime(2020, 5, 22, 16, 14, 19, 235, DateTimeKind.Local).AddTicks(1183),
                            Price = 11.0,
                            State = 5
                        },
                        new
                        {
                            OrderId = 36,
                            Duration = 0,
                            ManagedByWaiterId = 3,
                            OrderDate = new DateTime(2020, 5, 22, 16, 14, 19, 235, DateTimeKind.Local).AddTicks(1208),
                            Price = 0.0,
                            State = 4
                        },
                        new
                        {
                            OrderId = 37,
                            Duration = 30,
                            ManagedByWaiterId = 2,
                            OrderDate = new DateTime(2020, 5, 22, 16, 14, 19, 235, DateTimeKind.Local).AddTicks(1212),
                            Price = 20.0,
                            State = 5
                        },
                        new
                        {
                            OrderId = 38,
                            Duration = 37,
                            ManagedByWaiterId = 1,
                            OrderDate = new DateTime(2020, 5, 22, 16, 14, 19, 235, DateTimeKind.Local).AddTicks(1216),
                            Price = 40.0,
                            State = 5
                        },
                        new
                        {
                            OrderId = 39,
                            Duration = 0,
                            ManagedByWaiterId = 3,
                            OrderDate = new DateTime(2020, 5, 22, 16, 14, 19, 235, DateTimeKind.Local).AddTicks(1219),
                            Price = 0.0,
                            State = 4
                        },
                        new
                        {
                            OrderId = 40,
                            Duration = 153,
                            ManagedByWaiterId = 2,
                            OrderDate = new DateTime(2020, 5, 22, 16, 14, 19, 235, DateTimeKind.Local).AddTicks(1222),
                            Price = 65.0,
                            State = 5
                        },
                        new
                        {
                            OrderId = 41,
                            Duration = 0,
                            OrderDate = new DateTime(2020, 5, 22, 16, 14, 19, 235, DateTimeKind.Local).AddTicks(1226),
                            Price = 0.0,
                            State = 1
                        },
                        new
                        {
                            OrderId = 42,
                            Duration = 0,
                            OrderDate = new DateTime(2020, 5, 22, 16, 14, 19, 235, DateTimeKind.Local).AddTicks(1230),
                            Price = 0.0,
                            State = 1
                        },
                        new
                        {
                            OrderId = 43,
                            Duration = 0,
                            OrderDate = new DateTime(2020, 5, 22, 16, 14, 19, 235, DateTimeKind.Local).AddTicks(1233),
                            Price = 0.0,
                            State = 1
                        },
                        new
                        {
                            OrderId = 44,
                            Duration = 0,
                            OrderDate = new DateTime(2020, 5, 22, 16, 14, 19, 235, DateTimeKind.Local).AddTicks(1237),
                            Price = 0.0,
                            State = 1
                        },
                        new
                        {
                            OrderId = 45,
                            Duration = 0,
                            OrderDate = new DateTime(2020, 5, 22, 16, 14, 19, 235, DateTimeKind.Local).AddTicks(1240),
                            Price = 0.0,
                            State = 1
                        },
                        new
                        {
                            OrderId = 46,
                            Duration = 0,
                            OrderDate = new DateTime(2020, 5, 22, 16, 14, 19, 235, DateTimeKind.Local).AddTicks(1243),
                            Price = 0.0,
                            State = 1
                        },
                        new
                        {
                            OrderId = 47,
                            Duration = 359,
                            ManagedByWaiterId = 3,
                            OrderDate = new DateTime(2020, 5, 22, 16, 14, 19, 235, DateTimeKind.Local).AddTicks(1247),
                            Price = 9999.1200000000008,
                            State = 5
                        });
                });

            modelBuilder.Entity("PSAPIRestaurantSystem.Models.OrderedMeal", b =>
                {
                    b.Property<int>("OrderedMealId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int?>("InOrderOrderId")
                        .HasColumnType("int");

                    b.Property<int?>("InTakeoutTakeoutOrderId")
                        .HasColumnType("int");

                    b.Property<int>("MenuEntryId")
                        .HasColumnType("int");

                    b.Property<double>("Price")
                        .HasColumnType("double");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("OrderedMealId");

                    b.HasIndex("InOrderOrderId");

                    b.HasIndex("InTakeoutTakeoutOrderId");

                    b.HasIndex("MenuEntryId");

                    b.ToTable("OrderedMeals");

                    b.HasData(
                        new
                        {
                            OrderedMealId = 1,
                            InOrderOrderId = 33,
                            MenuEntryId = 1,
                            Price = 6.0,
                            Quantity = 5
                        },
                        new
                        {
                            OrderedMealId = 2,
                            InOrderOrderId = 35,
                            MenuEntryId = 1,
                            Price = 6.5,
                            Quantity = 1
                        },
                        new
                        {
                            OrderedMealId = 3,
                            InOrderOrderId = 37,
                            MenuEntryId = 2,
                            Price = 4.0,
                            Quantity = 4
                        },
                        new
                        {
                            OrderedMealId = 4,
                            InOrderOrderId = 38,
                            MenuEntryId = 3,
                            Price = 3.0,
                            Quantity = 9
                        },
                        new
                        {
                            OrderedMealId = 5,
                            InOrderOrderId = 40,
                            MenuEntryId = 4,
                            Price = 1.0,
                            Quantity = 10
                        },
                        new
                        {
                            OrderedMealId = 6,
                            InOrderOrderId = 33,
                            MenuEntryId = 5,
                            Price = 10.0,
                            Quantity = 11
                        },
                        new
                        {
                            OrderedMealId = 7,
                            InOrderOrderId = 35,
                            MenuEntryId = 6,
                            Price = 16.0,
                            Quantity = 12
                        },
                        new
                        {
                            OrderedMealId = 8,
                            InOrderOrderId = 38,
                            MenuEntryId = 7,
                            Price = 13.0,
                            Quantity = 4
                        },
                        new
                        {
                            OrderedMealId = 9,
                            InOrderOrderId = 35,
                            MenuEntryId = 8,
                            Price = 12.49,
                            Quantity = 1
                        },
                        new
                        {
                            OrderedMealId = 10,
                            InOrderOrderId = 37,
                            MenuEntryId = 9,
                            Price = 3.3300000000000001,
                            Quantity = 2
                        },
                        new
                        {
                            OrderedMealId = 11,
                            InOrderOrderId = 40,
                            MenuEntryId = 1,
                            Price = 5.5899999999999999,
                            Quantity = 1
                        },
                        new
                        {
                            OrderedMealId = 12,
                            InOrderOrderId = 40,
                            MenuEntryId = 2,
                            Price = 6.1200000000000001,
                            Quantity = 2
                        },
                        new
                        {
                            OrderedMealId = 13,
                            InOrderOrderId = 33,
                            MenuEntryId = 3,
                            Price = 6.3899999999999997,
                            Quantity = 1
                        },
                        new
                        {
                            OrderedMealId = 14,
                            InOrderOrderId = 37,
                            MenuEntryId = 4,
                            Price = 5.6900000000000004,
                            Quantity = 3
                        },
                        new
                        {
                            OrderedMealId = 15,
                            InOrderOrderId = 38,
                            MenuEntryId = 5,
                            Price = 7.5999999999999996,
                            Quantity = 4
                        },
                        new
                        {
                            OrderedMealId = 16,
                            InTakeoutTakeoutOrderId = 1,
                            MenuEntryId = 6,
                            Price = 6.2000000000000002,
                            Quantity = 5
                        },
                        new
                        {
                            OrderedMealId = 17,
                            InTakeoutTakeoutOrderId = 5,
                            MenuEntryId = 7,
                            Price = 9.5999999999999996,
                            Quantity = 1
                        },
                        new
                        {
                            OrderedMealId = 18,
                            InTakeoutTakeoutOrderId = 7,
                            MenuEntryId = 8,
                            Price = 2.6000000000000001,
                            Quantity = 1
                        },
                        new
                        {
                            OrderedMealId = 19,
                            InTakeoutTakeoutOrderId = 10,
                            MenuEntryId = 9,
                            Price = 1.6000000000000001,
                            Quantity = 1
                        },
                        new
                        {
                            OrderedMealId = 20,
                            InTakeoutTakeoutOrderId = 12,
                            MenuEntryId = 1,
                            Price = 19.989999999999998,
                            Quantity = 2
                        },
                        new
                        {
                            OrderedMealId = 21,
                            InTakeoutTakeoutOrderId = 14,
                            MenuEntryId = 2,
                            Price = 6.1200000000000001,
                            Quantity = 3
                        },
                        new
                        {
                            OrderedMealId = 22,
                            InTakeoutTakeoutOrderId = 2,
                            MenuEntryId = 3,
                            Price = 6.1900000000000004,
                            Quantity = 1
                        },
                        new
                        {
                            OrderedMealId = 23,
                            InTakeoutTakeoutOrderId = 4,
                            MenuEntryId = 4,
                            Price = 8.5999999999999996,
                            Quantity = 2
                        },
                        new
                        {
                            OrderedMealId = 24,
                            InTakeoutTakeoutOrderId = 8,
                            MenuEntryId = 5,
                            Price = 4.5999999999999996,
                            Quantity = 4
                        },
                        new
                        {
                            OrderedMealId = 25,
                            InTakeoutTakeoutOrderId = 11,
                            MenuEntryId = 5,
                            Price = 4.5999999999999996,
                            Quantity = 4
                        },
                        new
                        {
                            OrderedMealId = 26,
                            InOrderOrderId = 47,
                            MenuEntryId = 1,
                            Price = 100.12,
                            Quantity = 31
                        },
                        new
                        {
                            OrderedMealId = 27,
                            InOrderOrderId = 47,
                            MenuEntryId = 2,
                            Price = 163.21000000000001,
                            Quantity = 13
                        },
                        new
                        {
                            OrderedMealId = 28,
                            InOrderOrderId = 47,
                            MenuEntryId = 3,
                            Price = 240.12,
                            Quantity = 90
                        },
                        new
                        {
                            OrderedMealId = 29,
                            InOrderOrderId = 47,
                            MenuEntryId = 4,
                            Price = 321.66000000000003,
                            Quantity = 31
                        },
                        new
                        {
                            OrderedMealId = 30,
                            InOrderOrderId = 47,
                            MenuEntryId = 5,
                            Price = 45.939999999999998,
                            Quantity = 23
                        },
                        new
                        {
                            OrderedMealId = 31,
                            InOrderOrderId = 47,
                            MenuEntryId = 6,
                            Price = 100.61,
                            Quantity = 67
                        },
                        new
                        {
                            OrderedMealId = 32,
                            InOrderOrderId = 47,
                            MenuEntryId = 7,
                            Price = 544.87,
                            Quantity = 84
                        },
                        new
                        {
                            OrderedMealId = 33,
                            InOrderOrderId = 47,
                            MenuEntryId = 8,
                            Price = 202.22,
                            Quantity = 101
                        },
                        new
                        {
                            OrderedMealId = 34,
                            InOrderOrderId = 47,
                            MenuEntryId = 9,
                            Price = 156.12,
                            Quantity = 72
                        },
                        new
                        {
                            OrderedMealId = 35,
                            InTakeoutTakeoutOrderId = 1,
                            MenuEntryId = 1,
                            Price = 3.21,
                            Quantity = 2
                        },
                        new
                        {
                            OrderedMealId = 36,
                            InTakeoutTakeoutOrderId = 1,
                            MenuEntryId = 2,
                            Price = 1.22,
                            Quantity = 4
                        },
                        new
                        {
                            OrderedMealId = 37,
                            InTakeoutTakeoutOrderId = 1,
                            MenuEntryId = 3,
                            Price = 4.6600000000000001,
                            Quantity = 3
                        },
                        new
                        {
                            OrderedMealId = 38,
                            InTakeoutTakeoutOrderId = 1,
                            MenuEntryId = 4,
                            Price = 5.9699999999999998,
                            Quantity = 1
                        });
                });

            modelBuilder.Entity("PSAPIRestaurantSystem.Models.Person", b =>
                {
                    b.Property<int>("PersonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("PersonId");

                    b.ToTable("People");

                    b.HasData(
                        new
                        {
                            PersonId = 1,
                            Name = "Jonas",
                            Surname = "Petraitis"
                        },
                        new
                        {
                            PersonId = 2,
                            Name = "Mantas",
                            Surname = "Jablonoskis"
                        },
                        new
                        {
                            PersonId = 3,
                            Name = "Tomas",
                            Surname = "Tomaitis"
                        },
                        new
                        {
                            PersonId = 4,
                            Name = "Petras",
                            Surname = "Petraitis"
                        },
                        new
                        {
                            PersonId = 5,
                            Name = "Domas",
                            Surname = "Domaitis"
                        },
                        new
                        {
                            PersonId = 6,
                            Name = "Stasys",
                            Surname = "Stasaitis"
                        },
                        new
                        {
                            PersonId = 7,
                            Name = "Martyna",
                            Surname = "Martynaitė"
                        },
                        new
                        {
                            PersonId = 8,
                            Name = "Diana",
                            Surname = "Jablonoskienė"
                        },
                        new
                        {
                            PersonId = 9,
                            Name = "Tomas",
                            Surname = "Petraitis"
                        },
                        new
                        {
                            PersonId = 10,
                            Name = "Petras",
                            Surname = "Stasaitis"
                        });
                });

            modelBuilder.Entity("PSAPIRestaurantSystem.Models.Reservation", b =>
                {
                    b.Property<int>("ReservationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("PeopleCount")
                        .HasColumnType("int");

                    b.Property<int>("ReservedByUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReservedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("ReservedForDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.HasKey("ReservationId");

                    b.HasIndex("ReservedByUserId");

                    b.ToTable("Reservations");

                    b.HasData(
                        new
                        {
                            ReservationId = 1,
                            PeopleCount = 2,
                            ReservedByUserId = 1,
                            ReservedDate = new DateTime(2020, 5, 22, 16, 14, 19, 234, DateTimeKind.Local).AddTicks(2770),
                            ReservedForDate = new DateTime(2020, 5, 23, 16, 14, 19, 234, DateTimeKind.Local).AddTicks(3250),
                            State = 2
                        },
                        new
                        {
                            ReservationId = 2,
                            PeopleCount = 1,
                            ReservedByUserId = 1,
                            ReservedDate = new DateTime(2020, 5, 22, 16, 14, 19, 234, DateTimeKind.Local).AddTicks(4924),
                            ReservedForDate = new DateTime(2020, 5, 24, 16, 14, 19, 234, DateTimeKind.Local).AddTicks(4943),
                            State = 3
                        },
                        new
                        {
                            ReservationId = 3,
                            Comment = "Atsivesiu suni",
                            PeopleCount = 3,
                            ReservedByUserId = 1,
                            ReservedDate = new DateTime(2020, 5, 22, 16, 14, 19, 234, DateTimeKind.Local).AddTicks(4970),
                            ReservedForDate = new DateTime(2020, 5, 25, 4, 14, 19, 234, DateTimeKind.Local).AddTicks(4973),
                            State = 1
                        },
                        new
                        {
                            ReservationId = 4,
                            PeopleCount = 4,
                            ReservedByUserId = 1,
                            ReservedDate = new DateTime(2020, 5, 22, 16, 14, 19, 234, DateTimeKind.Local).AddTicks(5418),
                            ReservedForDate = new DateTime(2020, 5, 26, 0, 14, 19, 234, DateTimeKind.Local).AddTicks(5430),
                            State = 3
                        },
                        new
                        {
                            ReservationId = 5,
                            PeopleCount = 2,
                            ReservedByUserId = 1,
                            ReservedDate = new DateTime(2020, 5, 22, 16, 14, 19, 234, DateTimeKind.Local).AddTicks(5434),
                            ReservedForDate = new DateTime(2020, 5, 26, 20, 14, 19, 234, DateTimeKind.Local).AddTicks(5438),
                            State = 1
                        },
                        new
                        {
                            ReservationId = 6,
                            PeopleCount = 2,
                            ReservedByUserId = 1,
                            ReservedDate = new DateTime(2020, 5, 22, 16, 14, 19, 234, DateTimeKind.Local).AddTicks(5441),
                            ReservedForDate = new DateTime(2020, 5, 27, 16, 14, 19, 234, DateTimeKind.Local).AddTicks(5444),
                            State = 2
                        },
                        new
                        {
                            ReservationId = 7,
                            PeopleCount = 2,
                            ReservedByUserId = 1,
                            ReservedDate = new DateTime(2020, 5, 22, 16, 14, 19, 234, DateTimeKind.Local).AddTicks(5448),
                            ReservedForDate = new DateTime(2020, 5, 29, 8, 14, 19, 234, DateTimeKind.Local).AddTicks(5451),
                            State = 3
                        },
                        new
                        {
                            ReservationId = 8,
                            PeopleCount = 2,
                            ReservedByUserId = 1,
                            ReservedDate = new DateTime(2020, 5, 22, 16, 14, 19, 234, DateTimeKind.Local).AddTicks(5454),
                            ReservedForDate = new DateTime(2020, 5, 30, 4, 14, 19, 234, DateTimeKind.Local).AddTicks(5457),
                            State = 1
                        },
                        new
                        {
                            ReservationId = 9,
                            PeopleCount = 2,
                            ReservedByUserId = 5,
                            ReservedDate = new DateTime(2020, 5, 22, 16, 14, 19, 234, DateTimeKind.Local).AddTicks(5461),
                            ReservedForDate = new DateTime(2020, 5, 23, 16, 14, 19, 234, DateTimeKind.Local).AddTicks(5464),
                            State = 2
                        },
                        new
                        {
                            ReservationId = 10,
                            PeopleCount = 1,
                            ReservedByUserId = 5,
                            ReservedDate = new DateTime(2020, 5, 22, 16, 14, 19, 234, DateTimeKind.Local).AddTicks(5467),
                            ReservedForDate = new DateTime(2020, 5, 24, 16, 14, 19, 234, DateTimeKind.Local).AddTicks(5472),
                            State = 3
                        },
                        new
                        {
                            ReservationId = 11,
                            Comment = "Atsivesiu kate",
                            PeopleCount = 3,
                            ReservedByUserId = 5,
                            ReservedDate = new DateTime(2020, 5, 22, 16, 14, 19, 234, DateTimeKind.Local).AddTicks(5475),
                            ReservedForDate = new DateTime(2020, 5, 25, 4, 14, 19, 234, DateTimeKind.Local).AddTicks(5478),
                            State = 1
                        },
                        new
                        {
                            ReservationId = 12,
                            PeopleCount = 4,
                            ReservedByUserId = 5,
                            ReservedDate = new DateTime(2020, 5, 22, 16, 14, 19, 234, DateTimeKind.Local).AddTicks(5499),
                            ReservedForDate = new DateTime(2020, 5, 26, 0, 14, 19, 234, DateTimeKind.Local).AddTicks(5502),
                            State = 3
                        },
                        new
                        {
                            ReservationId = 13,
                            PeopleCount = 2,
                            ReservedByUserId = 5,
                            ReservedDate = new DateTime(2020, 5, 22, 16, 14, 19, 234, DateTimeKind.Local).AddTicks(5506),
                            ReservedForDate = new DateTime(2020, 5, 26, 20, 14, 19, 234, DateTimeKind.Local).AddTicks(5509),
                            State = 1
                        },
                        new
                        {
                            ReservationId = 14,
                            PeopleCount = 2,
                            ReservedByUserId = 5,
                            ReservedDate = new DateTime(2020, 5, 22, 16, 14, 19, 234, DateTimeKind.Local).AddTicks(5512),
                            ReservedForDate = new DateTime(2020, 5, 27, 16, 14, 19, 234, DateTimeKind.Local).AddTicks(5515),
                            State = 2
                        },
                        new
                        {
                            ReservationId = 15,
                            PeopleCount = 2,
                            ReservedByUserId = 5,
                            ReservedDate = new DateTime(2020, 5, 22, 16, 14, 19, 234, DateTimeKind.Local).AddTicks(5518),
                            ReservedForDate = new DateTime(2020, 5, 29, 8, 14, 19, 234, DateTimeKind.Local).AddTicks(5521),
                            State = 3
                        },
                        new
                        {
                            ReservationId = 16,
                            PeopleCount = 2,
                            ReservedByUserId = 5,
                            ReservedDate = new DateTime(2020, 5, 22, 16, 14, 19, 234, DateTimeKind.Local).AddTicks(5525),
                            ReservedForDate = new DateTime(2020, 5, 30, 4, 14, 19, 234, DateTimeKind.Local).AddTicks(5528),
                            State = 1
                        },
                        new
                        {
                            ReservationId = 17,
                            PeopleCount = 2,
                            ReservedByUserId = 6,
                            ReservedDate = new DateTime(2020, 5, 22, 16, 14, 19, 234, DateTimeKind.Local).AddTicks(5531),
                            ReservedForDate = new DateTime(2020, 5, 23, 16, 14, 19, 234, DateTimeKind.Local).AddTicks(5535),
                            State = 2
                        },
                        new
                        {
                            ReservationId = 18,
                            PeopleCount = 1,
                            ReservedByUserId = 6,
                            ReservedDate = new DateTime(2020, 5, 22, 16, 14, 19, 234, DateTimeKind.Local).AddTicks(5538),
                            ReservedForDate = new DateTime(2020, 5, 24, 16, 14, 19, 234, DateTimeKind.Local).AddTicks(5542),
                            State = 3
                        },
                        new
                        {
                            ReservationId = 19,
                            Comment = "Atsivesiu suni",
                            PeopleCount = 3,
                            ReservedByUserId = 6,
                            ReservedDate = new DateTime(2020, 5, 22, 16, 14, 19, 234, DateTimeKind.Local).AddTicks(5545),
                            ReservedForDate = new DateTime(2020, 5, 25, 4, 14, 19, 234, DateTimeKind.Local).AddTicks(5739),
                            State = 1
                        },
                        new
                        {
                            ReservationId = 20,
                            PeopleCount = 4,
                            ReservedByUserId = 6,
                            ReservedDate = new DateTime(2020, 5, 22, 16, 14, 19, 234, DateTimeKind.Local).AddTicks(5743),
                            ReservedForDate = new DateTime(2020, 5, 26, 0, 14, 19, 234, DateTimeKind.Local).AddTicks(5746),
                            State = 3
                        },
                        new
                        {
                            ReservationId = 21,
                            PeopleCount = 2,
                            ReservedByUserId = 6,
                            ReservedDate = new DateTime(2020, 5, 22, 16, 14, 19, 234, DateTimeKind.Local).AddTicks(5750),
                            ReservedForDate = new DateTime(2020, 5, 26, 20, 14, 19, 234, DateTimeKind.Local).AddTicks(5753),
                            State = 1
                        },
                        new
                        {
                            ReservationId = 22,
                            PeopleCount = 2,
                            ReservedByUserId = 6,
                            ReservedDate = new DateTime(2020, 5, 22, 16, 14, 19, 234, DateTimeKind.Local).AddTicks(5756),
                            ReservedForDate = new DateTime(2020, 5, 27, 16, 14, 19, 234, DateTimeKind.Local).AddTicks(5759),
                            State = 2
                        },
                        new
                        {
                            ReservationId = 23,
                            PeopleCount = 2,
                            ReservedByUserId = 6,
                            ReservedDate = new DateTime(2020, 5, 22, 16, 14, 19, 234, DateTimeKind.Local).AddTicks(5763),
                            ReservedForDate = new DateTime(2020, 5, 29, 8, 14, 19, 234, DateTimeKind.Local).AddTicks(5766),
                            State = 3
                        },
                        new
                        {
                            ReservationId = 24,
                            PeopleCount = 2,
                            ReservedByUserId = 6,
                            ReservedDate = new DateTime(2020, 5, 22, 16, 14, 19, 234, DateTimeKind.Local).AddTicks(5770),
                            ReservedForDate = new DateTime(2020, 5, 30, 4, 14, 19, 234, DateTimeKind.Local).AddTicks(5772),
                            State = 1
                        },
                        new
                        {
                            ReservationId = 25,
                            PeopleCount = 2,
                            ReservedByUserId = 7,
                            ReservedDate = new DateTime(2020, 5, 22, 16, 14, 19, 234, DateTimeKind.Local).AddTicks(5776),
                            ReservedForDate = new DateTime(2020, 5, 23, 16, 14, 19, 234, DateTimeKind.Local).AddTicks(5779),
                            State = 2
                        },
                        new
                        {
                            ReservationId = 26,
                            PeopleCount = 1,
                            ReservedByUserId = 7,
                            ReservedDate = new DateTime(2020, 5, 22, 16, 14, 19, 234, DateTimeKind.Local).AddTicks(5783),
                            ReservedForDate = new DateTime(2020, 5, 24, 16, 14, 19, 234, DateTimeKind.Local).AddTicks(5786),
                            State = 3
                        },
                        new
                        {
                            ReservationId = 27,
                            Comment = "Atsinesiu vezliuka",
                            PeopleCount = 3,
                            ReservedByUserId = 7,
                            ReservedDate = new DateTime(2020, 5, 22, 16, 14, 19, 234, DateTimeKind.Local).AddTicks(5789),
                            ReservedForDate = new DateTime(2020, 5, 25, 4, 14, 19, 234, DateTimeKind.Local).AddTicks(5792),
                            State = 1
                        },
                        new
                        {
                            ReservationId = 28,
                            PeopleCount = 4,
                            ReservedByUserId = 7,
                            ReservedDate = new DateTime(2020, 5, 22, 16, 14, 19, 234, DateTimeKind.Local).AddTicks(5796),
                            ReservedForDate = new DateTime(2020, 5, 26, 0, 14, 19, 234, DateTimeKind.Local).AddTicks(5799),
                            State = 3
                        },
                        new
                        {
                            ReservationId = 29,
                            PeopleCount = 2,
                            ReservedByUserId = 7,
                            ReservedDate = new DateTime(2020, 5, 22, 16, 14, 19, 234, DateTimeKind.Local).AddTicks(5802),
                            ReservedForDate = new DateTime(2020, 5, 26, 20, 14, 19, 234, DateTimeKind.Local).AddTicks(5805),
                            State = 1
                        },
                        new
                        {
                            ReservationId = 30,
                            PeopleCount = 2,
                            ReservedByUserId = 7,
                            ReservedDate = new DateTime(2020, 5, 22, 16, 14, 19, 234, DateTimeKind.Local).AddTicks(5809),
                            ReservedForDate = new DateTime(2020, 5, 27, 16, 14, 19, 234, DateTimeKind.Local).AddTicks(5812),
                            State = 2
                        },
                        new
                        {
                            ReservationId = 31,
                            PeopleCount = 2,
                            ReservedByUserId = 7,
                            ReservedDate = new DateTime(2020, 5, 22, 16, 14, 19, 234, DateTimeKind.Local).AddTicks(5815),
                            ReservedForDate = new DateTime(2020, 5, 29, 8, 14, 19, 234, DateTimeKind.Local).AddTicks(5818),
                            State = 3
                        },
                        new
                        {
                            ReservationId = 32,
                            PeopleCount = 2,
                            ReservedByUserId = 7,
                            ReservedDate = new DateTime(2020, 5, 22, 16, 14, 19, 234, DateTimeKind.Local).AddTicks(5822),
                            ReservedForDate = new DateTime(2020, 5, 30, 4, 14, 19, 234, DateTimeKind.Local).AddTicks(5825),
                            State = 1
                        },
                        new
                        {
                            ReservationId = 33,
                            PeopleCount = 2,
                            ReservedByUserId = 5,
                            ReservedDate = new DateTime(2020, 5, 20, 16, 14, 19, 234, DateTimeKind.Local).AddTicks(5828),
                            ReservedForDate = new DateTime(2020, 5, 21, 16, 14, 19, 234, DateTimeKind.Local).AddTicks(5831),
                            State = 2
                        },
                        new
                        {
                            ReservationId = 34,
                            PeopleCount = 1,
                            ReservedByUserId = 5,
                            ReservedDate = new DateTime(2020, 5, 20, 4, 14, 19, 234, DateTimeKind.Local).AddTicks(5835),
                            ReservedForDate = new DateTime(2020, 5, 20, 16, 14, 19, 234, DateTimeKind.Local).AddTicks(5838),
                            State = 3
                        },
                        new
                        {
                            ReservationId = 35,
                            Comment = "Atsivesiu suni",
                            PeopleCount = 3,
                            ReservedByUserId = 5,
                            ReservedDate = new DateTime(2020, 5, 19, 8, 14, 19, 234, DateTimeKind.Local).AddTicks(5841),
                            ReservedForDate = new DateTime(2020, 5, 20, 4, 14, 19, 234, DateTimeKind.Local).AddTicks(5845),
                            State = 1
                        },
                        new
                        {
                            ReservationId = 36,
                            PeopleCount = 4,
                            ReservedByUserId = 5,
                            ReservedDate = new DateTime(2020, 5, 18, 12, 14, 19, 234, DateTimeKind.Local).AddTicks(5848),
                            ReservedForDate = new DateTime(2020, 5, 19, 8, 14, 19, 234, DateTimeKind.Local).AddTicks(5851),
                            State = 3
                        },
                        new
                        {
                            ReservationId = 37,
                            PeopleCount = 2,
                            ReservedByUserId = 5,
                            ReservedDate = new DateTime(2020, 5, 17, 16, 14, 19, 234, DateTimeKind.Local).AddTicks(5855),
                            ReservedForDate = new DateTime(2020, 5, 18, 12, 14, 19, 234, DateTimeKind.Local).AddTicks(5858),
                            State = 1
                        },
                        new
                        {
                            ReservationId = 38,
                            PeopleCount = 2,
                            ReservedByUserId = 5,
                            ReservedDate = new DateTime(2020, 5, 16, 0, 14, 19, 234, DateTimeKind.Local).AddTicks(5861),
                            ReservedForDate = new DateTime(2020, 5, 17, 16, 14, 19, 234, DateTimeKind.Local).AddTicks(5864),
                            State = 2
                        },
                        new
                        {
                            ReservationId = 39,
                            PeopleCount = 2,
                            ReservedByUserId = 5,
                            ReservedDate = new DateTime(2020, 5, 15, 4, 14, 19, 234, DateTimeKind.Local).AddTicks(5868),
                            ReservedForDate = new DateTime(2020, 5, 16, 0, 14, 19, 234, DateTimeKind.Local).AddTicks(5871),
                            State = 3
                        },
                        new
                        {
                            ReservationId = 40,
                            PeopleCount = 2,
                            ReservedByUserId = 5,
                            ReservedDate = new DateTime(2020, 5, 14, 8, 14, 19, 234, DateTimeKind.Local).AddTicks(5875),
                            ReservedForDate = new DateTime(2020, 5, 15, 4, 14, 19, 234, DateTimeKind.Local).AddTicks(5878),
                            State = 1
                        });
                });

            modelBuilder.Entity("PSAPIRestaurantSystem.Models.Review", b =>
                {
                    b.Property<int>("ReviewId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReviewDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("ReviewText")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("ReviewId");

                    b.HasIndex("UserId");

                    b.ToTable("Reviews");

                    b.HasData(
                        new
                        {
                            ReviewId = 1,
                            Rating = 2,
                            ReviewDate = new DateTime(2020, 5, 22, 16, 14, 19, 233, DateTimeKind.Local).AddTicks(1001),
                            ReviewText = "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam consectetur tincidunt justo ac sollicitudin. Quisque erat mauris, malesuada in sapien quis, accumsan condimentum dui. Curabitur porttitor nibh in odio ultrices, eget efficitur arcu sollicitudin. Quisque at eros lectus. Vestibulum et bibendum arcu. Nunc a nulla consequat leo congue egestas eget in enim. Aliquam dictum ultricies arcu, finibus accumsan nisi imperdiet sed. Curabitur ac nibh tellus. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. Orci varius natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Cras porta cursus odio eget volutpat. Praesent tristique sollicitudin lacus, vel faucibus nisl vestibulum nec. Vestibulum iaculis nulla eu risus mattis, quis finibus risus bibendum.",
                            UserId = 1
                        },
                        new
                        {
                            ReviewId = 2,
                            Rating = 5,
                            ReviewDate = new DateTime(2020, 5, 22, 16, 14, 19, 233, DateTimeKind.Local).AddTicks(1905),
                            ReviewText = "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam consectetur tincidunt justo ac sollicitudin. Quisque erat mauris, malesuada in sapien quis, accumsan condimentum dui. Curabitur porttitor nibh in odio ultrices, eget efficitur arcu sollicitudin. Quisque at eros lectus. Vestibulum et bibendum arcu. Nunc a nulla consequat leo congue egestas eget in enim. Aliquam dictum ultricies arcu, finibus accumsan nisi imperdiet sed. Curabitur ac nibh tellus. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. Orci varius natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Cras porta cursus odio eget volutpat. Praesent tristique sollicitudin lacus, vel faucibus nisl vestibulum nec. Vestibulum iaculis nulla eu risus mattis, quis finibus risus bibendum.",
                            UserId = 2
                        },
                        new
                        {
                            ReviewId = 3,
                            Rating = 4,
                            ReviewDate = new DateTime(2020, 5, 22, 16, 14, 19, 233, DateTimeKind.Local).AddTicks(1933),
                            ReviewText = "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam consectetur tincidunt justo ac sollicitudin. Quisque erat mauris, malesuada in sapien quis, accumsan condimentum dui. Curabitur porttitor nibh in odio ultrices, eget efficitur arcu sollicitudin. Quisque at eros lectus. Vestibulum et bibendum arcu. Nunc a nulla consequat leo congue egestas eget in enim. Aliquam dictum ultricies arcu, finibus accumsan nisi imperdiet sed. Curabitur ac nibh tellus. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. Orci varius natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Cras porta cursus odio eget volutpat. Praesent tristique sollicitudin lacus, vel faucibus nisl vestibulum nec. Vestibulum iaculis nulla eu risus mattis, quis finibus risus bibendum.",
                            UserId = 3
                        });
                });

            modelBuilder.Entity("PSAPIRestaurantSystem.Models.Table", b =>
                {
                    b.Property<int>("TableNum")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("SeatCount")
                        .HasColumnType("int");

                    b.HasKey("TableNum");

                    b.ToTable("Tables");

                    b.HasData(
                        new
                        {
                            TableNum = 1,
                            SeatCount = 4
                        },
                        new
                        {
                            TableNum = 2,
                            SeatCount = 2
                        },
                        new
                        {
                            TableNum = 3,
                            SeatCount = 4
                        },
                        new
                        {
                            TableNum = 4,
                            SeatCount = 5
                        },
                        new
                        {
                            TableNum = 5,
                            SeatCount = 12
                        },
                        new
                        {
                            TableNum = 6,
                            SeatCount = 12
                        },
                        new
                        {
                            TableNum = 7,
                            SeatCount = 4
                        },
                        new
                        {
                            TableNum = 8,
                            SeatCount = 4
                        },
                        new
                        {
                            TableNum = 9,
                            SeatCount = 2
                        },
                        new
                        {
                            TableNum = 10,
                            SeatCount = 2
                        },
                        new
                        {
                            TableNum = 11,
                            SeatCount = 6
                        },
                        new
                        {
                            TableNum = 12,
                            SeatCount = 6
                        });
                });

            modelBuilder.Entity("PSAPIRestaurantSystem.Models.TableOccupancy", b =>
                {
                    b.Property<int>("TableOccupancyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int?>("ReservationId")
                        .HasColumnType("int");

                    b.Property<int>("TableId")
                        .HasColumnType("int");

                    b.HasKey("TableOccupancyId");

                    b.HasIndex("OrderId");

                    b.HasIndex("ReservationId");

                    b.HasIndex("TableId");

                    b.ToTable("TableOccupancies");

                    b.HasData(
                        new
                        {
                            TableOccupancyId = 1,
                            OrderId = 1,
                            ReservationId = 1,
                            TableId = 12
                        },
                        new
                        {
                            TableOccupancyId = 2,
                            OrderId = 2,
                            ReservationId = 2,
                            TableId = 12
                        },
                        new
                        {
                            TableOccupancyId = 3,
                            OrderId = 3,
                            ReservationId = 3,
                            TableId = 12
                        },
                        new
                        {
                            TableOccupancyId = 4,
                            OrderId = 4,
                            ReservationId = 4,
                            TableId = 12
                        },
                        new
                        {
                            TableOccupancyId = 5,
                            OrderId = 5,
                            ReservationId = 5,
                            TableId = 12
                        },
                        new
                        {
                            TableOccupancyId = 6,
                            OrderId = 6,
                            ReservationId = 6,
                            TableId = 12
                        },
                        new
                        {
                            TableOccupancyId = 7,
                            OrderId = 7,
                            ReservationId = 7,
                            TableId = 12
                        },
                        new
                        {
                            TableOccupancyId = 8,
                            OrderId = 8,
                            ReservationId = 8,
                            TableId = 12
                        },
                        new
                        {
                            TableOccupancyId = 9,
                            OrderId = 9,
                            ReservationId = 9,
                            TableId = 12
                        },
                        new
                        {
                            TableOccupancyId = 10,
                            OrderId = 10,
                            ReservationId = 10,
                            TableId = 12
                        },
                        new
                        {
                            TableOccupancyId = 11,
                            OrderId = 11,
                            ReservationId = 11,
                            TableId = 12
                        },
                        new
                        {
                            TableOccupancyId = 12,
                            OrderId = 12,
                            ReservationId = 12,
                            TableId = 12
                        },
                        new
                        {
                            TableOccupancyId = 13,
                            OrderId = 13,
                            ReservationId = 13,
                            TableId = 12
                        },
                        new
                        {
                            TableOccupancyId = 14,
                            OrderId = 14,
                            ReservationId = 14,
                            TableId = 12
                        },
                        new
                        {
                            TableOccupancyId = 15,
                            OrderId = 15,
                            ReservationId = 15,
                            TableId = 12
                        },
                        new
                        {
                            TableOccupancyId = 16,
                            OrderId = 16,
                            ReservationId = 16,
                            TableId = 12
                        },
                        new
                        {
                            TableOccupancyId = 17,
                            OrderId = 17,
                            ReservationId = 17,
                            TableId = 12
                        },
                        new
                        {
                            TableOccupancyId = 18,
                            OrderId = 18,
                            ReservationId = 18,
                            TableId = 12
                        },
                        new
                        {
                            TableOccupancyId = 19,
                            OrderId = 19,
                            ReservationId = 19,
                            TableId = 12
                        },
                        new
                        {
                            TableOccupancyId = 20,
                            OrderId = 20,
                            ReservationId = 20,
                            TableId = 12
                        },
                        new
                        {
                            TableOccupancyId = 21,
                            OrderId = 21,
                            ReservationId = 21,
                            TableId = 12
                        },
                        new
                        {
                            TableOccupancyId = 22,
                            OrderId = 22,
                            ReservationId = 22,
                            TableId = 12
                        },
                        new
                        {
                            TableOccupancyId = 23,
                            OrderId = 23,
                            ReservationId = 23,
                            TableId = 12
                        },
                        new
                        {
                            TableOccupancyId = 24,
                            OrderId = 24,
                            ReservationId = 24,
                            TableId = 12
                        },
                        new
                        {
                            TableOccupancyId = 25,
                            OrderId = 25,
                            ReservationId = 25,
                            TableId = 12
                        },
                        new
                        {
                            TableOccupancyId = 26,
                            OrderId = 26,
                            ReservationId = 26,
                            TableId = 12
                        },
                        new
                        {
                            TableOccupancyId = 27,
                            OrderId = 27,
                            ReservationId = 27,
                            TableId = 12
                        },
                        new
                        {
                            TableOccupancyId = 28,
                            OrderId = 28,
                            ReservationId = 28,
                            TableId = 12
                        },
                        new
                        {
                            TableOccupancyId = 29,
                            OrderId = 29,
                            ReservationId = 29,
                            TableId = 12
                        },
                        new
                        {
                            TableOccupancyId = 30,
                            OrderId = 30,
                            ReservationId = 30,
                            TableId = 12
                        },
                        new
                        {
                            TableOccupancyId = 31,
                            OrderId = 31,
                            ReservationId = 31,
                            TableId = 12
                        },
                        new
                        {
                            TableOccupancyId = 32,
                            OrderId = 32,
                            ReservationId = 32,
                            TableId = 12
                        },
                        new
                        {
                            TableOccupancyId = 33,
                            OrderId = 33,
                            ReservationId = 33,
                            TableId = 2
                        },
                        new
                        {
                            TableOccupancyId = 34,
                            OrderId = 33,
                            ReservationId = 33,
                            TableId = 10
                        },
                        new
                        {
                            TableOccupancyId = 35,
                            OrderId = 33,
                            ReservationId = 33,
                            TableId = 4
                        },
                        new
                        {
                            TableOccupancyId = 36,
                            OrderId = 35,
                            ReservationId = 35,
                            TableId = 11
                        },
                        new
                        {
                            TableOccupancyId = 37,
                            OrderId = 37,
                            ReservationId = 37,
                            TableId = 12
                        },
                        new
                        {
                            TableOccupancyId = 38,
                            OrderId = 38,
                            ReservationId = 38,
                            TableId = 11
                        },
                        new
                        {
                            TableOccupancyId = 39,
                            OrderId = 40,
                            ReservationId = 40,
                            TableId = 3
                        },
                        new
                        {
                            TableOccupancyId = 40,
                            OrderId = 40,
                            ReservationId = 40,
                            TableId = 5
                        },
                        new
                        {
                            TableOccupancyId = 41,
                            OrderId = 41,
                            TableId = 12
                        },
                        new
                        {
                            TableOccupancyId = 42,
                            OrderId = 42,
                            TableId = 12
                        },
                        new
                        {
                            TableOccupancyId = 43,
                            OrderId = 43,
                            TableId = 12
                        },
                        new
                        {
                            TableOccupancyId = 44,
                            OrderId = 44,
                            TableId = 12
                        },
                        new
                        {
                            TableOccupancyId = 45,
                            OrderId = 45,
                            TableId = 12
                        },
                        new
                        {
                            TableOccupancyId = 46,
                            OrderId = 46,
                            TableId = 12
                        },
                        new
                        {
                            TableOccupancyId = 47,
                            OrderId = 47,
                            TableId = 1
                        });
                });

            modelBuilder.Entity("PSAPIRestaurantSystem.Models.TakeoutOrder", b =>
                {
                    b.Property<int>("TakeoutOrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("ConfirmationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("ManagedByWaiterId")
                        .HasColumnType("int");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("OrderedByUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("OrderedForDate")
                        .HasColumnType("datetime(6)");

                    b.Property<double>("Price")
                        .HasColumnType("double");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.HasKey("TakeoutOrderId");

                    b.HasIndex("ManagedByWaiterId");

                    b.HasIndex("OrderedByUserId");

                    b.ToTable("TakeoutOrders");

                    b.HasData(
                        new
                        {
                            TakeoutOrderId = 1,
                            ConfirmationDate = new DateTime(2020, 5, 22, 16, 19, 19, 235, DateTimeKind.Local).AddTicks(7421),
                            ManagedByWaiterId = 1,
                            OrderDate = new DateTime(2020, 5, 22, 16, 14, 19, 235, DateTimeKind.Local).AddTicks(6245),
                            OrderedByUserId = 5,
                            OrderedForDate = new DateTime(2020, 5, 22, 18, 14, 19, 235, DateTimeKind.Local).AddTicks(6853),
                            Price = 100.0,
                            State = 3
                        },
                        new
                        {
                            TakeoutOrderId = 2,
                            ConfirmationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ManagedByWaiterId = 1,
                            OrderDate = new DateTime(2020, 5, 22, 16, 14, 19, 235, DateTimeKind.Local).AddTicks(9443),
                            OrderedByUserId = 5,
                            OrderedForDate = new DateTime(2020, 5, 22, 18, 14, 19, 235, DateTimeKind.Local).AddTicks(9463),
                            Price = 10.109999999999999,
                            State = 2
                        },
                        new
                        {
                            TakeoutOrderId = 3,
                            ConfirmationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ManagedByWaiterId = 2,
                            OrderDate = new DateTime(2020, 5, 22, 16, 14, 19, 235, DateTimeKind.Local).AddTicks(9533),
                            OrderedByUserId = 5,
                            OrderedForDate = new DateTime(2020, 5, 22, 18, 14, 19, 235, DateTimeKind.Local).AddTicks(9537),
                            Price = 100.0,
                            State = 4
                        },
                        new
                        {
                            TakeoutOrderId = 4,
                            ConfirmationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ManagedByWaiterId = 3,
                            OrderDate = new DateTime(2020, 5, 22, 16, 14, 19, 235, DateTimeKind.Local).AddTicks(9541),
                            OrderedByUserId = 5,
                            OrderedForDate = new DateTime(2020, 5, 22, 18, 14, 19, 235, DateTimeKind.Local).AddTicks(9544),
                            Price = 15.49,
                            State = 2
                        },
                        new
                        {
                            TakeoutOrderId = 5,
                            ConfirmationDate = new DateTime(2020, 5, 22, 17, 4, 19, 235, DateTimeKind.Local).AddTicks(9554),
                            ManagedByWaiterId = 1,
                            OrderDate = new DateTime(2020, 5, 22, 16, 14, 19, 235, DateTimeKind.Local).AddTicks(9548),
                            OrderedByUserId = 5,
                            OrderedForDate = new DateTime(2020, 5, 22, 18, 14, 19, 235, DateTimeKind.Local).AddTicks(9551),
                            Price = 13.5,
                            State = 3
                        },
                        new
                        {
                            TakeoutOrderId = 6,
                            ConfirmationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ManagedByWaiterId = 2,
                            OrderDate = new DateTime(2020, 5, 22, 16, 14, 19, 235, DateTimeKind.Local).AddTicks(9565),
                            OrderedByUserId = 5,
                            OrderedForDate = new DateTime(2020, 5, 22, 18, 14, 19, 235, DateTimeKind.Local).AddTicks(9568),
                            Price = 100.0,
                            State = 1
                        },
                        new
                        {
                            TakeoutOrderId = 7,
                            ConfirmationDate = new DateTime(2020, 5, 22, 16, 21, 19, 235, DateTimeKind.Local).AddTicks(9578),
                            ManagedByWaiterId = 3,
                            OrderDate = new DateTime(2020, 5, 22, 16, 14, 19, 235, DateTimeKind.Local).AddTicks(9572),
                            OrderedByUserId = 5,
                            OrderedForDate = new DateTime(2020, 5, 22, 18, 14, 19, 235, DateTimeKind.Local).AddTicks(9575),
                            Price = 100.0,
                            State = 3
                        },
                        new
                        {
                            TakeoutOrderId = 8,
                            ConfirmationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ManagedByWaiterId = 1,
                            OrderDate = new DateTime(2020, 5, 22, 16, 14, 19, 235, DateTimeKind.Local).AddTicks(9582),
                            OrderedByUserId = 5,
                            OrderedForDate = new DateTime(2020, 5, 22, 18, 14, 19, 235, DateTimeKind.Local).AddTicks(9585),
                            Price = 100.0,
                            State = 2
                        },
                        new
                        {
                            TakeoutOrderId = 9,
                            ConfirmationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ManagedByWaiterId = 2,
                            OrderDate = new DateTime(2020, 5, 22, 16, 14, 19, 235, DateTimeKind.Local).AddTicks(9589),
                            OrderedByUserId = 5,
                            OrderedForDate = new DateTime(2020, 5, 22, 18, 14, 19, 235, DateTimeKind.Local).AddTicks(9592),
                            Price = 100.0,
                            State = 1
                        },
                        new
                        {
                            TakeoutOrderId = 10,
                            ConfirmationDate = new DateTime(2020, 5, 22, 16, 26, 19, 235, DateTimeKind.Local).AddTicks(9601),
                            ManagedByWaiterId = 1,
                            OrderDate = new DateTime(2020, 5, 22, 16, 14, 19, 235, DateTimeKind.Local).AddTicks(9595),
                            OrderedByUserId = 5,
                            OrderedForDate = new DateTime(2020, 5, 22, 18, 14, 19, 235, DateTimeKind.Local).AddTicks(9598),
                            Price = 100.0,
                            State = 3
                        },
                        new
                        {
                            TakeoutOrderId = 11,
                            ConfirmationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ManagedByWaiterId = 1,
                            OrderDate = new DateTime(2020, 5, 22, 16, 14, 19, 235, DateTimeKind.Local).AddTicks(9605),
                            OrderedByUserId = 5,
                            OrderedForDate = new DateTime(2020, 5, 22, 18, 14, 19, 235, DateTimeKind.Local).AddTicks(9608),
                            Price = 100.0,
                            State = 2
                        },
                        new
                        {
                            TakeoutOrderId = 12,
                            ConfirmationDate = new DateTime(2020, 5, 22, 16, 23, 19, 235, DateTimeKind.Local).AddTicks(9617),
                            ManagedByWaiterId = 3,
                            OrderDate = new DateTime(2020, 5, 22, 16, 14, 19, 235, DateTimeKind.Local).AddTicks(9611),
                            OrderedByUserId = 5,
                            OrderedForDate = new DateTime(2020, 5, 22, 18, 14, 19, 235, DateTimeKind.Local).AddTicks(9614),
                            Price = 100.0,
                            State = 3
                        },
                        new
                        {
                            TakeoutOrderId = 13,
                            ConfirmationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ManagedByWaiterId = 1,
                            OrderDate = new DateTime(2020, 5, 22, 16, 14, 19, 235, DateTimeKind.Local).AddTicks(9621),
                            OrderedByUserId = 5,
                            OrderedForDate = new DateTime(2020, 5, 22, 18, 14, 19, 235, DateTimeKind.Local).AddTicks(9624),
                            Price = 100.0,
                            State = 4
                        },
                        new
                        {
                            TakeoutOrderId = 14,
                            ConfirmationDate = new DateTime(2020, 5, 22, 16, 15, 19, 235, DateTimeKind.Local).AddTicks(9634),
                            ManagedByWaiterId = 2,
                            OrderDate = new DateTime(2020, 5, 22, 16, 14, 19, 235, DateTimeKind.Local).AddTicks(9627),
                            OrderedByUserId = 5,
                            OrderedForDate = new DateTime(2020, 5, 22, 18, 14, 19, 235, DateTimeKind.Local).AddTicks(9630),
                            Price = 100.0,
                            State = 3
                        });
                });

            modelBuilder.Entity("PSAPIRestaurantSystem.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Confirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("LastLoginDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("LoyalityPoints")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("PersonId")
                        .HasColumnType("int");

                    b.Property<DateTime>("RegistrationDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("UserId");

                    b.HasIndex("PersonId")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Confirmed = true,
                            Email = "jonas@emai.com",
                            LastLoginDate = new DateTime(2020, 5, 22, 16, 14, 19, 232, DateTimeKind.Local).AddTicks(6722),
                            LoyalityPoints = 1,
                            Password = "slaptozodis",
                            PersonId = 1,
                            RegistrationDate = new DateTime(2020, 5, 22, 16, 14, 19, 232, DateTimeKind.Local).AddTicks(6048)
                        },
                        new
                        {
                            UserId = 2,
                            Confirmed = true,
                            Email = "mantas@email.com",
                            LastLoginDate = new DateTime(2020, 5, 22, 16, 14, 19, 232, DateTimeKind.Local).AddTicks(8824),
                            LoyalityPoints = 10,
                            Password = "slaptozodis",
                            PersonId = 2,
                            RegistrationDate = new DateTime(2020, 5, 22, 16, 14, 19, 232, DateTimeKind.Local).AddTicks(8789)
                        },
                        new
                        {
                            UserId = 3,
                            Confirmed = true,
                            Email = "tomas@email.com",
                            LastLoginDate = new DateTime(2020, 5, 22, 16, 14, 19, 232, DateTimeKind.Local).AddTicks(8861),
                            LoyalityPoints = 20,
                            Password = "slaptozodis",
                            PersonId = 3,
                            RegistrationDate = new DateTime(2020, 5, 22, 16, 14, 19, 232, DateTimeKind.Local).AddTicks(8857)
                        },
                        new
                        {
                            UserId = 4,
                            Confirmed = true,
                            Email = "petraitis@gmail.com",
                            LastLoginDate = new DateTime(2020, 5, 22, 16, 14, 19, 232, DateTimeKind.Local).AddTicks(8868),
                            LoyalityPoints = 5,
                            Password = "slaptozodis",
                            PersonId = 4,
                            RegistrationDate = new DateTime(2020, 5, 22, 16, 14, 19, 232, DateTimeKind.Local).AddTicks(8865)
                        },
                        new
                        {
                            UserId = 5,
                            Confirmed = true,
                            Email = "domas@email.com",
                            LastLoginDate = new DateTime(2020, 5, 22, 16, 14, 19, 232, DateTimeKind.Local).AddTicks(8906),
                            LoyalityPoints = 50,
                            Password = "slaptozodis",
                            PersonId = 5,
                            RegistrationDate = new DateTime(2020, 5, 20, 16, 14, 19, 232, DateTimeKind.Local).AddTicks(8872)
                        },
                        new
                        {
                            UserId = 6,
                            Confirmed = true,
                            Email = "stasys@email.com",
                            LastLoginDate = new DateTime(2020, 5, 22, 16, 14, 19, 232, DateTimeKind.Local).AddTicks(8914),
                            LoyalityPoints = 60,
                            Password = "slaptozodis",
                            PersonId = 6,
                            RegistrationDate = new DateTime(2020, 5, 19, 16, 14, 19, 232, DateTimeKind.Local).AddTicks(8910)
                        },
                        new
                        {
                            UserId = 7,
                            Confirmed = true,
                            Email = "martyna@email.com",
                            LastLoginDate = new DateTime(2020, 5, 22, 16, 14, 19, 232, DateTimeKind.Local).AddTicks(8921),
                            LoyalityPoints = 70,
                            Password = "slaptozodis",
                            PersonId = 7,
                            RegistrationDate = new DateTime(2020, 5, 18, 16, 14, 19, 232, DateTimeKind.Local).AddTicks(8918)
                        },
                        new
                        {
                            UserId = 8,
                            Confirmed = true,
                            Email = "diana@email.com",
                            LastLoginDate = new DateTime(2020, 5, 22, 16, 14, 19, 232, DateTimeKind.Local).AddTicks(8990),
                            LoyalityPoints = 80,
                            Password = "slaptozodis",
                            PersonId = 8,
                            RegistrationDate = new DateTime(2020, 5, 17, 16, 14, 19, 232, DateTimeKind.Local).AddTicks(8986)
                        },
                        new
                        {
                            UserId = 9,
                            Confirmed = true,
                            Email = "tomas@gmail.com",
                            LastLoginDate = new DateTime(2020, 5, 22, 16, 14, 19, 232, DateTimeKind.Local).AddTicks(8998),
                            LoyalityPoints = 3,
                            Password = "slaptozodis",
                            PersonId = 9,
                            RegistrationDate = new DateTime(2020, 5, 16, 16, 14, 19, 232, DateTimeKind.Local).AddTicks(8994)
                        },
                        new
                        {
                            UserId = 10,
                            Confirmed = true,
                            Email = "petras@gmail.com",
                            LastLoginDate = new DateTime(2020, 5, 22, 16, 14, 19, 232, DateTimeKind.Local).AddTicks(9005),
                            LoyalityPoints = 4,
                            Password = "slaptozodis",
                            PersonId = 10,
                            RegistrationDate = new DateTime(2020, 5, 21, 16, 14, 19, 232, DateTimeKind.Local).AddTicks(9001)
                        });
                });

            modelBuilder.Entity("PSAPIRestaurantSystem.Models.Waiter", b =>
                {
                    b.Property<int>("WaiterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<double>("Tips")
                        .HasColumnType("double");

                    b.HasKey("WaiterId");

                    b.HasIndex("EmployeeId")
                        .IsUnique();

                    b.ToTable("Waiters");

                    b.HasData(
                        new
                        {
                            WaiterId = 1,
                            EmployeeId = 2,
                            Tips = 100.0
                        },
                        new
                        {
                            WaiterId = 2,
                            EmployeeId = 3,
                            Tips = 200.0
                        },
                        new
                        {
                            WaiterId = 3,
                            EmployeeId = 4,
                            Tips = 250.0
                        });
                });

            modelBuilder.Entity("PSAPIRestaurantSystem.Models.Admin", b =>
                {
                    b.HasOne("PSAPIRestaurantSystem.Models.Employee", "Employee")
                        .WithOne("Admin")
                        .HasForeignKey("PSAPIRestaurantSystem.Models.Admin", "EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PSAPIRestaurantSystem.Models.Employee", b =>
                {
                    b.HasOne("PSAPIRestaurantSystem.Models.Admin", "RegisteredBy")
                        .WithMany("RegisteredEmployees")
                        .HasForeignKey("RegisteredByAdminId");

                    b.HasOne("PSAPIRestaurantSystem.Models.User", "User")
                        .WithOne("Employee")
                        .HasForeignKey("PSAPIRestaurantSystem.Models.Employee", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PSAPIRestaurantSystem.Models.MenuEntry", b =>
                {
                    b.HasOne("PSAPIRestaurantSystem.Models.Menu", "Menu")
                        .WithMany("MenuEntries")
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PSAPIRestaurantSystem.Models.Order", b =>
                {
                    b.HasOne("PSAPIRestaurantSystem.Models.Waiter", "ManagedBy")
                        .WithMany("Orders")
                        .HasForeignKey("ManagedByWaiterId");
                });

            modelBuilder.Entity("PSAPIRestaurantSystem.Models.OrderedMeal", b =>
                {
                    b.HasOne("PSAPIRestaurantSystem.Models.Order", "InOrder")
                        .WithMany("OrderedMeals")
                        .HasForeignKey("InOrderOrderId");

                    b.HasOne("PSAPIRestaurantSystem.Models.TakeoutOrder", "InTakeout")
                        .WithMany("OrderedMeals")
                        .HasForeignKey("InTakeoutTakeoutOrderId");

                    b.HasOne("PSAPIRestaurantSystem.Models.MenuEntry", "MenuEntry")
                        .WithMany("OrderedMeals")
                        .HasForeignKey("MenuEntryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PSAPIRestaurantSystem.Models.Reservation", b =>
                {
                    b.HasOne("PSAPIRestaurantSystem.Models.User", "ReservedBy")
                        .WithMany("Reservations")
                        .HasForeignKey("ReservedByUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PSAPIRestaurantSystem.Models.Review", b =>
                {
                    b.HasOne("PSAPIRestaurantSystem.Models.User", "User")
                        .WithMany("Reviews")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PSAPIRestaurantSystem.Models.TableOccupancy", b =>
                {
                    b.HasOne("PSAPIRestaurantSystem.Models.Order", "Order")
                        .WithMany("TableOccupancies")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PSAPIRestaurantSystem.Models.Reservation", "Reservation")
                        .WithMany("TableOccupancies")
                        .HasForeignKey("ReservationId");

                    b.HasOne("PSAPIRestaurantSystem.Models.Table", "Table")
                        .WithMany("TableOccupancies")
                        .HasForeignKey("TableId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PSAPIRestaurantSystem.Models.TakeoutOrder", b =>
                {
                    b.HasOne("PSAPIRestaurantSystem.Models.Waiter", "ManagedBy")
                        .WithMany("TakeoutOrders")
                        .HasForeignKey("ManagedByWaiterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PSAPIRestaurantSystem.Models.User", "OrderedBy")
                        .WithMany("TakeoutOrders")
                        .HasForeignKey("OrderedByUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PSAPIRestaurantSystem.Models.User", b =>
                {
                    b.HasOne("PSAPIRestaurantSystem.Models.Person", "Person")
                        .WithOne("User")
                        .HasForeignKey("PSAPIRestaurantSystem.Models.User", "PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PSAPIRestaurantSystem.Models.Waiter", b =>
                {
                    b.HasOne("PSAPIRestaurantSystem.Models.Employee", "Employee")
                        .WithOne("Waiter")
                        .HasForeignKey("PSAPIRestaurantSystem.Models.Waiter", "EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
