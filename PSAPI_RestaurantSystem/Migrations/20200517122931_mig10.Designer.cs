// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PSAPIRestaurantSystem;

namespace PSAPIRestaurantSystem.Migrations
{
    [DbContext(typeof(RestaurantContext))]
    [Migration("20200517122931_mig10")]
    partial class mig10
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("PSAPIRestaurantSystem.Models.Admin", b =>
                {
                    b.Property<int>("AdminId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("WorkEmail")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("AdminId");

                    b.HasIndex("EmployeeId")
                        .IsUnique();

                    b.ToTable("Admins");

                    b.HasData(
                        new
                        {
                            AdminId = 1,
                            EmployeeId = 1,
                            WorkEmail = "workmail@mymail.com"
                        });
                });

            modelBuilder.Entity("PSAPIRestaurantSystem.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("BeganWork")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("EmployeeState")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndedWork")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("RegisteredByAdminId")
                        .HasColumnType("int");

                    b.Property<int>("Salary")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("EmployeeId");

                    b.HasIndex("RegisteredByAdminId");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            EmployeeId = 1,
                            BeganWork = new DateTime(2020, 5, 17, 15, 29, 31, 165, DateTimeKind.Local).AddTicks(2520),
                            EmployeeState = 1,
                            EndedWork = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Salary = 1000,
                            UserId = 1
                        },
                        new
                        {
                            EmployeeId = 2,
                            BeganWork = new DateTime(2020, 5, 17, 15, 29, 31, 165, DateTimeKind.Local).AddTicks(3240),
                            EmployeeState = 1,
                            EndedWork = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Salary = 3000,
                            UserId = 2
                        },
                        new
                        {
                            EmployeeId = 3,
                            BeganWork = new DateTime(2020, 5, 17, 15, 29, 31, 165, DateTimeKind.Local).AddTicks(3262),
                            EmployeeState = 1,
                            EndedWork = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Salary = 2000,
                            UserId = 9
                        },
                        new
                        {
                            EmployeeId = 4,
                            BeganWork = new DateTime(2020, 5, 17, 15, 29, 31, 165, DateTimeKind.Local).AddTicks(3265),
                            EmployeeState = 1,
                            EndedWork = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Salary = 1500,
                            UserId = 10
                        });
                });

            modelBuilder.Entity("PSAPIRestaurantSystem.Models.Menu", b =>
                {
                    b.Property<int>("MenuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("Changed")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("MenuId");

                    b.ToTable("Menus");

                    b.HasData(
                        new
                        {
                            MenuId = 1,
                            Changed = new DateTime(2020, 5, 17, 15, 29, 31, 161, DateTimeKind.Local).AddTicks(5671),
                            Title = "Sriubos"
                        },
                        new
                        {
                            MenuId = 2,
                            Changed = new DateTime(2020, 5, 17, 15, 29, 31, 164, DateTimeKind.Local).AddTicks(620),
                            Title = "Užkandžiai"
                        },
                        new
                        {
                            MenuId = 3,
                            Changed = new DateTime(2020, 5, 17, 15, 29, 31, 164, DateTimeKind.Local).AddTicks(650),
                            Title = "Salotos"
                        },
                        new
                        {
                            MenuId = 4,
                            Changed = new DateTime(2020, 5, 17, 15, 29, 31, 164, DateTimeKind.Local).AddTicks(653),
                            Title = "Kiauliena"
                        },
                        new
                        {
                            MenuId = 5,
                            Changed = new DateTime(2020, 5, 17, 15, 29, 31, 164, DateTimeKind.Local).AddTicks(656),
                            Title = "Vistiena"
                        },
                        new
                        {
                            MenuId = 6,
                            Changed = new DateTime(2020, 5, 17, 15, 29, 31, 164, DateTimeKind.Local).AddTicks(659),
                            Title = "Zuvis"
                        },
                        new
                        {
                            MenuId = 7,
                            Changed = new DateTime(2020, 5, 17, 15, 29, 31, 164, DateTimeKind.Local).AddTicks(659),
                            Title = "Miltiniai patiekalai"
                        },
                        new
                        {
                            MenuId = 8,
                            Changed = new DateTime(2020, 5, 17, 15, 29, 31, 164, DateTimeKind.Local).AddTicks(662),
                            Title = "Gaivieji gėrimai"
                        },
                        new
                        {
                            MenuId = 9,
                            Changed = new DateTime(2020, 5, 17, 15, 29, 31, 164, DateTimeKind.Local).AddTicks(664),
                            Title = "Alus"
                        },
                        new
                        {
                            MenuId = 10,
                            Changed = new DateTime(2020, 5, 17, 15, 29, 31, 164, DateTimeKind.Local).AddTicks(667),
                            Title = "Šampanas"
                        },
                        new
                        {
                            MenuId = 11,
                            Changed = new DateTime(2020, 5, 17, 15, 29, 31, 164, DateTimeKind.Local).AddTicks(670),
                            Title = "Konjakas"
                        },
                        new
                        {
                            MenuId = 12,
                            Changed = new DateTime(2020, 5, 17, 15, 29, 31, 164, DateTimeKind.Local).AddTicks(670),
                            Title = "Degtinė"
                        },
                        new
                        {
                            MenuId = 13,
                            Changed = new DateTime(2020, 5, 17, 15, 29, 31, 164, DateTimeKind.Local).AddTicks(673),
                            Title = "Brendis"
                        },
                        new
                        {
                            MenuId = 14,
                            Changed = new DateTime(2020, 5, 17, 15, 29, 31, 164, DateTimeKind.Local).AddTicks(675),
                            Title = "Vynas"
                        },
                        new
                        {
                            MenuId = 15,
                            Changed = new DateTime(2020, 5, 17, 15, 29, 31, 164, DateTimeKind.Local).AddTicks(678),
                            Title = "Sidras"
                        },
                        new
                        {
                            MenuId = 16,
                            Changed = new DateTime(2020, 5, 17, 15, 29, 31, 164, DateTimeKind.Local).AddTicks(678),
                            Title = "Burbonas"
                        },
                        new
                        {
                            MenuId = 17,
                            Changed = new DateTime(2020, 5, 17, 15, 29, 31, 164, DateTimeKind.Local).AddTicks(681),
                            Title = "Džinas"
                        },
                        new
                        {
                            MenuId = 18,
                            Changed = new DateTime(2020, 5, 17, 15, 29, 31, 164, DateTimeKind.Local).AddTicks(684),
                            Title = "Viskis"
                        });
                });

            modelBuilder.Entity("PSAPIRestaurantSystem.Models.MenuEntry", b =>
                {
                    b.Property<int>("MenuEntryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("Changed")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("MenuEntryName")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("MenuId")
                        .HasColumnType("int");

                    b.Property<double>("Price")
                        .HasColumnType("double");

                    b.HasKey("MenuEntryId");

                    b.HasIndex("MenuId");

                    b.ToTable("MenuEntries");

                    b.HasData(
                        new
                        {
                            MenuEntryId = 1,
                            Changed = new DateTime(2020, 5, 17, 15, 29, 31, 164, DateTimeKind.Local).AddTicks(2980),
                            MenuEntryName = "Dienos sriuba",
                            MenuId = 1,
                            Price = 1.2
                        },
                        new
                        {
                            MenuEntryId = 2,
                            Changed = new DateTime(2020, 5, 17, 15, 29, 31, 164, DateTimeKind.Local).AddTicks(3415),
                            MenuEntryName = "Čili",
                            MenuId = 1,
                            Price = 3.0
                        },
                        new
                        {
                            MenuEntryId = 3,
                            Changed = new DateTime(2020, 5, 17, 15, 29, 31, 164, DateTimeKind.Local).AddTicks(3435),
                            MenuEntryName = "Cibulynė",
                            MenuId = 1,
                            Price = 2.0
                        },
                        new
                        {
                            MenuEntryId = 4,
                            Changed = new DateTime(2020, 5, 17, 15, 29, 31, 164, DateTimeKind.Local).AddTicks(3438),
                            MenuEntryName = "Šaltibarščiai",
                            MenuId = 1,
                            Price = 2.5
                        },
                        new
                        {
                            MenuEntryId = 5,
                            Changed = new DateTime(2020, 5, 17, 15, 29, 31, 164, DateTimeKind.Local).AddTicks(3440),
                            MenuEntryName = "Šviežių daržovių salotos",
                            MenuId = 3,
                            Price = 3.0
                        },
                        new
                        {
                            MenuEntryId = 6,
                            Changed = new DateTime(2020, 5, 17, 15, 29, 31, 164, DateTimeKind.Local).AddTicks(3443),
                            MenuEntryName = "Sveikuolių salotos ",
                            MenuId = 3,
                            Price = 3.5
                        },
                        new
                        {
                            MenuEntryId = 7,
                            Changed = new DateTime(2020, 5, 17, 15, 29, 31, 164, DateTimeKind.Local).AddTicks(3446),
                            MenuEntryName = "Vištienos salotos",
                            MenuId = 3,
                            Price = 3.5
                        },
                        new
                        {
                            MenuEntryId = 8,
                            Changed = new DateTime(2020, 5, 17, 15, 29, 31, 164, DateTimeKind.Local).AddTicks(3449),
                            MenuEntryName = "Graikiškos salotos ",
                            MenuId = 3,
                            Price = 4.5
                        },
                        new
                        {
                            MenuEntryId = 9,
                            Changed = new DateTime(2020, 5, 17, 15, 29, 31, 164, DateTimeKind.Local).AddTicks(3449),
                            MenuEntryName = "Burokėlių salotos su fetos sūriu ",
                            MenuId = 3,
                            Price = 4.5
                        });
                });

            modelBuilder.Entity("PSAPIRestaurantSystem.Models.Order", b =>
                {
                    b.Property<int>("OrderNum")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<int?>("ManagedByWaiterId")
                        .HasColumnType("int");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime(6)");

                    b.Property<double>("Price")
                        .HasColumnType("double");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.HasKey("OrderNum");

                    b.HasIndex("ManagedByWaiterId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            OrderNum = 1,
                            Duration = 0,
                            OrderDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 0.0,
                            State = 1
                        },
                        new
                        {
                            OrderNum = 2,
                            Duration = 0,
                            OrderDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 0.0,
                            State = 1
                        },
                        new
                        {
                            OrderNum = 3,
                            Duration = 0,
                            OrderDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 0.0,
                            State = 1
                        },
                        new
                        {
                            OrderNum = 4,
                            Duration = 0,
                            OrderDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 0.0,
                            State = 1
                        },
                        new
                        {
                            OrderNum = 5,
                            Duration = 0,
                            OrderDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 0.0,
                            State = 1
                        },
                        new
                        {
                            OrderNum = 6,
                            Duration = 0,
                            OrderDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 0.0,
                            State = 1
                        },
                        new
                        {
                            OrderNum = 7,
                            Duration = 0,
                            OrderDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 0.0,
                            State = 1
                        },
                        new
                        {
                            OrderNum = 8,
                            Duration = 0,
                            OrderDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 0.0,
                            State = 1
                        },
                        new
                        {
                            OrderNum = 9,
                            Duration = 0,
                            OrderDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 0.0,
                            State = 1
                        },
                        new
                        {
                            OrderNum = 10,
                            Duration = 0,
                            OrderDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 0.0,
                            State = 1
                        },
                        new
                        {
                            OrderNum = 11,
                            Duration = 0,
                            OrderDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 0.0,
                            State = 1
                        },
                        new
                        {
                            OrderNum = 12,
                            Duration = 0,
                            OrderDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 0.0,
                            State = 1
                        },
                        new
                        {
                            OrderNum = 13,
                            Duration = 0,
                            OrderDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 0.0,
                            State = 1
                        },
                        new
                        {
                            OrderNum = 14,
                            Duration = 0,
                            OrderDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 0.0,
                            State = 1
                        },
                        new
                        {
                            OrderNum = 15,
                            Duration = 0,
                            OrderDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 0.0,
                            State = 1
                        },
                        new
                        {
                            OrderNum = 16,
                            Duration = 0,
                            OrderDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 0.0,
                            State = 1
                        },
                        new
                        {
                            OrderNum = 17,
                            Duration = 0,
                            OrderDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 0.0,
                            State = 1
                        },
                        new
                        {
                            OrderNum = 18,
                            Duration = 0,
                            OrderDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 0.0,
                            State = 1
                        },
                        new
                        {
                            OrderNum = 19,
                            Duration = 0,
                            OrderDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 0.0,
                            State = 1
                        },
                        new
                        {
                            OrderNum = 20,
                            Duration = 0,
                            OrderDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 0.0,
                            State = 1
                        },
                        new
                        {
                            OrderNum = 21,
                            Duration = 0,
                            OrderDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 0.0,
                            State = 1
                        },
                        new
                        {
                            OrderNum = 22,
                            Duration = 0,
                            OrderDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 0.0,
                            State = 1
                        },
                        new
                        {
                            OrderNum = 23,
                            Duration = 0,
                            OrderDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 0.0,
                            State = 1
                        },
                        new
                        {
                            OrderNum = 24,
                            Duration = 0,
                            OrderDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 0.0,
                            State = 1
                        },
                        new
                        {
                            OrderNum = 25,
                            Duration = 0,
                            OrderDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 0.0,
                            State = 1
                        },
                        new
                        {
                            OrderNum = 26,
                            Duration = 0,
                            OrderDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 0.0,
                            State = 1
                        },
                        new
                        {
                            OrderNum = 27,
                            Duration = 0,
                            OrderDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 0.0,
                            State = 1
                        },
                        new
                        {
                            OrderNum = 28,
                            Duration = 0,
                            OrderDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 0.0,
                            State = 1
                        },
                        new
                        {
                            OrderNum = 29,
                            Duration = 0,
                            OrderDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 0.0,
                            State = 1
                        },
                        new
                        {
                            OrderNum = 30,
                            Duration = 0,
                            OrderDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 0.0,
                            State = 1
                        },
                        new
                        {
                            OrderNum = 31,
                            Duration = 0,
                            OrderDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 0.0,
                            State = 1
                        },
                        new
                        {
                            OrderNum = 32,
                            Duration = 0,
                            OrderDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 0.0,
                            State = 1
                        },
                        new
                        {
                            OrderNum = 33,
                            Duration = 45,
                            ManagedByWaiterId = 1,
                            OrderDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 10.0,
                            State = 5
                        },
                        new
                        {
                            OrderNum = 34,
                            Duration = 0,
                            ManagedByWaiterId = 1,
                            OrderDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 0.0,
                            State = 4
                        },
                        new
                        {
                            OrderNum = 35,
                            Duration = 51,
                            ManagedByWaiterId = 2,
                            OrderDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 11.0,
                            State = 5
                        },
                        new
                        {
                            OrderNum = 36,
                            Duration = 0,
                            ManagedByWaiterId = 3,
                            OrderDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 0.0,
                            State = 4
                        },
                        new
                        {
                            OrderNum = 37,
                            Duration = 30,
                            ManagedByWaiterId = 2,
                            OrderDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 20.0,
                            State = 5
                        },
                        new
                        {
                            OrderNum = 38,
                            Duration = 37,
                            ManagedByWaiterId = 1,
                            OrderDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 40.0,
                            State = 5
                        },
                        new
                        {
                            OrderNum = 39,
                            Duration = 0,
                            ManagedByWaiterId = 3,
                            OrderDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 0.0,
                            State = 4
                        },
                        new
                        {
                            OrderNum = 40,
                            Duration = 153,
                            ManagedByWaiterId = 2,
                            OrderDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 65.0,
                            State = 5
                        });
                });

            modelBuilder.Entity("PSAPIRestaurantSystem.Models.OrderedMeal", b =>
                {
                    b.Property<int>("OrderedMealId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("InOrderOrderId")
                        .HasColumnType("int");

                    b.Property<int?>("InOrderOrderNum")
                        .HasColumnType("int");

                    b.Property<int>("InTakeoutTakeoutOrderId")
                        .HasColumnType("int");

                    b.Property<int?>("InTakeoutTakeoutOrderNum")
                        .HasColumnType("int");

                    b.Property<int>("MenuEntryId")
                        .HasColumnType("int");

                    b.Property<double>("Price")
                        .HasColumnType("double");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("OrderedMealId");

                    b.HasIndex("InOrderOrderNum");

                    b.HasIndex("InTakeoutTakeoutOrderNum");

                    b.HasIndex("MenuEntryId");

                    b.ToTable("OrderedMeals");
                });

            modelBuilder.Entity("PSAPIRestaurantSystem.Models.Person", b =>
                {
                    b.Property<int>("PersonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("PersonId");

                    b.ToTable("People");

                    b.HasData(
                        new
                        {
                            PersonId = 1,
                            Name = "Jonas",
                            Surname = "Petraitis"
                        },
                        new
                        {
                            PersonId = 2,
                            Name = "Mantas",
                            Surname = "Jablonoskis"
                        },
                        new
                        {
                            PersonId = 3,
                            Name = "Tomas",
                            Surname = "Tomaitis"
                        },
                        new
                        {
                            PersonId = 4,
                            Name = "Petras",
                            Surname = "Petraitis"
                        },
                        new
                        {
                            PersonId = 5,
                            Name = "Domas",
                            Surname = "Domaitis"
                        },
                        new
                        {
                            PersonId = 6,
                            Name = "Stasys",
                            Surname = "Stasaitis"
                        },
                        new
                        {
                            PersonId = 7,
                            Name = "Martyna",
                            Surname = "Martynaitė"
                        },
                        new
                        {
                            PersonId = 8,
                            Name = "Diana",
                            Surname = "Jablonoskienė"
                        },
                        new
                        {
                            PersonId = 9,
                            Name = "Tomas",
                            Surname = "Petraitis"
                        },
                        new
                        {
                            PersonId = 10,
                            Name = "Petras",
                            Surname = "Stasaitis"
                        });
                });

            modelBuilder.Entity("PSAPIRestaurantSystem.Models.Reservation", b =>
                {
                    b.Property<int>("ReservationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("PeopleCount")
                        .HasColumnType("int");

                    b.Property<int>("ReservedByUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReservedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("ReservedForDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.HasKey("ReservationId");

                    b.HasIndex("ReservedByUserId");

                    b.ToTable("Reservations");

                    b.HasData(
                        new
                        {
                            ReservationId = 1,
                            PeopleCount = 2,
                            ReservedByUserId = 1,
                            ReservedDate = new DateTime(2020, 5, 17, 15, 29, 31, 166, DateTimeKind.Local).AddTicks(362),
                            ReservedForDate = new DateTime(2020, 5, 18, 15, 29, 31, 166, DateTimeKind.Local).AddTicks(919),
                            State = 2
                        },
                        new
                        {
                            ReservationId = 2,
                            PeopleCount = 1,
                            ReservedByUserId = 1,
                            ReservedDate = new DateTime(2020, 5, 17, 15, 29, 31, 166, DateTimeKind.Local).AddTicks(2535),
                            ReservedForDate = new DateTime(2020, 5, 19, 15, 29, 31, 166, DateTimeKind.Local).AddTicks(2562),
                            State = 3
                        },
                        new
                        {
                            ReservationId = 3,
                            Comment = "Atsivesiu suni",
                            PeopleCount = 3,
                            ReservedByUserId = 1,
                            ReservedDate = new DateTime(2020, 5, 17, 15, 29, 31, 166, DateTimeKind.Local).AddTicks(2598),
                            ReservedForDate = new DateTime(2020, 5, 20, 3, 29, 31, 166, DateTimeKind.Local).AddTicks(2601),
                            State = 1
                        },
                        new
                        {
                            ReservationId = 4,
                            PeopleCount = 4,
                            ReservedByUserId = 1,
                            ReservedDate = new DateTime(2020, 5, 17, 15, 29, 31, 166, DateTimeKind.Local).AddTicks(3183),
                            ReservedForDate = new DateTime(2020, 5, 20, 23, 29, 31, 166, DateTimeKind.Local).AddTicks(3199),
                            State = 3
                        },
                        new
                        {
                            ReservationId = 5,
                            PeopleCount = 2,
                            ReservedByUserId = 1,
                            ReservedDate = new DateTime(2020, 5, 17, 15, 29, 31, 166, DateTimeKind.Local).AddTicks(3205),
                            ReservedForDate = new DateTime(2020, 5, 21, 19, 29, 31, 166, DateTimeKind.Local).AddTicks(3208),
                            State = 1
                        },
                        new
                        {
                            ReservationId = 6,
                            PeopleCount = 2,
                            ReservedByUserId = 1,
                            ReservedDate = new DateTime(2020, 5, 17, 15, 29, 31, 166, DateTimeKind.Local).AddTicks(3216),
                            ReservedForDate = new DateTime(2020, 5, 22, 15, 29, 31, 166, DateTimeKind.Local).AddTicks(3219),
                            State = 2
                        },
                        new
                        {
                            ReservationId = 7,
                            PeopleCount = 2,
                            ReservedByUserId = 1,
                            ReservedDate = new DateTime(2020, 5, 17, 15, 29, 31, 166, DateTimeKind.Local).AddTicks(3227),
                            ReservedForDate = new DateTime(2020, 5, 24, 7, 29, 31, 166, DateTimeKind.Local).AddTicks(3230),
                            State = 3
                        },
                        new
                        {
                            ReservationId = 8,
                            PeopleCount = 2,
                            ReservedByUserId = 1,
                            ReservedDate = new DateTime(2020, 5, 17, 15, 29, 31, 166, DateTimeKind.Local).AddTicks(3236),
                            ReservedForDate = new DateTime(2020, 5, 25, 3, 29, 31, 166, DateTimeKind.Local).AddTicks(3241),
                            State = 1
                        },
                        new
                        {
                            ReservationId = 9,
                            PeopleCount = 2,
                            ReservedByUserId = 5,
                            ReservedDate = new DateTime(2020, 5, 17, 15, 29, 31, 166, DateTimeKind.Local).AddTicks(3247),
                            ReservedForDate = new DateTime(2020, 5, 18, 15, 29, 31, 166, DateTimeKind.Local).AddTicks(3252),
                            State = 2
                        },
                        new
                        {
                            ReservationId = 10,
                            PeopleCount = 1,
                            ReservedByUserId = 5,
                            ReservedDate = new DateTime(2020, 5, 17, 15, 29, 31, 166, DateTimeKind.Local).AddTicks(3255),
                            ReservedForDate = new DateTime(2020, 5, 19, 15, 29, 31, 166, DateTimeKind.Local).AddTicks(3260),
                            State = 3
                        },
                        new
                        {
                            ReservationId = 11,
                            Comment = "Atsivesiu kate",
                            PeopleCount = 3,
                            ReservedByUserId = 5,
                            ReservedDate = new DateTime(2020, 5, 17, 15, 29, 31, 166, DateTimeKind.Local).AddTicks(3266),
                            ReservedForDate = new DateTime(2020, 5, 20, 3, 29, 31, 166, DateTimeKind.Local).AddTicks(3272),
                            State = 1
                        },
                        new
                        {
                            ReservationId = 12,
                            PeopleCount = 4,
                            ReservedByUserId = 5,
                            ReservedDate = new DateTime(2020, 5, 17, 15, 29, 31, 166, DateTimeKind.Local).AddTicks(3357),
                            ReservedForDate = new DateTime(2020, 5, 20, 23, 29, 31, 166, DateTimeKind.Local).AddTicks(3363),
                            State = 3
                        },
                        new
                        {
                            ReservationId = 13,
                            PeopleCount = 2,
                            ReservedByUserId = 5,
                            ReservedDate = new DateTime(2020, 5, 17, 15, 29, 31, 166, DateTimeKind.Local).AddTicks(3368),
                            ReservedForDate = new DateTime(2020, 5, 21, 19, 29, 31, 166, DateTimeKind.Local).AddTicks(3374),
                            State = 1
                        },
                        new
                        {
                            ReservationId = 14,
                            PeopleCount = 2,
                            ReservedByUserId = 5,
                            ReservedDate = new DateTime(2020, 5, 17, 15, 29, 31, 166, DateTimeKind.Local).AddTicks(3380),
                            ReservedForDate = new DateTime(2020, 5, 22, 15, 29, 31, 166, DateTimeKind.Local).AddTicks(3385),
                            State = 2
                        },
                        new
                        {
                            ReservationId = 15,
                            PeopleCount = 2,
                            ReservedByUserId = 5,
                            ReservedDate = new DateTime(2020, 5, 17, 15, 29, 31, 166, DateTimeKind.Local).AddTicks(3391),
                            ReservedForDate = new DateTime(2020, 5, 24, 7, 29, 31, 166, DateTimeKind.Local).AddTicks(3393),
                            State = 3
                        },
                        new
                        {
                            ReservationId = 16,
                            PeopleCount = 2,
                            ReservedByUserId = 5,
                            ReservedDate = new DateTime(2020, 5, 17, 15, 29, 31, 166, DateTimeKind.Local).AddTicks(3399),
                            ReservedForDate = new DateTime(2020, 5, 25, 3, 29, 31, 166, DateTimeKind.Local).AddTicks(3405),
                            State = 1
                        },
                        new
                        {
                            ReservationId = 17,
                            PeopleCount = 2,
                            ReservedByUserId = 6,
                            ReservedDate = new DateTime(2020, 5, 17, 15, 29, 31, 166, DateTimeKind.Local).AddTicks(3410),
                            ReservedForDate = new DateTime(2020, 5, 18, 15, 29, 31, 166, DateTimeKind.Local).AddTicks(3416),
                            State = 2
                        },
                        new
                        {
                            ReservationId = 18,
                            PeopleCount = 1,
                            ReservedByUserId = 6,
                            ReservedDate = new DateTime(2020, 5, 17, 15, 29, 31, 166, DateTimeKind.Local).AddTicks(3421),
                            ReservedForDate = new DateTime(2020, 5, 19, 15, 29, 31, 166, DateTimeKind.Local).AddTicks(3427),
                            State = 3
                        },
                        new
                        {
                            ReservationId = 19,
                            Comment = "Atsivesiu suni",
                            PeopleCount = 3,
                            ReservedByUserId = 6,
                            ReservedDate = new DateTime(2020, 5, 17, 15, 29, 31, 166, DateTimeKind.Local).AddTicks(3432),
                            ReservedForDate = new DateTime(2020, 5, 20, 3, 29, 31, 166, DateTimeKind.Local).AddTicks(3435),
                            State = 1
                        },
                        new
                        {
                            ReservationId = 20,
                            PeopleCount = 4,
                            ReservedByUserId = 6,
                            ReservedDate = new DateTime(2020, 5, 17, 15, 29, 31, 166, DateTimeKind.Local).AddTicks(3441),
                            ReservedForDate = new DateTime(2020, 5, 20, 23, 29, 31, 166, DateTimeKind.Local).AddTicks(3446),
                            State = 3
                        },
                        new
                        {
                            ReservationId = 21,
                            PeopleCount = 2,
                            ReservedByUserId = 6,
                            ReservedDate = new DateTime(2020, 5, 17, 15, 29, 31, 166, DateTimeKind.Local).AddTicks(3452),
                            ReservedForDate = new DateTime(2020, 5, 21, 19, 29, 31, 166, DateTimeKind.Local).AddTicks(3457),
                            State = 1
                        },
                        new
                        {
                            ReservationId = 22,
                            PeopleCount = 2,
                            ReservedByUserId = 6,
                            ReservedDate = new DateTime(2020, 5, 17, 15, 29, 31, 166, DateTimeKind.Local).AddTicks(3463),
                            ReservedForDate = new DateTime(2020, 5, 22, 15, 29, 31, 166, DateTimeKind.Local).AddTicks(3465),
                            State = 2
                        },
                        new
                        {
                            ReservationId = 23,
                            PeopleCount = 2,
                            ReservedByUserId = 6,
                            ReservedDate = new DateTime(2020, 5, 17, 15, 29, 31, 166, DateTimeKind.Local).AddTicks(3474),
                            ReservedForDate = new DateTime(2020, 5, 24, 7, 29, 31, 166, DateTimeKind.Local).AddTicks(3479),
                            State = 3
                        },
                        new
                        {
                            ReservationId = 24,
                            PeopleCount = 2,
                            ReservedByUserId = 6,
                            ReservedDate = new DateTime(2020, 5, 17, 15, 29, 31, 166, DateTimeKind.Local).AddTicks(3485),
                            ReservedForDate = new DateTime(2020, 5, 25, 3, 29, 31, 166, DateTimeKind.Local).AddTicks(3488),
                            State = 1
                        },
                        new
                        {
                            ReservationId = 25,
                            PeopleCount = 2,
                            ReservedByUserId = 7,
                            ReservedDate = new DateTime(2020, 5, 17, 15, 29, 31, 166, DateTimeKind.Local).AddTicks(3493),
                            ReservedForDate = new DateTime(2020, 5, 18, 15, 29, 31, 166, DateTimeKind.Local).AddTicks(3499),
                            State = 2
                        },
                        new
                        {
                            ReservationId = 26,
                            PeopleCount = 1,
                            ReservedByUserId = 7,
                            ReservedDate = new DateTime(2020, 5, 17, 15, 29, 31, 166, DateTimeKind.Local).AddTicks(3504),
                            ReservedForDate = new DateTime(2020, 5, 19, 15, 29, 31, 166, DateTimeKind.Local).AddTicks(3510),
                            State = 3
                        },
                        new
                        {
                            ReservationId = 27,
                            Comment = "Atsinesiu vezliuka",
                            PeopleCount = 3,
                            ReservedByUserId = 7,
                            ReservedDate = new DateTime(2020, 5, 17, 15, 29, 31, 166, DateTimeKind.Local).AddTicks(3513),
                            ReservedForDate = new DateTime(2020, 5, 20, 3, 29, 31, 166, DateTimeKind.Local).AddTicks(3518),
                            State = 1
                        },
                        new
                        {
                            ReservationId = 28,
                            PeopleCount = 4,
                            ReservedByUserId = 7,
                            ReservedDate = new DateTime(2020, 5, 17, 15, 29, 31, 166, DateTimeKind.Local).AddTicks(3524),
                            ReservedForDate = new DateTime(2020, 5, 20, 23, 29, 31, 166, DateTimeKind.Local).AddTicks(3529),
                            State = 3
                        },
                        new
                        {
                            ReservationId = 29,
                            PeopleCount = 2,
                            ReservedByUserId = 7,
                            ReservedDate = new DateTime(2020, 5, 17, 15, 29, 31, 166, DateTimeKind.Local).AddTicks(3535),
                            ReservedForDate = new DateTime(2020, 5, 21, 19, 29, 31, 166, DateTimeKind.Local).AddTicks(3540),
                            State = 1
                        },
                        new
                        {
                            ReservationId = 30,
                            PeopleCount = 2,
                            ReservedByUserId = 7,
                            ReservedDate = new DateTime(2020, 5, 17, 15, 29, 31, 166, DateTimeKind.Local).AddTicks(3546),
                            ReservedForDate = new DateTime(2020, 5, 22, 15, 29, 31, 166, DateTimeKind.Local).AddTicks(3549),
                            State = 2
                        },
                        new
                        {
                            ReservationId = 31,
                            PeopleCount = 2,
                            ReservedByUserId = 7,
                            ReservedDate = new DateTime(2020, 5, 17, 15, 29, 31, 166, DateTimeKind.Local).AddTicks(3554),
                            ReservedForDate = new DateTime(2020, 5, 24, 7, 29, 31, 166, DateTimeKind.Local).AddTicks(3560),
                            State = 3
                        },
                        new
                        {
                            ReservationId = 32,
                            PeopleCount = 2,
                            ReservedByUserId = 7,
                            ReservedDate = new DateTime(2020, 5, 17, 15, 29, 31, 166, DateTimeKind.Local).AddTicks(3565),
                            ReservedForDate = new DateTime(2020, 5, 25, 3, 29, 31, 166, DateTimeKind.Local).AddTicks(3571),
                            State = 1
                        },
                        new
                        {
                            ReservationId = 33,
                            PeopleCount = 2,
                            ReservedByUserId = 5,
                            ReservedDate = new DateTime(2020, 5, 15, 15, 29, 31, 166, DateTimeKind.Local).AddTicks(3576),
                            ReservedForDate = new DateTime(2020, 5, 16, 15, 29, 31, 166, DateTimeKind.Local).AddTicks(3582),
                            State = 2
                        },
                        new
                        {
                            ReservationId = 34,
                            PeopleCount = 1,
                            ReservedByUserId = 5,
                            ReservedDate = new DateTime(2020, 5, 15, 3, 29, 31, 166, DateTimeKind.Local).AddTicks(3587),
                            ReservedForDate = new DateTime(2020, 5, 15, 15, 29, 31, 166, DateTimeKind.Local).AddTicks(3590),
                            State = 3
                        },
                        new
                        {
                            ReservationId = 35,
                            Comment = "Atsivesiu suni",
                            PeopleCount = 3,
                            ReservedByUserId = 5,
                            ReservedDate = new DateTime(2020, 5, 14, 7, 29, 31, 166, DateTimeKind.Local).AddTicks(3596),
                            ReservedForDate = new DateTime(2020, 5, 15, 3, 29, 31, 166, DateTimeKind.Local).AddTicks(3601),
                            State = 1
                        },
                        new
                        {
                            ReservationId = 36,
                            PeopleCount = 4,
                            ReservedByUserId = 5,
                            ReservedDate = new DateTime(2020, 5, 13, 11, 29, 31, 166, DateTimeKind.Local).AddTicks(3607),
                            ReservedForDate = new DateTime(2020, 5, 14, 7, 29, 31, 166, DateTimeKind.Local).AddTicks(3612),
                            State = 3
                        },
                        new
                        {
                            ReservationId = 37,
                            PeopleCount = 2,
                            ReservedByUserId = 5,
                            ReservedDate = new DateTime(2020, 5, 12, 15, 29, 31, 166, DateTimeKind.Local).AddTicks(3618),
                            ReservedForDate = new DateTime(2020, 5, 13, 11, 29, 31, 166, DateTimeKind.Local).AddTicks(3623),
                            State = 1
                        },
                        new
                        {
                            ReservationId = 38,
                            PeopleCount = 2,
                            ReservedByUserId = 5,
                            ReservedDate = new DateTime(2020, 5, 10, 23, 29, 31, 166, DateTimeKind.Local).AddTicks(3626),
                            ReservedForDate = new DateTime(2020, 5, 12, 15, 29, 31, 166, DateTimeKind.Local).AddTicks(3632),
                            State = 2
                        },
                        new
                        {
                            ReservationId = 39,
                            PeopleCount = 2,
                            ReservedByUserId = 5,
                            ReservedDate = new DateTime(2020, 5, 10, 3, 29, 31, 166, DateTimeKind.Local).AddTicks(3637),
                            ReservedForDate = new DateTime(2020, 5, 10, 23, 29, 31, 166, DateTimeKind.Local).AddTicks(3643),
                            State = 3
                        },
                        new
                        {
                            ReservationId = 40,
                            PeopleCount = 2,
                            ReservedByUserId = 5,
                            ReservedDate = new DateTime(2020, 5, 9, 7, 29, 31, 166, DateTimeKind.Local).AddTicks(3648),
                            ReservedForDate = new DateTime(2020, 5, 10, 3, 29, 31, 166, DateTimeKind.Local).AddTicks(3651),
                            State = 1
                        });
                });

            modelBuilder.Entity("PSAPIRestaurantSystem.Models.Review", b =>
                {
                    b.Property<int>("ReviewId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReviewDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("ReviewText")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("ReviewId");

                    b.HasIndex("UserId");

                    b.ToTable("Reviews");

                    b.HasData(
                        new
                        {
                            ReviewId = 1,
                            Rating = 2,
                            ReviewDate = new DateTime(2020, 5, 17, 15, 29, 31, 164, DateTimeKind.Local).AddTicks(9879),
                            ReviewText = "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam consectetur tincidunt justo ac sollicitudin. Quisque erat mauris, malesuada in sapien quis, accumsan condimentum dui. Curabitur porttitor nibh in odio ultrices, eget efficitur arcu sollicitudin. Quisque at eros lectus. Vestibulum et bibendum arcu. Nunc a nulla consequat leo congue egestas eget in enim. Aliquam dictum ultricies arcu, finibus accumsan nisi imperdiet sed. Curabitur ac nibh tellus. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. Orci varius natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Cras porta cursus odio eget volutpat. Praesent tristique sollicitudin lacus, vel faucibus nisl vestibulum nec. Vestibulum iaculis nulla eu risus mattis, quis finibus risus bibendum.",
                            UserId = 1
                        },
                        new
                        {
                            ReviewId = 2,
                            Rating = 5,
                            ReviewDate = new DateTime(2020, 5, 17, 15, 29, 31, 165, DateTimeKind.Local).AddTicks(619),
                            ReviewText = "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam consectetur tincidunt justo ac sollicitudin. Quisque erat mauris, malesuada in sapien quis, accumsan condimentum dui. Curabitur porttitor nibh in odio ultrices, eget efficitur arcu sollicitudin. Quisque at eros lectus. Vestibulum et bibendum arcu. Nunc a nulla consequat leo congue egestas eget in enim. Aliquam dictum ultricies arcu, finibus accumsan nisi imperdiet sed. Curabitur ac nibh tellus. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. Orci varius natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Cras porta cursus odio eget volutpat. Praesent tristique sollicitudin lacus, vel faucibus nisl vestibulum nec. Vestibulum iaculis nulla eu risus mattis, quis finibus risus bibendum.",
                            UserId = 2
                        },
                        new
                        {
                            ReviewId = 3,
                            Rating = 4,
                            ReviewDate = new DateTime(2020, 5, 17, 15, 29, 31, 165, DateTimeKind.Local).AddTicks(639),
                            ReviewText = "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam consectetur tincidunt justo ac sollicitudin. Quisque erat mauris, malesuada in sapien quis, accumsan condimentum dui. Curabitur porttitor nibh in odio ultrices, eget efficitur arcu sollicitudin. Quisque at eros lectus. Vestibulum et bibendum arcu. Nunc a nulla consequat leo congue egestas eget in enim. Aliquam dictum ultricies arcu, finibus accumsan nisi imperdiet sed. Curabitur ac nibh tellus. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. Orci varius natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Cras porta cursus odio eget volutpat. Praesent tristique sollicitudin lacus, vel faucibus nisl vestibulum nec. Vestibulum iaculis nulla eu risus mattis, quis finibus risus bibendum.",
                            UserId = 3
                        });
                });

            modelBuilder.Entity("PSAPIRestaurantSystem.Models.Table", b =>
                {
                    b.Property<int>("TableNum")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("SeatCount")
                        .HasColumnType("int");

                    b.HasKey("TableNum");

                    b.ToTable("Tables");

                    b.HasData(
                        new
                        {
                            TableNum = 1,
                            SeatCount = 4
                        },
                        new
                        {
                            TableNum = 2,
                            SeatCount = 2
                        },
                        new
                        {
                            TableNum = 3,
                            SeatCount = 4
                        },
                        new
                        {
                            TableNum = 4,
                            SeatCount = 5
                        },
                        new
                        {
                            TableNum = 5,
                            SeatCount = 12
                        },
                        new
                        {
                            TableNum = 6,
                            SeatCount = 12
                        },
                        new
                        {
                            TableNum = 7,
                            SeatCount = 4
                        },
                        new
                        {
                            TableNum = 8,
                            SeatCount = 4
                        },
                        new
                        {
                            TableNum = 9,
                            SeatCount = 2
                        },
                        new
                        {
                            TableNum = 10,
                            SeatCount = 2
                        },
                        new
                        {
                            TableNum = 11,
                            SeatCount = 6
                        },
                        new
                        {
                            TableNum = 12,
                            SeatCount = 6
                        });
                });

            modelBuilder.Entity("PSAPIRestaurantSystem.Models.TableOccupancy", b =>
                {
                    b.Property<int>("TableOccupancyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int?>("ReservationId")
                        .HasColumnType("int");

                    b.Property<int>("TableId")
                        .HasColumnType("int");

                    b.HasKey("TableOccupancyId");

                    b.HasIndex("OrderId");

                    b.HasIndex("ReservationId");

                    b.HasIndex("TableId");

                    b.ToTable("TableOccupancies");

                    b.HasData(
                        new
                        {
                            TableOccupancyId = 1,
                            OrderId = 33,
                            ReservationId = 33,
                            TableId = 2
                        },
                        new
                        {
                            TableOccupancyId = 2,
                            OrderId = 33,
                            ReservationId = 33,
                            TableId = 10
                        },
                        new
                        {
                            TableOccupancyId = 3,
                            OrderId = 33,
                            ReservationId = 33,
                            TableId = 4
                        },
                        new
                        {
                            TableOccupancyId = 4,
                            OrderId = 35,
                            ReservationId = 35,
                            TableId = 11
                        },
                        new
                        {
                            TableOccupancyId = 5,
                            OrderId = 37,
                            ReservationId = 37,
                            TableId = 12
                        },
                        new
                        {
                            TableOccupancyId = 6,
                            OrderId = 38,
                            ReservationId = 38,
                            TableId = 11
                        },
                        new
                        {
                            TableOccupancyId = 7,
                            OrderId = 40,
                            ReservationId = 40,
                            TableId = 12
                        });
                });

            modelBuilder.Entity("PSAPIRestaurantSystem.Models.TakeoutOrder", b =>
                {
                    b.Property<int>("TakeoutOrderNum")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("ConfirmationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("ManagedByWaiterId")
                        .HasColumnType("int");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("OrderedByUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("OrderedForDate")
                        .HasColumnType("datetime(6)");

                    b.Property<double>("Price")
                        .HasColumnType("double");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.HasKey("TakeoutOrderNum");

                    b.HasIndex("ManagedByWaiterId");

                    b.HasIndex("OrderedByUserId");

                    b.ToTable("TakeoutOrders");

                    b.HasData(
                        new
                        {
                            TakeoutOrderNum = 1,
                            ConfirmationDate = new DateTime(2020, 5, 17, 15, 34, 31, 167, DateTimeKind.Local).AddTicks(2919),
                            ManagedByWaiterId = 1,
                            OrderDate = new DateTime(2020, 5, 17, 15, 29, 31, 167, DateTimeKind.Local).AddTicks(1692),
                            OrderedByUserId = 5,
                            OrderedForDate = new DateTime(2020, 5, 17, 17, 29, 31, 167, DateTimeKind.Local).AddTicks(2276),
                            Price = 100.0,
                            State = 3
                        });
                });

            modelBuilder.Entity("PSAPIRestaurantSystem.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Confirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("LastLoginDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("LoyalityPoints")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("PersonId")
                        .HasColumnType("int");

                    b.Property<DateTime>("RegistrationDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("UserId");

                    b.HasIndex("PersonId")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Confirmed = true,
                            Email = "jonas@emai.com",
                            LastLoginDate = new DateTime(2020, 5, 17, 15, 29, 31, 164, DateTimeKind.Local).AddTicks(6948),
                            LoyalityPoints = 1,
                            Password = "slaptozodis",
                            PersonId = 1,
                            RegistrationDate = new DateTime(2020, 5, 17, 15, 29, 31, 164, DateTimeKind.Local).AddTicks(6568)
                        },
                        new
                        {
                            UserId = 2,
                            Confirmed = true,
                            Email = "mantas@email.com",
                            LastLoginDate = new DateTime(2020, 5, 17, 15, 29, 31, 164, DateTimeKind.Local).AddTicks(8308),
                            LoyalityPoints = 10,
                            Password = "slaptozodis",
                            PersonId = 2,
                            RegistrationDate = new DateTime(2020, 5, 17, 15, 29, 31, 164, DateTimeKind.Local).AddTicks(8286)
                        },
                        new
                        {
                            UserId = 3,
                            Confirmed = true,
                            Email = "tomas@email.com",
                            LastLoginDate = new DateTime(2020, 5, 17, 15, 29, 31, 164, DateTimeKind.Local).AddTicks(8336),
                            LoyalityPoints = 20,
                            Password = "slaptozodis",
                            PersonId = 3,
                            RegistrationDate = new DateTime(2020, 5, 17, 15, 29, 31, 164, DateTimeKind.Local).AddTicks(8333)
                        },
                        new
                        {
                            UserId = 4,
                            Confirmed = true,
                            Email = "petraitis@gmail.com",
                            LastLoginDate = new DateTime(2020, 5, 17, 15, 29, 31, 164, DateTimeKind.Local).AddTicks(8339),
                            LoyalityPoints = 5,
                            Password = "slaptozodis",
                            PersonId = 4,
                            RegistrationDate = new DateTime(2020, 5, 17, 15, 29, 31, 164, DateTimeKind.Local).AddTicks(8339)
                        },
                        new
                        {
                            UserId = 5,
                            Confirmed = true,
                            Email = "domas@email.com",
                            LastLoginDate = new DateTime(2020, 5, 17, 15, 29, 31, 164, DateTimeKind.Local).AddTicks(8361),
                            LoyalityPoints = 50,
                            Password = "slaptozodis",
                            PersonId = 5,
                            RegistrationDate = new DateTime(2020, 5, 15, 15, 29, 31, 164, DateTimeKind.Local).AddTicks(8342)
                        },
                        new
                        {
                            UserId = 6,
                            Confirmed = true,
                            Email = "stasys@email.com",
                            LastLoginDate = new DateTime(2020, 5, 17, 15, 29, 31, 164, DateTimeKind.Local).AddTicks(8366),
                            LoyalityPoints = 60,
                            Password = "slaptozodis",
                            PersonId = 6,
                            RegistrationDate = new DateTime(2020, 5, 14, 15, 29, 31, 164, DateTimeKind.Local).AddTicks(8364)
                        },
                        new
                        {
                            UserId = 7,
                            Confirmed = true,
                            Email = "martyna@email.com",
                            LastLoginDate = new DateTime(2020, 5, 17, 15, 29, 31, 164, DateTimeKind.Local).AddTicks(8369),
                            LoyalityPoints = 70,
                            Password = "slaptozodis",
                            PersonId = 7,
                            RegistrationDate = new DateTime(2020, 5, 13, 15, 29, 31, 164, DateTimeKind.Local).AddTicks(8366)
                        },
                        new
                        {
                            UserId = 8,
                            Confirmed = true,
                            Email = "diana@email.com",
                            LastLoginDate = new DateTime(2020, 5, 17, 15, 29, 31, 164, DateTimeKind.Local).AddTicks(8375),
                            LoyalityPoints = 80,
                            Password = "slaptozodis",
                            PersonId = 8,
                            RegistrationDate = new DateTime(2020, 5, 12, 15, 29, 31, 164, DateTimeKind.Local).AddTicks(8372)
                        },
                        new
                        {
                            UserId = 9,
                            Confirmed = true,
                            Email = "tomas@gmail.com",
                            LastLoginDate = new DateTime(2020, 5, 17, 15, 29, 31, 164, DateTimeKind.Local).AddTicks(8380),
                            LoyalityPoints = 3,
                            Password = "slaptozodis",
                            PersonId = 9,
                            RegistrationDate = new DateTime(2020, 5, 11, 15, 29, 31, 164, DateTimeKind.Local).AddTicks(8378)
                        },
                        new
                        {
                            UserId = 10,
                            Confirmed = true,
                            Email = "petras@gmail.com",
                            LastLoginDate = new DateTime(2020, 5, 17, 15, 29, 31, 164, DateTimeKind.Local).AddTicks(8383),
                            LoyalityPoints = 4,
                            Password = "slaptozodis",
                            PersonId = 10,
                            RegistrationDate = new DateTime(2020, 5, 16, 15, 29, 31, 164, DateTimeKind.Local).AddTicks(8383)
                        });
                });

            modelBuilder.Entity("PSAPIRestaurantSystem.Models.Waiter", b =>
                {
                    b.Property<int>("WaiterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<double>("Tips")
                        .HasColumnType("double");

                    b.HasKey("WaiterId");

                    b.HasIndex("EmployeeId")
                        .IsUnique();

                    b.ToTable("Waiters");

                    b.HasData(
                        new
                        {
                            WaiterId = 1,
                            EmployeeId = 2,
                            Tips = 100.0
                        },
                        new
                        {
                            WaiterId = 2,
                            EmployeeId = 3,
                            Tips = 200.0
                        },
                        new
                        {
                            WaiterId = 3,
                            EmployeeId = 4,
                            Tips = 250.0
                        });
                });

            modelBuilder.Entity("PSAPIRestaurantSystem.Models.Admin", b =>
                {
                    b.HasOne("PSAPIRestaurantSystem.Models.Employee", "Employee")
                        .WithOne("Admin")
                        .HasForeignKey("PSAPIRestaurantSystem.Models.Admin", "EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PSAPIRestaurantSystem.Models.Employee", b =>
                {
                    b.HasOne("PSAPIRestaurantSystem.Models.Admin", "RegisteredBy")
                        .WithMany("RegisteredEmployees")
                        .HasForeignKey("RegisteredByAdminId");

                    b.HasOne("PSAPIRestaurantSystem.Models.User", "User")
                        .WithOne("Employee")
                        .HasForeignKey("PSAPIRestaurantSystem.Models.Employee", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PSAPIRestaurantSystem.Models.MenuEntry", b =>
                {
                    b.HasOne("PSAPIRestaurantSystem.Models.Menu", "Menu")
                        .WithMany("MenuEntries")
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PSAPIRestaurantSystem.Models.Order", b =>
                {
                    b.HasOne("PSAPIRestaurantSystem.Models.Waiter", "ManagedBy")
                        .WithMany("Orders")
                        .HasForeignKey("ManagedByWaiterId");
                });

            modelBuilder.Entity("PSAPIRestaurantSystem.Models.OrderedMeal", b =>
                {
                    b.HasOne("PSAPIRestaurantSystem.Models.Order", "InOrder")
                        .WithMany("OrderedMeals")
                        .HasForeignKey("InOrderOrderNum");

                    b.HasOne("PSAPIRestaurantSystem.Models.TakeoutOrder", "InTakeout")
                        .WithMany("OrderedMeals")
                        .HasForeignKey("InTakeoutTakeoutOrderNum");

                    b.HasOne("PSAPIRestaurantSystem.Models.MenuEntry", "MenuEntry")
                        .WithMany("OrderedMeals")
                        .HasForeignKey("MenuEntryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PSAPIRestaurantSystem.Models.Reservation", b =>
                {
                    b.HasOne("PSAPIRestaurantSystem.Models.User", "ReservedBy")
                        .WithMany("Reservations")
                        .HasForeignKey("ReservedByUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PSAPIRestaurantSystem.Models.Review", b =>
                {
                    b.HasOne("PSAPIRestaurantSystem.Models.User", "User")
                        .WithMany("Reviews")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PSAPIRestaurantSystem.Models.TableOccupancy", b =>
                {
                    b.HasOne("PSAPIRestaurantSystem.Models.Order", "Order")
                        .WithMany("TableOccupancies")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PSAPIRestaurantSystem.Models.Reservation", "Reservation")
                        .WithMany("TableOccupancies")
                        .HasForeignKey("ReservationId");

                    b.HasOne("PSAPIRestaurantSystem.Models.Table", "Table")
                        .WithMany("TableOccupancies")
                        .HasForeignKey("TableId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PSAPIRestaurantSystem.Models.TakeoutOrder", b =>
                {
                    b.HasOne("PSAPIRestaurantSystem.Models.Waiter", "ManagedBy")
                        .WithMany("TakeoutOrders")
                        .HasForeignKey("ManagedByWaiterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PSAPIRestaurantSystem.Models.User", "OrderedBy")
                        .WithMany("TakeoutOrders")
                        .HasForeignKey("OrderedByUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PSAPIRestaurantSystem.Models.User", b =>
                {
                    b.HasOne("PSAPIRestaurantSystem.Models.Person", "Person")
                        .WithOne("User")
                        .HasForeignKey("PSAPIRestaurantSystem.Models.User", "PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PSAPIRestaurantSystem.Models.Waiter", b =>
                {
                    b.HasOne("PSAPIRestaurantSystem.Models.Employee", "Employee")
                        .WithOne("Waiter")
                        .HasForeignKey("PSAPIRestaurantSystem.Models.Waiter", "EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
